###AUFGABENBESCHREIBUNG

#Analysiere die textuelle Beschreibung eines UML-Klassendiagramms.
Identifiziere alle UML-Klassen und deren Attribute.
Erfasse alle Relationen (Assoziationen, Aggregationen, Kompositionen) zwischen den Klassen.
Bestimme die Kardinalitäten und Assoziationsnamen, falls vorhanden.
Erkenne spezielle Merkmale wie abstrakte Klassen, Interfaces oder technische Komponenten (z. B. Services).

#Konvertiere die erkannten Elemente in eine standardkonforme XMI-Struktur.
Erstelle ein XMI-Dokument, das dem UML 1.4 oder UML 2.0 Standard entspricht.
Jede Klasse muss als <UML:Class> Element modelliert werden, einschließlich ihrer Attribute.
Beziehungen werden als <UML:Association> mit den zugehörigen Rollen und Kardinalitäten dargestellt.
Falls Methoden vorhanden sind, müssen diese als <UML:Operation> mit Parametertypen definiert werden.
Falls ein UML-Profil oder ein Stereotyp erwähnt wird, füge dies korrekt als <UML:Stereotype> hinzu.

#Struktur und Metadaten des XMI-Dokuments:
Verwende <XMI.header> mit den Standard-Metadaten (Export-Tool, Versionsnummer, Zeitstempel).
Lege das UML-Modell in einem <UML:Model> Container an.
Falls mehrere Pakete existieren, ordne die Klassen unter <UML:Package> ein.

###EINSCHRÄNKUNGEN & FORMATVORGABEN

#Das XMI-Dokument muss syntaktisch korrekt und validierbar sein.

#Falls Informationen aus der textuellen Beschreibung fehlen, erstelle generische Platzhalter (z. B. unknownClass, unnamedAssociation).
    
#Falls eine textuelle Beschreibung eine Mehrdeutigkeit aufweist, kommentiere dies in der XMI-Datei als <XMI.comment>.
    
#Verwende dieselbe Namenskonvention wie in der textuellen Beschreibung, ohne zusätzliche Interpretationen.

#Schreibe keine einleitenden oder zusammenfassenden Passagen, die die syntaktische Korrektheit des Dokuments beeinträchtigen können. 

## BEISPIEL 1

###Input:

"Das Modell beschreibt eine Klasse Person, die die Attribute name (String) und age (Integer) besitzt.
Eine Person kann mehrere Adressen haben (has), und eine Adresse enthält die Attribute street und city.
Zusätzlich besitzt eine Person eine Beziehung zur Klasse Auto über die Assoziation posses,
was darauf hindeutet, dass eine Person ein Auto besitzt.
Die Klasse EmailService enthält eine Methode sendMail(content: String)."

###Ende Input

###Output:

<?xml version="1.0" encoding="UTF-8"?>
<XMI xmi.version="1.2" xmlns:UML="org.omg.xmi.namespace.UML">
  <XMI.header>
    <XMI.documentation>
      <XMI.exporter>ChatGPT UML Generator</XMI.exporter>
      <XMI.exporterVersion>1.0</XMI.exporterVersion>
    </XMI.documentation>
    <XMI.metamodel xmi.name="UML" xmi.version="1.4"/>
  </XMI.header>
  <XMI.content>
    <UML:Model name="UML_Klassendiagramm" isSpecification="false">
      <UML:Namespace.ownedElement>

        <!-- Klasse Person -->
        <UML:Class name="Person" visibility="public" isAbstract="false">
          <UML:Classifier.feature>
            <UML:Attribute name="name" visibility="public">
              <UML:StructuralFeature.type>
                <UML:DataType href="http://www.omg.org/spec/UML/20090901#String"/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute name="age" visibility="public">
              <UML:StructuralFeature.type>
                <UML:DataType href="http://www.omg.org/spec/UML/20090901#Integer"/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
          </UML:Classifier.feature>
        </UML:Class>

        <!-- Klasse Adresse -->
        <UML:Class name="Adresse" visibility="public">
          <UML:Classifier.feature>
            <UML:Attribute name="street" visibility="public"/>
            <UML:Attribute name="city" visibility="public"/>
          </UML:Classifier.feature>
        </UML:Class>

        <!-- Assoziation Person - Adresse -->
        <UML:Association name="has">
          <UML:Association.connection>
            <UML:AssociationEnd name="person" type="Person" multiplicity="1"/>
            <UML:AssociationEnd name="adresse" type="Adresse" multiplicity="*"/>
          </UML:Association.connection>
        </UML:Association>

        <!-- Klasse Auto -->
        <UML:Class name="Auto" visibility="public"/>

        <!-- Assoziation Person - Auto -->
        <UML:Association name="posses">
          <UML:Association.connection>
            <UML:AssociationEnd name="person" type="Person" multiplicity="1"/>
            <UML:AssociationEnd name="auto" type="Auto" multiplicity="1"/>
          </UML:Association.connection>
        </UML:Association>

        <!-- Klasse EmailService -->
        <UML:Class name="EmailService" visibility="public" isAbstract="false">
          <UML:Classifier.feature>
            <UML:Operation name="sendMail">
              <UML:Parameter name="content" kind="in">
                <UML:Parameter.type>
                  <UML:DataType href="http://www.omg.org/spec/UML/20090901#String"/>
                </UML:Parameter.type>
              </UML:Parameter>
            </UML:Operation>
          </UML:Classifier.feature>
        </UML:Class>

      </UML:Namespace.ownedElement>
    </UML:Model>
  </XMI.content>
</XMI>

### Ende Output