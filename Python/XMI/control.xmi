<?xml version="1.0" encoding="UTF-8"?>
<XMI verified="false" xmi.version="1.2" timestamp="2014-12-23T15:10:57" xmlns:UML="http://schema.omg.org/spec/UML/1.3">
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://umbrello.kde.org</XMI.exporter>
   <XMI.exporterVersion>1.6.9</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.metamodel xmi.version="1.3" href="UML.xml" xmi.name="UML"/>
 </XMI.header>
 <XMI.content>
  <UML:Model isSpecification="false" isAbstract="false" isLeaf="false" xmi.id="m1" isRoot="false" name="UML Model">
   <UML:Namespace.ownedElement>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="folder" name="folder"/>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="datatype" name="datatype"/>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="constructor" name="constructor"/>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="friend" name="friend"/>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="virtual" name="virtual"/>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Logical View" name="Logical View">
     <UML:Namespace.ownedElement>
      <UML:Package stereotype="folder" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Datatypes" name="Datatypes">
       <UML:Namespace.ownedElement>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="V2tPGtMiUTUS" name="int"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5zcvq5Bf0VZg" name="char"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Ps2zQ6Jv6CKM" name="bool"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3e5Y6Xy9WY4K" name="float"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dExbjXF6NH5n" name="double"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="NOiRY0nadq8h" name="short"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="O6qsctBF78oo" name="long"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="f3v1KyofLV6r" name="unsigned int"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="TrR6iXl4bcuD" name="unsigned short"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="T5QaCEMpHFqZ" name="unsigned long"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EfCX8GOb8ogo" name="string"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="TfT6e1faEe96" name="VTOptions"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xCp838KCShLy" name="VTResults"/>
       </UML:Namespace.ownedElement>
      </UML:Package>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="LRqx1k8UoZ20" comment="This class has one instance that creates both the Designer and the VTList. &#xa;&#xa;The initial screen for the controller is a screen where the user can choose an existing model to be editted or verified, or create a new model.&#xa;&#xa;Once the Designer is started, a model is created and suffices for verification, the user can select verification tools, that will registre in VTList. Once selected the user can enter the options for each VTInstance after which the user can start a verification round. " name="Control"/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="1i09Ugxp6lk5" name="Designer">
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="QIOnqibEh0Ig"/>
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hlM0WiPXOQfs" name="VTList"/>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="xa0SNeDvXLTm" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="false" isSpecification="false" xmi.id="D5hkBvlMTv3Y" type="LRqx1k8UoZ20" name="" aggregation="none"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="pjN9nlKkJJAh" type="1i09Ugxp6lk5" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="xMaSh3Eu6weH" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="false" isSpecification="false" xmi.id="rNdKJer8NEF9" type="LRqx1k8UoZ20" name="" aggregation="none"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="xZtEs2vnOTF5" type="hlM0WiPXOQfs" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="WUybOcqDySXH" name="VT"/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Udnq71wbTsAr" name="VTInstance"/>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="eYyozgoTHbIM" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="aCw346sY5wzW" type="hlM0WiPXOQfs" name="" aggregation="aggregate"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="Ue4Oj1qNam9X" type="WUybOcqDySXH" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="QxygXG27SwBW" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="3338y0dSehoL" type="hlM0WiPXOQfs" name="" aggregation="composite"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="ichGPqlnokTJ" type="Udnq71wbTsAr" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="Udnq71wbTsAr" xmi.id="0WQRSbxTdyaZ" client="WUybOcqDySXH" name=""/>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="CeakYIk1vB5X" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="Bi8PKHUjJ7Vv" type="Udnq71wbTsAr" name="" aggregation="composite"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="X4uVD6mQkKAG" type="TfT6e1faEe96" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="asHW1K3C29aK" name="VTRun"/>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="cwDKELbpBqLC" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="9MPBWxUvzXb6" type="Udnq71wbTsAr" name="" aggregation="composite"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="4DkejrRLled0" type="asHW1K3C29aK" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="HSg24J0zWn7X" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="tQhM72Ikq8J9" type="asHW1K3C29aK" name="" aggregation="composite"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="bzWFOWcdwIez" type="xCp838KCShLy" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Zcy5Q6aJUHdb" name="QProcess"/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Kwo6z7J90nk9" name="QThread"/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="1i09Ugxp6lk5" xmi.id="QIOnqibEh0Ig" parent="Zcy5Q6aJUHdb" name=""/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="51KhuyXfMIOj" name="QSettings"/>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="YQywL5jO425y" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="false" isSpecification="false" xmi.id="0ceLs047PDfn" type="LRqx1k8UoZ20" name="" aggregation="none"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="OBk7k7BIX7Cq" type="51KhuyXfMIOj" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="em7wsuSJPtk8" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="false" isSpecification="false" xmi.id="sPtjriV79fH4" type="LRqx1k8UoZ20" name="" aggregation="none"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="7L0hADUmxbgp" type="Zcy5Q6aJUHdb" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="1i09Ugxp6lk5" xmi.id="V66txozpDsW4" client="Zcy5Q6aJUHdb" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="asHW1K3C29aK" xmi.id="IlDjWYgZXd1I" client="Kwo6z7J90nk9" name=""/>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="KjZpKY6kOim8" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="false" isSpecification="false" xmi.id="P7V73ClWYrJc" type="LRqx1k8UoZ20" name="" aggregation="none"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="dry7c17wlgm5" type="Kwo6z7J90nk9" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
     </UML:Namespace.ownedElement>
     <XMI.extension xmi.extender="umbrello">
      <diagrams>
       <diagram showopsig="1" linecolor="#ff0000" snapx="25" showattribassocs="1" snapy="25" linewidth="0" showattsig="1" textcolor="#000000" isopen="1" showpackage="1" showpubliconly="1" showstereotype="1" name="class diagram" font="Sans Serif,10,-1,5,50,0,0,0,0,0" canvasheight="2157,222222222222" canvaswidth="1545,444444444444" localid="-1" snapcsgrid="0" showgrid="0" showops="1" griddotcolor="#d3d3d3" backgroundcolor="#ffffff" usefillcolor="1" fillcolor="#ffff00" zoom="90" xmi.id="rvMwitJOcZ4M" documentation="" showscope="1" snapgrid="0" showatts="1" type="1">
        <widgets>
         <classwidget linecolor="none" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="1" showpackage="1" x="-1302" showattsigs="601" showstereotype="1" y="-840" showattributes="1" font="Sans Serif,10,-1,5,50,0,0,0,0,0" localid="lNp1cgaoJlLR" width="63" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="LRqx1k8UoZ20" showscope="1" height="29" showopsigs="601"/>
         <classwidget linecolor="none" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="1" showpackage="1" x="-1479,333333333333" showattsigs="601" showstereotype="1" y="-594,7777777777777" showattributes="1" font="Sans Serif,10,-1,5,50,0,0,0,0,0" localid="WrYIQYGBv3CY" width="77" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="1i09Ugxp6lk5" showscope="1" height="29" showopsigs="601"/>
         <classwidget linecolor="none" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="1" showpackage="1" x="-950" showattsigs="601" showstereotype="1" y="-830" showattributes="1" font="Sans Serif,10,-1,5,50,0,0,0,0,0" localid="4afAMOEqFm8f" width="54" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="hlM0WiPXOQfs" showscope="1" height="29" showopsigs="601"/>
         <classwidget linecolor="none" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="1" showpackage="1" x="-738" showattsigs="601" showstereotype="1" y="-830" showattributes="1" font="Sans Serif,10,-1,5,50,0,0,0,0,0" localid="6MNSYcbV9Sk0" width="30" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="WUybOcqDySXH" showscope="1" height="40" showopsigs="601"/>
         <classwidget linecolor="none" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="1" showpackage="1" x="-926" showattsigs="601" showstereotype="1" y="-649" showattributes="1" font="Sans Serif,10,-1,5,50,0,0,0,0,0" localid="U14STZhXu4zS" width="90" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="Udnq71wbTsAr" showscope="1" height="29" showopsigs="601"/>
         <datatypewidget width="100" showstereotype="1" x="-690" usesdiagramusefillcolor="0" y="-635" usesdiagramfillcolor="0" isinstance="0" localid="P4fodSb109BH" fillcolor="#ffff00" height="40" linecolor="none" xmi.id="TfT6e1faEe96" textcolor="#000000" usefillcolor="1" linewidth="0" font="Sans Serif,10,-1,5,50,0,0,0,0,0"/>
         <classwidget linecolor="none" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="1" showpackage="1" x="-916" showattsigs="601" showstereotype="1" y="-490" showattributes="1" font="Sans Serif,10,-1,5,50,0,0,0,0,0" localid="R23i9XbebW9p" width="56" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="asHW1K3C29aK" showscope="1" height="29" showopsigs="601"/>
         <datatypewidget width="100" showstereotype="1" x="-691" usesdiagramusefillcolor="0" y="-498" usesdiagramfillcolor="0" isinstance="0" localid="eprbLThNgP1N" fillcolor="#ffff00" height="40" linecolor="none" xmi.id="xCp838KCShLy" textcolor="#000000" usefillcolor="1" linewidth="0" font="Sans Serif,10,-1,5,50,0,0,0,0,0"/>
         <classwidget linecolor="none" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="1" showpackage="1" x="-1290" showattsigs="601" showstereotype="1" y="-967,7777709960938" showattributes="1" font="Sans Serif,10,-1,5,50,0,0,0,0,0" localid="FP9YQDYzibM4" width="82" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="51KhuyXfMIOj" showscope="1" height="29" showopsigs="601"/>
         <classwidget linecolor="none" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="1" showpackage="1" x="-1487,777777777778" showattsigs="601" showstereotype="1" y="-758,8888888888889" showattributes="1" font="Sans Serif,10,-1,5,50,0,0,0,0,0" localid="3sl3xqcMtVJy" width="79" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="Zcy5Q6aJUHdb" showscope="1" height="29" showopsigs="601"/>
         <classwidget linecolor="none" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="1" showpackage="1" x="-1122,222222222222" showattsigs="601" showstereotype="1" y="-506,6666666666667" showattributes="1" font="Sans Serif,10,-1,5,50,0,0,0,0,0" localid="aqBojhsIh2yM" width="72" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="Kwo6z7J90nk9" showscope="1" height="29" showopsigs="601"/>
        </widgets>
        <messages/>
        <associations>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="1" widgetaid="LRqx1k8UoZ20" usesdiagramfillcolor="1" fillcolor="none" linecolor="none" seqnum="" totalcounta="2" xmi.id="xMaSh3Eu6weH" widgetbid="hlM0WiPXOQfs" totalcountb="2" type="512" textcolor="none" usefillcolor="1" linewidth="none" font="Sans Serif,10,-1,5,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="-1239" starty="-815,5"/>
           <endpoint endx="-950" endy="-815,5"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="hlM0WiPXOQfs" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="none" seqnum="" totalcounta="2" xmi.id="eYyozgoTHbIM" widgetbid="WUybOcqDySXH" totalcountb="2" type="501" textcolor="none" usefillcolor="1" linewidth="none" font="Sans Serif,10,-1,5,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="-896" starty="-801"/>
           <endpoint endx="-738" endy="-801"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="hlM0WiPXOQfs" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="none" seqnum="" totalcounta="2" xmi.id="QxygXG27SwBW" widgetbid="Udnq71wbTsAr" totalcountb="2" type="510" textcolor="none" usefillcolor="1" linewidth="none" font="Sans Serif,10,-1,5,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="-896" starty="-801"/>
           <endpoint endx="-896" endy="-649"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="WUybOcqDySXH" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="none" seqnum="" totalcounta="2" xmi.id="0WQRSbxTdyaZ" widgetbid="Udnq71wbTsAr" totalcountb="2" type="502" textcolor="none" usefillcolor="1" linewidth="none" font="Sans Serif,10,-1,5,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="-738" starty="-790"/>
           <endpoint endx="-836" endy="-649"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="Udnq71wbTsAr" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="none" seqnum="" totalcounta="2" xmi.id="CeakYIk1vB5X" widgetbid="TfT6e1faEe96" totalcountb="2" type="510" textcolor="none" usefillcolor="1" linewidth="none" font="Sans Serif,10,-1,5,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="-836" starty="-620"/>
           <endpoint endx="-690" endy="-620"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="Udnq71wbTsAr" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="none" seqnum="" totalcounta="2" xmi.id="cwDKELbpBqLC" widgetbid="asHW1K3C29aK" totalcountb="2" type="510" textcolor="none" usefillcolor="1" linewidth="none" font="Sans Serif,10,-1,5,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="-888" starty="-620"/>
           <endpoint endx="-888" endy="-490"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="asHW1K3C29aK" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="none" seqnum="" totalcounta="2" xmi.id="HSg24J0zWn7X" widgetbid="xCp838KCShLy" totalcountb="2" type="510" textcolor="none" usefillcolor="1" linewidth="none" font="Sans Serif,10,-1,5,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="-860" starty="-478"/>
           <endpoint endx="-691" endy="-478"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="LRqx1k8UoZ20" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="none" seqnum="" totalcounta="2" xmi.id="YQywL5jO425y" widgetbid="51KhuyXfMIOj" totalcountb="2" type="512" textcolor="none" usefillcolor="1" linewidth="none" font="Sans Serif,10,-1,5,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="-1249" starty="-840"/>
           <endpoint endx="-1249" endy="-938,7777709960938"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="LRqx1k8UoZ20" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="none" seqnum="" totalcounta="2" xmi.id="em7wsuSJPtk8" widgetbid="Zcy5Q6aJUHdb" totalcountb="2" type="512" textcolor="none" usefillcolor="1" linewidth="none" font="Sans Serif,10,-1,5,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="-1302" starty="-811"/>
           <endpoint endx="-1408,777777777778" endy="-758,8888888888889"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="32" widgetaid="Zcy5Q6aJUHdb" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="none" seqnum="" totalcounta="2" xmi.id="V66txozpDsW4" widgetbid="1i09Ugxp6lk5" totalcountb="2" type="502" textcolor="none" usefillcolor="1" linewidth="none" font="Sans Serif,10,-1,5,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="-1443,777777777778" starty="-729,8888888888889"/>
           <endpoint endx="-1443,777777777778" endy="-594,7777777777777"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="36" widgetaid="Kwo6z7J90nk9" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="none" seqnum="" totalcounta="2" xmi.id="IlDjWYgZXd1I" widgetbid="asHW1K3C29aK" totalcountb="2" type="502" textcolor="none" usefillcolor="1" linewidth="none" font="Sans Serif,10,-1,5,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="-1050,222222222222" starty="-490"/>
           <endpoint endx="-916" endy="-490"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="LRqx1k8UoZ20" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="none" seqnum="" totalcounta="2" xmi.id="KjZpKY6kOim8" widgetbid="Kwo6z7J90nk9" totalcountb="2" type="512" textcolor="none" usefillcolor="1" linewidth="none" font="Sans Serif,10,-1,5,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="-1239" starty="-811"/>
           <endpoint endx="-1122,222222222222" endy="-506,6666666666667"/>
          </linepath>
         </assocwidget>
        </associations>
       </diagram>
      </diagrams>
     </XMI.extension>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Use Case View" name="Use Case View">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Component View" name="Component View">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Deployment View" name="Deployment View">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Entity Relationship Model" name="Entity Relationship Model">
     <UML:Namespace.ownedElement/>
    </UML:Model>
   </UML:Namespace.ownedElement>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello">
  <docsettings viewid="rvMwitJOcZ4M" uniqueid="dry7c17wlgm5" documentation=""/>
  <listview>
   <listitem open="1" type="800" id="Views">
    <listitem open="1" type="821" id="Component View"/>
    <listitem open="1" type="827" id="Deployment View"/>
    <listitem open="1" type="836" id="Entity Relationship Model"/>
    <listitem open="1" type="801" id="Logical View">
     <listitem open="0" type="807" id="rvMwitJOcZ4M" label="class diagram"/>
     <listitem open="1" type="813" id="LRqx1k8UoZ20"/>
     <listitem open="0" type="830" id="Datatypes">
      <listitem open="1" type="829" id="Ps2zQ6Jv6CKM"/>
      <listitem open="1" type="829" id="5zcvq5Bf0VZg"/>
      <listitem open="1" type="829" id="dExbjXF6NH5n"/>
      <listitem open="1" type="829" id="3e5Y6Xy9WY4K"/>
      <listitem open="1" type="829" id="V2tPGtMiUTUS"/>
      <listitem open="1" type="829" id="O6qsctBF78oo"/>
      <listitem open="1" type="829" id="NOiRY0nadq8h"/>
      <listitem open="1" type="829" id="EfCX8GOb8ogo"/>
      <listitem open="1" type="829" id="f3v1KyofLV6r"/>
      <listitem open="1" type="829" id="T5QaCEMpHFqZ"/>
      <listitem open="1" type="829" id="TrR6iXl4bcuD"/>
      <listitem open="1" type="829" id="TfT6e1faEe96"/>
      <listitem open="1" type="829" id="xCp838KCShLy"/>
     </listitem>
     <listitem open="1" type="813" id="1i09Ugxp6lk5"/>
     <listitem open="1" type="813" id="Zcy5Q6aJUHdb"/>
     <listitem open="1" type="813" id="51KhuyXfMIOj"/>
     <listitem open="1" type="813" id="Kwo6z7J90nk9"/>
     <listitem open="1" type="813" id="WUybOcqDySXH"/>
     <listitem open="1" type="813" id="Udnq71wbTsAr"/>
     <listitem open="1" type="813" id="hlM0WiPXOQfs"/>
     <listitem open="1" type="813" id="asHW1K3C29aK"/>
    </listitem>
    <listitem open="1" type="802" id="Use Case View"/>
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="C++">
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="LRqx1k8UoZ20" id="LRqx1k8UoZ20" fileName="Control" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;control.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="7602176" parent_id="em7wsuSJPtk8" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="em7wsuSJPtk8" writeOutText="false" indentLevel="1" text="public QProcess ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="em7wsuSJPtk8" writeOutText="false" classfield_id="em7wsuSJPtk8" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="em7wsuSJPtk8" writeOutText="false" classfield_id="em7wsuSJPtk8" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="em7wsuSJPtk8" writeOutText="false" classfield_id="em7wsuSJPtk8" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="em7wsuSJPtk8" writeOutText="false" classfield_id="em7wsuSJPtk8" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;QProcess item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;QProcess>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="em7wsuSJPtk8" writeOutText="false" classfield_id="em7wsuSJPtk8" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="477218589" parent_id="KjZpKY6kOim8" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="KjZpKY6kOim8" writeOutText="false" indentLevel="1" text="public QThread ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="KjZpKY6kOim8" writeOutText="false" classfield_id="KjZpKY6kOim8" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="KjZpKY6kOim8" writeOutText="false" classfield_id="KjZpKY6kOim8" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="KjZpKY6kOim8" writeOutText="false" classfield_id="KjZpKY6kOim8" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="KjZpKY6kOim8" writeOutText="false" classfield_id="KjZpKY6kOim8" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;QThread item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;QThread>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="KjZpKY6kOim8" writeOutText="false" classfield_id="KjZpKY6kOim8" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="1i09Ugxp6lk5" id="1i09Ugxp6lk5" fileName="Designer" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;designer.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="7536755" parent_id="V66txozpDsW4" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="V66txozpDsW4" writeOutText="false" indentLevel="1" text="public QProcess ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="V66txozpDsW4" writeOutText="false" classfield_id="V66txozpDsW4" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="V66txozpDsW4" writeOutText="false" classfield_id="V66txozpDsW4" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="V66txozpDsW4" writeOutText="false" classfield_id="V66txozpDsW4" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="V66txozpDsW4" writeOutText="false" classfield_id="V66txozpDsW4" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;QProcess item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;QProcess>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="V66txozpDsW4" writeOutText="false" classfield_id="V66txozpDsW4" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="hlM0WiPXOQfs" id="hlM0WiPXOQfs" fileName="VTList" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;vtlist.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="eYyozgoTHbIM" writeOutText="false" classfield_id="eYyozgoTHbIM" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="eYyozgoTHbIM" writeOutText="false" classfield_id="eYyozgoTHbIM" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="eYyozgoTHbIM" writeOutText="false" classfield_id="eYyozgoTHbIM" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="eYyozgoTHbIM" writeOutText="false" classfield_id="eYyozgoTHbIM" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTList item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTList>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="eYyozgoTHbIM" writeOutText="false" classfield_id="eYyozgoTHbIM" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="0" parent_id="QxygXG27SwBW" writeOutText="false" classfield_id="QxygXG27SwBW" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="1" parent_id="QxygXG27SwBW" writeOutText="false" classfield_id="QxygXG27SwBW" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="2" parent_id="QxygXG27SwBW" writeOutText="false" classfield_id="QxygXG27SwBW" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="3" parent_id="QxygXG27SwBW" writeOutText="false" classfield_id="QxygXG27SwBW" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTList item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTList>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="4" parent_id="QxygXG27SwBW" writeOutText="false" classfield_id="QxygXG27SwBW" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="3" parent_id="eYyozgoTHbIM" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="eYyozgoTHbIM" writeOutText="false" indentLevel="1" text="public VTList ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="eYyozgoTHbIM" writeOutText="false" classfield_id="eYyozgoTHbIM" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="eYyozgoTHbIM" writeOutText="false" classfield_id="eYyozgoTHbIM" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="eYyozgoTHbIM" writeOutText="false" classfield_id="eYyozgoTHbIM" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="eYyozgoTHbIM" writeOutText="false" classfield_id="eYyozgoTHbIM" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTList item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTList>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="eYyozgoTHbIM" writeOutText="false" classfield_id="eYyozgoTHbIM" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="QxygXG27SwBW" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" text="public VTList ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="0" parent_id="QxygXG27SwBW" writeOutText="false" classfield_id="QxygXG27SwBW" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="1" parent_id="QxygXG27SwBW" writeOutText="false" classfield_id="QxygXG27SwBW" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="2" parent_id="QxygXG27SwBW" writeOutText="false" classfield_id="QxygXG27SwBW" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="3" parent_id="QxygXG27SwBW" writeOutText="false" classfield_id="QxygXG27SwBW" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTList item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTList>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="4" parent_id="QxygXG27SwBW" writeOutText="false" classfield_id="QxygXG27SwBW" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="WUybOcqDySXH" id="WUybOcqDySXH" fileName="VT" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;vt.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="eYyozgoTHbIM" writeOutText="false" classfield_id="eYyozgoTHbIM" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="eYyozgoTHbIM" writeOutText="false" classfield_id="eYyozgoTHbIM" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="eYyozgoTHbIM" writeOutText="false" classfield_id="eYyozgoTHbIM" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="eYyozgoTHbIM" writeOutText="false" classfield_id="eYyozgoTHbIM" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTList item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTList>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="eYyozgoTHbIM" writeOutText="false" classfield_id="eYyozgoTHbIM" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="3" parent_id="eYyozgoTHbIM" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="eYyozgoTHbIM" writeOutText="false" indentLevel="1" text="public VT ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="eYyozgoTHbIM" writeOutText="false" classfield_id="eYyozgoTHbIM" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="eYyozgoTHbIM" writeOutText="false" classfield_id="eYyozgoTHbIM" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="eYyozgoTHbIM" writeOutText="false" classfield_id="eYyozgoTHbIM" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="eYyozgoTHbIM" writeOutText="false" classfield_id="eYyozgoTHbIM" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTList item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTList>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="eYyozgoTHbIM" writeOutText="false" classfield_id="eYyozgoTHbIM" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="Udnq71wbTsAr" id="Udnq71wbTsAr" fileName="VTInstance" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;vtinstance.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="QxygXG27SwBW" writeOutText="false" classfield_id="QxygXG27SwBW" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="QxygXG27SwBW" writeOutText="false" classfield_id="QxygXG27SwBW" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="QxygXG27SwBW" writeOutText="false" classfield_id="QxygXG27SwBW" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="QxygXG27SwBW" writeOutText="false" classfield_id="QxygXG27SwBW" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTInstance item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTInstance>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="QxygXG27SwBW" writeOutText="false" classfield_id="QxygXG27SwBW" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="0" parent_id="CeakYIk1vB5X" writeOutText="false" classfield_id="CeakYIk1vB5X" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="1" parent_id="CeakYIk1vB5X" writeOutText="false" classfield_id="CeakYIk1vB5X" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="2" parent_id="CeakYIk1vB5X" writeOutText="false" classfield_id="CeakYIk1vB5X" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="3" parent_id="CeakYIk1vB5X" writeOutText="false" classfield_id="CeakYIk1vB5X" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTInstance item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTInstance>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="4" parent_id="CeakYIk1vB5X" writeOutText="false" classfield_id="CeakYIk1vB5X" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_10" accessType="0" parent_id="cwDKELbpBqLC" writeOutText="false" classfield_id="cwDKELbpBqLC" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_11" accessType="1" parent_id="cwDKELbpBqLC" writeOutText="false" classfield_id="cwDKELbpBqLC" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_12" accessType="2" parent_id="cwDKELbpBqLC" writeOutText="false" classfield_id="cwDKELbpBqLC" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_13" accessType="3" parent_id="cwDKELbpBqLC" writeOutText="false" classfield_id="cwDKELbpBqLC" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTInstance item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTInstance>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_14" accessType="4" parent_id="cwDKELbpBqLC" writeOutText="false" classfield_id="cwDKELbpBqLC" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="4" parent_id="QxygXG27SwBW" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" text="public VTInstance ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="QxygXG27SwBW" writeOutText="false" classfield_id="QxygXG27SwBW" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="QxygXG27SwBW" writeOutText="false" classfield_id="QxygXG27SwBW" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="QxygXG27SwBW" writeOutText="false" classfield_id="QxygXG27SwBW" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="QxygXG27SwBW" writeOutText="false" classfield_id="QxygXG27SwBW" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTInstance item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTInstance>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="QxygXG27SwBW" writeOutText="false" classfield_id="QxygXG27SwBW" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="CeakYIk1vB5X" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="CeakYIk1vB5X" writeOutText="false" indentLevel="1" text="public VTInstance ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="0" parent_id="CeakYIk1vB5X" writeOutText="false" classfield_id="CeakYIk1vB5X" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="1" parent_id="CeakYIk1vB5X" writeOutText="false" classfield_id="CeakYIk1vB5X" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="2" parent_id="CeakYIk1vB5X" writeOutText="false" classfield_id="CeakYIk1vB5X" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="3" parent_id="CeakYIk1vB5X" writeOutText="false" classfield_id="CeakYIk1vB5X" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTInstance item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTInstance>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="4" parent_id="CeakYIk1vB5X" writeOutText="false" classfield_id="CeakYIk1vB5X" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="cwDKELbpBqLC" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" text="public VTInstance ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_10" accessType="0" parent_id="cwDKELbpBqLC" writeOutText="false" classfield_id="cwDKELbpBqLC" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_11" accessType="1" parent_id="cwDKELbpBqLC" writeOutText="false" classfield_id="cwDKELbpBqLC" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_12" accessType="2" parent_id="cwDKELbpBqLC" writeOutText="false" classfield_id="cwDKELbpBqLC" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_13" accessType="3" parent_id="cwDKELbpBqLC" writeOutText="false" classfield_id="cwDKELbpBqLC" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTInstance item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTInstance>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_14" accessType="4" parent_id="cwDKELbpBqLC" writeOutText="false" classfield_id="cwDKELbpBqLC" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="asHW1K3C29aK" id="asHW1K3C29aK" fileName="VTRun" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;vtrun.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="cwDKELbpBqLC" writeOutText="false" classfield_id="cwDKELbpBqLC" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="cwDKELbpBqLC" writeOutText="false" classfield_id="cwDKELbpBqLC" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="cwDKELbpBqLC" writeOutText="false" classfield_id="cwDKELbpBqLC" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="cwDKELbpBqLC" writeOutText="false" classfield_id="cwDKELbpBqLC" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTRun item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTRun>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="cwDKELbpBqLC" writeOutText="false" classfield_id="cwDKELbpBqLC" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="0" parent_id="HSg24J0zWn7X" writeOutText="false" classfield_id="HSg24J0zWn7X" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="1" parent_id="HSg24J0zWn7X" writeOutText="false" classfield_id="HSg24J0zWn7X" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="2" parent_id="HSg24J0zWn7X" writeOutText="false" classfield_id="HSg24J0zWn7X" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="3" parent_id="HSg24J0zWn7X" writeOutText="false" classfield_id="HSg24J0zWn7X" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTRun item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTRun>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="4" parent_id="HSg24J0zWn7X" writeOutText="false" classfield_id="HSg24J0zWn7X" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="4" parent_id="cwDKELbpBqLC" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" text="public VTRun ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="cwDKELbpBqLC" writeOutText="false" classfield_id="cwDKELbpBqLC" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="cwDKELbpBqLC" writeOutText="false" classfield_id="cwDKELbpBqLC" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="cwDKELbpBqLC" writeOutText="false" classfield_id="cwDKELbpBqLC" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="cwDKELbpBqLC" writeOutText="false" classfield_id="cwDKELbpBqLC" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTRun item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTRun>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="cwDKELbpBqLC" writeOutText="false" classfield_id="cwDKELbpBqLC" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="HSg24J0zWn7X" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="HSg24J0zWn7X" writeOutText="false" indentLevel="1" text="public VTRun ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="0" parent_id="HSg24J0zWn7X" writeOutText="false" classfield_id="HSg24J0zWn7X" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="1" parent_id="HSg24J0zWn7X" writeOutText="false" classfield_id="HSg24J0zWn7X" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="2" parent_id="HSg24J0zWn7X" writeOutText="false" classfield_id="HSg24J0zWn7X" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="3" parent_id="HSg24J0zWn7X" writeOutText="false" classfield_id="HSg24J0zWn7X" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTRun item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTRun>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="4" parent_id="HSg24J0zWn7X" writeOutText="false" classfield_id="HSg24J0zWn7X" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="6357090" parent_id="IlDjWYgZXd1I" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="IlDjWYgZXd1I" writeOutText="false" indentLevel="1" text="public QThread ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="IlDjWYgZXd1I" writeOutText="false" classfield_id="IlDjWYgZXd1I" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="IlDjWYgZXd1I" writeOutText="false" classfield_id="IlDjWYgZXd1I" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="IlDjWYgZXd1I" writeOutText="false" classfield_id="IlDjWYgZXd1I" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="IlDjWYgZXd1I" writeOutText="false" classfield_id="IlDjWYgZXd1I" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;QThread item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;QThread>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="IlDjWYgZXd1I" writeOutText="false" classfield_id="IlDjWYgZXd1I" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="Zcy5Q6aJUHdb" id="Zcy5Q6aJUHdb" fileName="QProcess" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qprocess.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="7536755" parent_id="em7wsuSJPtk8" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="em7wsuSJPtk8" writeOutText="false" indentLevel="1" text="public Control ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="em7wsuSJPtk8" writeOutText="false" classfield_id="em7wsuSJPtk8" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="em7wsuSJPtk8" writeOutText="false" classfield_id="em7wsuSJPtk8" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="em7wsuSJPtk8" writeOutText="false" classfield_id="em7wsuSJPtk8" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="em7wsuSJPtk8" writeOutText="false" classfield_id="em7wsuSJPtk8" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;Control item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;Control>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="em7wsuSJPtk8" writeOutText="false" classfield_id="em7wsuSJPtk8" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="6357090" parent_id="V66txozpDsW4" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="V66txozpDsW4" writeOutText="false" indentLevel="1" text="public Designer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="V66txozpDsW4" writeOutText="false" classfield_id="V66txozpDsW4" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="V66txozpDsW4" writeOutText="false" classfield_id="V66txozpDsW4" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="V66txozpDsW4" writeOutText="false" classfield_id="V66txozpDsW4" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="V66txozpDsW4" writeOutText="false" classfield_id="V66txozpDsW4" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;Designer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;Designer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="V66txozpDsW4" writeOutText="false" classfield_id="V66txozpDsW4" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="Kwo6z7J90nk9" id="Kwo6z7J90nk9" fileName="QThread" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qthread.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="6357090" parent_id="IlDjWYgZXd1I" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="IlDjWYgZXd1I" writeOutText="false" indentLevel="1" text="public VTRun ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="IlDjWYgZXd1I" writeOutText="false" classfield_id="IlDjWYgZXd1I" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="IlDjWYgZXd1I" writeOutText="false" classfield_id="IlDjWYgZXd1I" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="IlDjWYgZXd1I" writeOutText="false" classfield_id="IlDjWYgZXd1I" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="IlDjWYgZXd1I" writeOutText="false" classfield_id="IlDjWYgZXd1I" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTRun item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTRun>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="IlDjWYgZXd1I" writeOutText="false" classfield_id="IlDjWYgZXd1I" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="6357090" parent_id="KjZpKY6kOim8" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="KjZpKY6kOim8" writeOutText="false" indentLevel="1" text="public Control ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="KjZpKY6kOim8" writeOutText="false" classfield_id="KjZpKY6kOim8" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="KjZpKY6kOim8" writeOutText="false" classfield_id="KjZpKY6kOim8" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="KjZpKY6kOim8" writeOutText="false" classfield_id="KjZpKY6kOim8" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="KjZpKY6kOim8" writeOutText="false" classfield_id="KjZpKY6kOim8" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;Control item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;Control>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="KjZpKY6kOim8" writeOutText="false" classfield_id="KjZpKY6kOim8" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="51KhuyXfMIOj" id="51KhuyXfMIOj" fileName="QSettings" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qsettings.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="LRqx1k8UoZ20" id="cppheaderLRqx1k8UoZ20" fileName="Control" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef CONTROL_H&amp;#010;#define CONTROL_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;designer.h&quot;&amp;#010;#include &quot;vtlist.h&quot;&amp;#010;#include &quot;qsettings.h&quot;&amp;#010;#include &quot;qprocess.h&quot;&amp;#010;#include &quot;qthread.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="LRqx1k8UoZ20" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class Control&amp;#010;This class has one instance that creates both the Designer and the VTList. &amp;#010;&amp;#010;The initial screen for the controller is a screen where the user can choose an existing model to be editted or verified, or create a new model.&amp;#010;&amp;#010;Once the Designer is started, a model is created and suffices for verification, the user can select verification tools, that will registre in VTList. Once selected the user can enter the options for each VTInstance after which the user can start a verification round. "/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="Control () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //CONTROL_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="6357090" parent_id="em7wsuSJPtk8" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="em7wsuSJPtk8" writeOutText="false" indentLevel="1" text=" QProcess ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="em7wsuSJPtk8" writeOutText="false" indentLevel="1" classfield_id="em7wsuSJPtk8" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="em7wsuSJPtk8" writeOutText="false" indentLevel="1" classfield_id="em7wsuSJPtk8" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="em7wsuSJPtk8" writeOutText="false" indentLevel="1" classfield_id="em7wsuSJPtk8" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="em7wsuSJPtk8" writeOutText="false" indentLevel="1" classfield_id="em7wsuSJPtk8" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;QProcess item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;QProcess>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="em7wsuSJPtk8" writeOutText="false" indentLevel="1" classfield_id="em7wsuSJPtk8" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="6357090" parent_id="KjZpKY6kOim8" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="KjZpKY6kOim8" writeOutText="false" indentLevel="1" text=" QThread ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="KjZpKY6kOim8" writeOutText="false" indentLevel="1" classfield_id="KjZpKY6kOim8" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="KjZpKY6kOim8" writeOutText="false" indentLevel="1" classfield_id="KjZpKY6kOim8" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="KjZpKY6kOim8" writeOutText="false" indentLevel="1" classfield_id="KjZpKY6kOim8" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="KjZpKY6kOim8" writeOutText="false" indentLevel="1" classfield_id="KjZpKY6kOim8" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;QThread item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;QThread>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="KjZpKY6kOim8" writeOutText="false" indentLevel="1" classfield_id="KjZpKY6kOim8" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="1i09Ugxp6lk5" id="cppheader1i09Ugxp6lk5" fileName="Designer" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef DESIGNER_H&amp;#010;#define DESIGNER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qprocess.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="1i09Ugxp6lk5" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class Designer&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="Designer () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //DESIGNER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="6357090" parent_id="V66txozpDsW4" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="V66txozpDsW4" writeOutText="false" indentLevel="1" text=" QProcess ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="V66txozpDsW4" writeOutText="false" indentLevel="1" classfield_id="V66txozpDsW4" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="V66txozpDsW4" writeOutText="false" indentLevel="1" classfield_id="V66txozpDsW4" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="V66txozpDsW4" writeOutText="false" indentLevel="1" classfield_id="V66txozpDsW4" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="V66txozpDsW4" writeOutText="false" indentLevel="1" classfield_id="V66txozpDsW4" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;QProcess item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;QProcess>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="V66txozpDsW4" writeOutText="false" indentLevel="1" classfield_id="V66txozpDsW4" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="hlM0WiPXOQfs" id="cppheaderhlM0WiPXOQfs" fileName="VTList" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef VTLIST_H&amp;#010;#define VTLIST_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;vt.h&quot;&amp;#010;#include &quot;vtinstance.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="hlM0WiPXOQfs" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class VTList&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock role_id="0" tag="tblock_0" parent_id="eYyozgoTHbIM" writeOutText="false" indentLevel="1" text=" VTList ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="0" tag="_0" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" text=" VTList ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="VTList () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="eYyozgoTHbIM" writeOutText="false" indentLevel="1" classfield_id="eYyozgoTHbIM" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="eYyozgoTHbIM" writeOutText="false" indentLevel="1" classfield_id="eYyozgoTHbIM" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="eYyozgoTHbIM" writeOutText="false" indentLevel="1" classfield_id="eYyozgoTHbIM" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="eYyozgoTHbIM" writeOutText="false" indentLevel="1" classfield_id="eYyozgoTHbIM" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTList item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTList>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="eYyozgoTHbIM" writeOutText="false" indentLevel="1" classfield_id="eYyozgoTHbIM" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="0" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" classfield_id="QxygXG27SwBW" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="1" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" classfield_id="QxygXG27SwBW" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="2" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" classfield_id="QxygXG27SwBW" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="3" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" classfield_id="QxygXG27SwBW" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTList item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTList>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="4" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" classfield_id="QxygXG27SwBW" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //VTLIST_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="3" parent_id="eYyozgoTHbIM" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="tblock_0" parent_id="eYyozgoTHbIM" writeOutText="false" indentLevel="1" text=" VTList ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="eYyozgoTHbIM" writeOutText="false" indentLevel="1" classfield_id="eYyozgoTHbIM" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="eYyozgoTHbIM" writeOutText="false" indentLevel="1" classfield_id="eYyozgoTHbIM" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="eYyozgoTHbIM" writeOutText="false" indentLevel="1" classfield_id="eYyozgoTHbIM" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="eYyozgoTHbIM" writeOutText="false" indentLevel="1" classfield_id="eYyozgoTHbIM" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTList item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTList>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="eYyozgoTHbIM" writeOutText="false" indentLevel="1" classfield_id="eYyozgoTHbIM" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="QxygXG27SwBW" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="_0" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" text=" VTList ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="0" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" classfield_id="QxygXG27SwBW" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="1" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" classfield_id="QxygXG27SwBW" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="2" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" classfield_id="QxygXG27SwBW" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="3" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" classfield_id="QxygXG27SwBW" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTList item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTList>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="4" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" classfield_id="QxygXG27SwBW" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="WUybOcqDySXH" id="cppheaderWUybOcqDySXH" fileName="VT" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef VT_H&amp;#010;#define VT_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;vtinstance.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //VT_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="3" parent_id="eYyozgoTHbIM" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="tblock_0" parent_id="eYyozgoTHbIM" writeOutText="false" indentLevel="1" text=" VT ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="eYyozgoTHbIM" writeOutText="false" indentLevel="1" classfield_id="eYyozgoTHbIM" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="eYyozgoTHbIM" writeOutText="false" indentLevel="1" classfield_id="eYyozgoTHbIM" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="eYyozgoTHbIM" writeOutText="false" indentLevel="1" classfield_id="eYyozgoTHbIM" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="eYyozgoTHbIM" writeOutText="false" indentLevel="1" classfield_id="eYyozgoTHbIM" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTList item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTList>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="eYyozgoTHbIM" writeOutText="false" indentLevel="1" classfield_id="eYyozgoTHbIM" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="Udnq71wbTsAr" id="cppheaderUdnq71wbTsAr" fileName="VTInstance" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef VTINSTANCE_H&amp;#010;#define VTINSTANCE_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;vtrun.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="Udnq71wbTsAr" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class VTInstance&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock role_id="1" tag="tblock_0" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" text=" VTInstance ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="0" tag="_5" parent_id="CeakYIk1vB5X" writeOutText="false" indentLevel="1" text=" VTInstance ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="0" tag="_11" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" text=" VTInstance ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="VTInstance () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" classfield_id="QxygXG27SwBW" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="1" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" classfield_id="QxygXG27SwBW" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="2" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" classfield_id="QxygXG27SwBW" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="3" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" classfield_id="QxygXG27SwBW" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTInstance item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTInstance>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_5" accessType="4" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" classfield_id="QxygXG27SwBW" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="0" parent_id="CeakYIk1vB5X" writeOutText="false" indentLevel="1" classfield_id="CeakYIk1vB5X" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="1" parent_id="CeakYIk1vB5X" writeOutText="false" indentLevel="1" classfield_id="CeakYIk1vB5X" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="2" parent_id="CeakYIk1vB5X" writeOutText="false" indentLevel="1" classfield_id="CeakYIk1vB5X" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="3" parent_id="CeakYIk1vB5X" writeOutText="false" indentLevel="1" classfield_id="CeakYIk1vB5X" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTInstance item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTInstance>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_10" accessType="4" parent_id="CeakYIk1vB5X" writeOutText="false" indentLevel="1" classfield_id="CeakYIk1vB5X" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_11" accessType="0" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" classfield_id="cwDKELbpBqLC" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_12" accessType="1" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" classfield_id="cwDKELbpBqLC" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_13" accessType="2" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" classfield_id="cwDKELbpBqLC" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_14" accessType="3" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" classfield_id="cwDKELbpBqLC" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTInstance item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTInstance>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_15" accessType="4" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" classfield_id="cwDKELbpBqLC" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //VTINSTANCE_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="4" parent_id="QxygXG27SwBW" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="tblock_0" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" text=" VTInstance ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" classfield_id="QxygXG27SwBW" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="1" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" classfield_id="QxygXG27SwBW" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="2" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" classfield_id="QxygXG27SwBW" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="3" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" classfield_id="QxygXG27SwBW" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTInstance item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTInstance>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_5" accessType="4" parent_id="QxygXG27SwBW" writeOutText="false" indentLevel="1" classfield_id="QxygXG27SwBW" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="CeakYIk1vB5X" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="_5" parent_id="CeakYIk1vB5X" writeOutText="false" indentLevel="1" text=" VTInstance ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="0" parent_id="CeakYIk1vB5X" writeOutText="false" indentLevel="1" classfield_id="CeakYIk1vB5X" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="1" parent_id="CeakYIk1vB5X" writeOutText="false" indentLevel="1" classfield_id="CeakYIk1vB5X" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="2" parent_id="CeakYIk1vB5X" writeOutText="false" indentLevel="1" classfield_id="CeakYIk1vB5X" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="3" parent_id="CeakYIk1vB5X" writeOutText="false" indentLevel="1" classfield_id="CeakYIk1vB5X" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTInstance item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTInstance>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_10" accessType="4" parent_id="CeakYIk1vB5X" writeOutText="false" indentLevel="1" classfield_id="CeakYIk1vB5X" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="cwDKELbpBqLC" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="_11" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" text=" VTInstance ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_11" accessType="0" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" classfield_id="cwDKELbpBqLC" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_12" accessType="1" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" classfield_id="cwDKELbpBqLC" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_13" accessType="2" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" classfield_id="cwDKELbpBqLC" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_14" accessType="3" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" classfield_id="cwDKELbpBqLC" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTInstance item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTInstance>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_15" accessType="4" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" classfield_id="cwDKELbpBqLC" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="asHW1K3C29aK" id="cppheaderasHW1K3C29aK" fileName="VTRun" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef VTRUN_H&amp;#010;#define VTRUN_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="asHW1K3C29aK" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class VTRun&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock role_id="1" tag="tblock_0" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" text=" VTRun ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="0" tag="_5" parent_id="HSg24J0zWn7X" writeOutText="false" indentLevel="1" text=" VTRun ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="VTRun () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" classfield_id="cwDKELbpBqLC" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" classfield_id="cwDKELbpBqLC" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" classfield_id="cwDKELbpBqLC" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" classfield_id="cwDKELbpBqLC" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTRun item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTRun>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" classfield_id="cwDKELbpBqLC" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="0" parent_id="HSg24J0zWn7X" writeOutText="false" indentLevel="1" classfield_id="HSg24J0zWn7X" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="1" parent_id="HSg24J0zWn7X" writeOutText="false" indentLevel="1" classfield_id="HSg24J0zWn7X" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="2" parent_id="HSg24J0zWn7X" writeOutText="false" indentLevel="1" classfield_id="HSg24J0zWn7X" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="3" parent_id="HSg24J0zWn7X" writeOutText="false" indentLevel="1" classfield_id="HSg24J0zWn7X" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTRun item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTRun>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="4" parent_id="HSg24J0zWn7X" writeOutText="false" indentLevel="1" classfield_id="HSg24J0zWn7X" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //VTRUN_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="4" parent_id="cwDKELbpBqLC" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="tblock_0" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" text=" VTRun ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" classfield_id="cwDKELbpBqLC" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" classfield_id="cwDKELbpBqLC" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" classfield_id="cwDKELbpBqLC" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" classfield_id="cwDKELbpBqLC" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTRun item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTRun>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="cwDKELbpBqLC" writeOutText="false" indentLevel="1" classfield_id="cwDKELbpBqLC" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="HSg24J0zWn7X" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="_5" parent_id="HSg24J0zWn7X" writeOutText="false" indentLevel="1" text=" VTRun ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="0" parent_id="HSg24J0zWn7X" writeOutText="false" indentLevel="1" classfield_id="HSg24J0zWn7X" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="1" parent_id="HSg24J0zWn7X" writeOutText="false" indentLevel="1" classfield_id="HSg24J0zWn7X" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="2" parent_id="HSg24J0zWn7X" writeOutText="false" indentLevel="1" classfield_id="HSg24J0zWn7X" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="3" parent_id="HSg24J0zWn7X" writeOutText="false" indentLevel="1" classfield_id="HSg24J0zWn7X" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTRun item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTRun>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="4" parent_id="HSg24J0zWn7X" writeOutText="false" indentLevel="1" classfield_id="HSg24J0zWn7X" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="6357090" parent_id="IlDjWYgZXd1I" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="IlDjWYgZXd1I" writeOutText="false" indentLevel="1" text=" QThread ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="IlDjWYgZXd1I" writeOutText="false" indentLevel="1" classfield_id="IlDjWYgZXd1I" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="IlDjWYgZXd1I" writeOutText="false" indentLevel="1" classfield_id="IlDjWYgZXd1I" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="IlDjWYgZXd1I" writeOutText="false" indentLevel="1" classfield_id="IlDjWYgZXd1I" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="IlDjWYgZXd1I" writeOutText="false" indentLevel="1" classfield_id="IlDjWYgZXd1I" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;QThread item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;QThread>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="IlDjWYgZXd1I" writeOutText="false" indentLevel="1" classfield_id="IlDjWYgZXd1I" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="Zcy5Q6aJUHdb" id="cppheaderZcy5Q6aJUHdb" fileName="QProcess" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QPROCESS_H&amp;#010;#define QPROCESS_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;designer.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="Zcy5Q6aJUHdb" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class QProcess&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="QProcess () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QPROCESS_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="45744128" parent_id="em7wsuSJPtk8" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="em7wsuSJPtk8" writeOutText="false" indentLevel="1" text=" Control ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="em7wsuSJPtk8" writeOutText="false" indentLevel="1" classfield_id="em7wsuSJPtk8" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="em7wsuSJPtk8" writeOutText="false" indentLevel="1" classfield_id="em7wsuSJPtk8" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="em7wsuSJPtk8" writeOutText="false" indentLevel="1" classfield_id="em7wsuSJPtk8" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="em7wsuSJPtk8" writeOutText="false" indentLevel="1" classfield_id="em7wsuSJPtk8" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;Control item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;Control>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="em7wsuSJPtk8" writeOutText="false" indentLevel="1" classfield_id="em7wsuSJPtk8" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="6357090" parent_id="V66txozpDsW4" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="V66txozpDsW4" writeOutText="false" indentLevel="1" text=" Designer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="V66txozpDsW4" writeOutText="false" indentLevel="1" classfield_id="V66txozpDsW4" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="V66txozpDsW4" writeOutText="false" indentLevel="1" classfield_id="V66txozpDsW4" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="V66txozpDsW4" writeOutText="false" indentLevel="1" classfield_id="V66txozpDsW4" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="V66txozpDsW4" writeOutText="false" indentLevel="1" classfield_id="V66txozpDsW4" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;Designer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;Designer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="V66txozpDsW4" writeOutText="false" indentLevel="1" classfield_id="V66txozpDsW4" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="Kwo6z7J90nk9" id="cppheaderKwo6z7J90nk9" fileName="QThread" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QTHREAD_H&amp;#010;#define QTHREAD_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;vtrun.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="Kwo6z7J90nk9" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class QThread&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="QThread () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QTHREAD_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="6357090" parent_id="IlDjWYgZXd1I" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="IlDjWYgZXd1I" writeOutText="false" indentLevel="1" text=" VTRun ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="" accessType="0" parent_id="IlDjWYgZXd1I" writeOutText="false" indentLevel="1" classfield_id="IlDjWYgZXd1I" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="1" parent_id="IlDjWYgZXd1I" writeOutText="false" indentLevel="1" classfield_id="IlDjWYgZXd1I" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="2" parent_id="IlDjWYgZXd1I" writeOutText="false" indentLevel="1" classfield_id="IlDjWYgZXd1I" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="3" parent_id="IlDjWYgZXd1I" writeOutText="false" indentLevel="1" classfield_id="IlDjWYgZXd1I" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;VTRun item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;VTRun>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="" accessType="4" parent_id="IlDjWYgZXd1I" writeOutText="false" indentLevel="1" classfield_id="IlDjWYgZXd1I" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="6357090" parent_id="KjZpKY6kOim8" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="KjZpKY6kOim8" writeOutText="false" indentLevel="1" text=" Control ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="" accessType="0" parent_id="KjZpKY6kOim8" writeOutText="false" indentLevel="1" classfield_id="KjZpKY6kOim8" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="1" parent_id="KjZpKY6kOim8" writeOutText="false" indentLevel="1" classfield_id="KjZpKY6kOim8" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="2" parent_id="KjZpKY6kOim8" writeOutText="false" indentLevel="1" classfield_id="KjZpKY6kOim8" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="3" parent_id="KjZpKY6kOim8" writeOutText="false" indentLevel="1" classfield_id="KjZpKY6kOim8" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;Control item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;Control>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="" accessType="4" parent_id="KjZpKY6kOim8" writeOutText="false" indentLevel="1" classfield_id="KjZpKY6kOim8" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="51KhuyXfMIOj" id="cppheader51KhuyXfMIOj" fileName="QSettings" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QSETTINGS_H&amp;#010;#define QSETTINGS_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="51KhuyXfMIOj" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class QSettings&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="QSettings () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QSETTINGS_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
   </codegenerator>
  </codegeneration>
 </XMI.extensions>
</XMI>
