```xml
<?xml version="1.0" encoding="UTF-8"?>
<XMI xmi.version="1.2" xmlns:UML="org.omg.xmi.namespace.UML">
  <XMI.header>
    <XMI.documentation>
      <XMI.exporter>ArgoUML</XMI.exporter>
      <XMI.exporterVersion>0.34</XMI.exporterVersion>
    </XMI.documentation>
    <XMI.metamodel xmi.name="UML" xmi.version="1.4"/>
  </XMI.header>
  <XMI.content>
    <UML:Model xmi.id="model_untitledModel" name="_untitledModel_">
      <UML:Namespace.ownedElement>
        
        <!-- TestScenario_1 State Machine -->
        <UML:StateMachine xmi.id="sm_TestScenario_1" name="_TestScenario_1_">
          <UML:StateMachine.top>
            <UML:CompositeState xmi.id="cs_top_1" name="_top_">
              <UML:CompositeState.substate>
                <UML:CompositeState xmi.id="cs_Parent1" name="Parent1">
                  <UML:CompositeState.substate>
                    <UML:SimpleState xmi.id="state_Child1" name="Child1">
                      <UML:State.entry>
                        <UML:Action xmi.id="action_A_EnterChild1" name="A_EnterChild1"/>
                      </UML:State.entry>
                    </UML:SimpleState>
                    <UML:SimpleState xmi.id="state_Child2" name="Child2">
                      <UML:State.exit>
                        <UML:Action xmi.id="action_A_ExitChild2" name="A_ExitChild2"/>
                      </UML:State.exit>
                    </UML:SimpleState>
                  </UML:CompositeState.substate>
                  <UML:CompositeState.outgoing>
                    <UML:Transition xmi.id="trans_Parent1_to_Parent2" source="cs_Parent1" target="cs_Parent2">
                      <UML:Transition.effect>
                        <UML:Action xmi.id="action_A_WeAreLeaving" name="A_WeAreLeaving"/>
                      </UML:Transition.effect>
                    </UML:Transition>
                  </UML:CompositeState.outgoing>
                </UML:CompositeState>
                <UML:CompositeState xmi.id="cs_Parent2" name="Parent2">
                  <UML:State.doActivity>
                    <UML:Action xmi.id="action_A_DoParent2" name="A_DoParent2"/>
                  </UML:State.doActivity>
                  <UML:CompositeState.outgoing>
                    <UML:Transition xmi.id="trans_Parent2_to_Child1" source="cs_Parent2" target="state_Child1">
                      <UML:Transition.guard>
                        <UML:Guard xmi.id="guard_C_CanGoBack" name="C_CanGoBack"/>
                      </UML:Transition.guard>
                    </UML:Transition>
                  </UML:CompositeState.outgoing>
                </UML:CompositeState>
                <UML:Pseudostate xmi.id="init_TestScenario_1" kind="initial">
                  <UML:Pseudostate.outgoing>
                    <UML:Transition xmi.id="trans_init_to_Child1" source="init_TestScenario_1" target="state_Child1"/>
                  </UML:Pseudostate.outgoing>
                </UML:Pseudostate>
              </UML:CompositeState.substate>
            </UML:CompositeState>
          </UML:StateMachine.top>
        </UML:StateMachine>

        <!-- TestScenario_2 State Machine -->
        <UML:StateMachine xmi.id="sm_TestScenario_2" name="_TestScenario_2_">
          <UML:StateMachine.top>
            <UML:CompositeState xmi.id="cs_top_2" name="_top_">
              <UML:CompositeState.substate>
                <UML:SimpleState xmi.id="state_OneState" name="OneState">
                  <UML:SimpleState.outgoing>
                    <UML:Transition xmi.id="trans_OneState_to_SecondState" source="state_OneState" target="state_SecondState">
                      <UML:Transition.trigger>
                        <UML:SignalEvent xmi.id="signal_E_ToSecond" name="E_ToSecond"/>
                      </UML:Transition.trigger>
                    </UML:Transition>
                  </UML:SimpleState.outgoing>
                </UML:SimpleState>
                <UML:SimpleState xmi.id="state_SecondState" name="SecondState"/>
                <UML:Pseudostate xmi.id="init_TestScenario_2" kind="initial">
                  <UML:Pseudostate.outgoing>
                    <UML:Transition xmi.id="trans_init_to_OneState" source="init_TestScenario_2" target="state_OneState"/>
                  </UML:Pseudostate.outgoing>
                </UML:Pseudostate>
              </UML:CompositeState.substate>
            </UML:CompositeState>
          </UML:StateMachine.top>
        </UML:StateMachine>

        <!-- Signals -->
        <UML:Signal xmi.id="signal_E_GoToParent2" name="E_GoToParent2"/>
        <UML:Signal xmi.id="signal_E_GoToChild1" name="E_GoToChild1"/>
        <UML:Signal xmi.id="signal_E_GoToChild2" name="E_GoToChild2"/>
        <UML:Signal xmi.id="signal_E_ToSecond" name="E_ToSecond"/>
        
      </UML:Namespace.ownedElement>
    </UML:Model>
  </XMI.content>
</XMI>
```