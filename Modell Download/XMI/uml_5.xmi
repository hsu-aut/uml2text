<?xml version="1.0" encoding="UTF-8"?>
<XMI xmlns:UML="org.omg/standards/UML" verified="false" timestamp="" xmi.version="1.2" >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>1.2.90</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.model xmi.name="umbrello2W9PBa" href="/tmp/kde-xander/umbrello2W9PBa.tmp" />
  <XMI.metamodel xmi.name="UML" href="UML.xml" xmi.version="1.3" />
 </XMI.header>
 <XMI.content>
  <UML:Model>
   <UML:Stereotype visibility="public" xmi.id="3" name="datatype" />
   <UML:Stereotype visibility="public" xmi.id="126" name="enum" />
   <UML:DataType stereotype="3" visibility="public" xmi.id="2" name="int" />
   <UML:DataType stereotype="3" visibility="public" xmi.id="4" name="char" />
   <UML:DataType stereotype="3" visibility="public" xmi.id="5" name="bool" />
   <UML:DataType stereotype="3" visibility="public" xmi.id="6" name="float" />
   <UML:DataType stereotype="3" visibility="public" xmi.id="7" name="double" />
   <UML:DataType stereotype="3" visibility="public" xmi.id="8" name="long" />
   <UML:DataType stereotype="3" visibility="public" xmi.id="9" name="short" />
   <UML:DataType stereotype="3" visibility="public" xmi.id="10" name="string" />
   <UML:Class comment="Base class for Blogs." visibility="public" xmi.id="16" name="Blog" >
    <UML:Operation comment="return post's title" visibility="public" xmi.id="22" type="string" name="getTitle" >
     <UML:Parameter visibility="public" xmi.id="23" value="" type="int" name="postNr" />
    </UML:Operation>
    <UML:Operation comment="return post's content" visibility="public" xmi.id="24" type="string" name="getContent" >
     <UML:Parameter visibility="public" xmi.id="25" value="" type="int" name="postNr" />
    </UML:Operation>
    <UML:Operation comment="remove post" visibility="public" xmi.id="26" type="void" name="deletePost" >
     <UML:Parameter visibility="public" xmi.id="27" value="" type="int" name="postNr" />
    </UML:Operation>
    <UML:Operation comment="change post's content" visibility="public" xmi.id="28" type="void" name="updatePost" >
     <UML:Parameter visibility="public" xmi.id="29" value="" type="int" name="postNr" />
     <UML:Parameter visibility="public" xmi.id="30" value="" type="string" name="title" />
     <UML:Parameter visibility="public" xmi.id="31" value="" type="string" name="content" />
    </UML:Operation>
    <UML:Operation comment="create new post" visibility="public" xmi.id="32" type="void" name="createPost" >
     <UML:Parameter visibility="public" xmi.id="33" value="" type="string" name="title" />
     <UML:Parameter visibility="public" xmi.id="34" value="" type="string" name="content" />
    </UML:Operation>
    <UML:Operation comment="fetch the list of posts in a blog" visibility="public" xmi.id="35" type="void" name="reloadPosts" />
    <UML:Operation comment="return the amount of posts in a blog" visibility="public" xmi.id="86" type="int" name="__len__" />
    <UML:Operation comment="return a post by it's id" visibility="public" xmi.id="87" type="Post" name="__getitem__" >
     <UML:Parameter visibility="public" xmi.id="88" value="" type="int" name="postNr" />
    </UML:Operation>
    <UML:Attribute comment="Url used for preview" visibility="public" xmi.id="19" value="" type="string" name="Url" />
    <UML:Attribute comment="Visible blog's name" visibility="public" xmi.id="20" value="" type="string" name="Name" />
    <UML:Attribute comment="Internal blog id" visibility="public" xmi.id="21" value="0" type="string" name="ID" />
   </UML:Class>
   <UML:Class comment="Base class for blog account providers" visibility="public" xmi.id="58" name="Account" >
    <UML:Operation comment="Perform login to server (if needed)" visibility="public" xmi.id="66" type="int" name="login" />
    <UML:Operation comment="get the list of blogs for this account" visibility="public" xmi.id="68" type="int" name="fetchBlogs" />
    <UML:Operation comment="Return number of blogs in account" visibility="public" xmi.id="85" type="int" name="__len__" />
    <UML:Operation comment="Get a blog in account by it's id" visibility="public" xmi.id="89" type="Blog" name="__getitem__" >
     <UML:Parameter visibility="public" xmi.id="90" value="" type="int" name="blogId" />
    </UML:Operation>
    <UML:Attribute comment="Display name" visibility="public" xmi.id="61" value="" type="string" name="Name" />
    <UML:Attribute comment="Login name" visibility="public" xmi.id="63" value="" type="string" name="Username" />
    <UML:Attribute comment="Top Secret!" visibility="public" xmi.id="64" value="" type="string" name="Password" />
    <UML:Attribute comment="Account's host" visibility="public" xmi.id="65" value="" type="string" name="Host" />
    <UML:Attribute comment="id of currently selected blog" visibility="public" xmi.id="116" value="" type="string" name="SelectedBlog" />
   </UML:Class>
   <UML:Class comment="Basic class for post in a blog" visibility="public" xmi.id="78" name="Post" >
    <UML:Operation comment="return string representation of the post" visibility="public" xmi.id="84" type="string" name="__str__" />
    <UML:Attribute comment="post's id" visibility="public" xmi.id="79" value="" type="string" name="ID" />
    <UML:Attribute comment="post's title" visibility="public" xmi.id="80" value="" type="string" name="Title" />
    <UML:Attribute comment="body of the post" visibility="public" xmi.id="81" value="" type="string" name="Content" />
    <UML:Attribute comment="date of post's publication (or last update)" visibility="public" xmi.id="82" value="" type="string" name="Created" />
   </UML:Class>
   <UML:Class comment="Base class for all plugins" visibility="public" xmi.id="99" name="Plugin" >
    <UML:Operation comment="Performs loading of the plugin" visibility="public" xmi.id="134" type="void" name="Register" />
    <UML:Operation comment="Performs unloading of the plugin" visibility="public" xmi.id="141" type="void" name="Unregister" />
    <UML:Attribute comment="Visible name. Will be used as tooltip, as menu caption or as item in config dialog." visibility="public" xmi.id="106" value="" type="string" name="Name" />
    <UML:Attribute comment="Who's responsible for this???" visibility="public" xmi.id="107" value="" type="string" name="Author" />
    <UML:Attribute comment="Option storage class instance" visibility="public" xmi.id="110" value="" type="OptionStorage" name="Options" />
    <UML:Attribute comment="Byte array of the icon. (used in menu and toolbar)" visibility="public" xmi.id="138" value="" type="QPixmap" name="Icon" />
   </UML:Class>
   <UML:Class comment="Base class for plugins that provide a control on the toolbar" visibility="public" xmi.id="100" name="ToolbarPlugin" >
    <UML:Operation comment="Should return the widget(control) that will be added to the toolbar" visibility="public" xmi.id="135" type="QWidget" name="getWidget" />
   </UML:Class>
   <UML:Class comment="Base class for plugins that provide a menu item" visibility="public" xmi.id="102" name="MenuPlugin" >
    <UML:Operation comment="Should return item that will be added to the popup menu" visibility="public" xmi.id="136" type="QMenuItem" name="getMenu" />
   </UML:Class>
   <UML:Class comment="Base class for plugins that are activated upon some specific event." visibility="public" xmi.id="103" name="EventPlugin" >
    <UML:Operation comment="Should return a function that would handle this specific event" visibility="public" xmi.id="137" type="string" name="getHandler" />
   </UML:Class>
   <UML:Class comment="Class for getting/setting/loading/saving and displaying plugin's settings" visibility="public" xmi.id="109" name="OptionStorage" >
    <UML:Operation comment="return specific item" visibility="public" xmi.id="112" type="string" name="__getitem__" >
     <UML:Parameter visibility="public" xmi.id="113" value="" type="string" name="param" />
    </UML:Operation>
    <UML:Operation comment="set specific item" visibility="public" xmi.id="117" type="void" name="__setitem__" >
     <UML:Parameter visibility="public" xmi.id="118" value="" type="string" name="param" />
     <UML:Parameter visibility="public" xmi.id="119" value="" type="string" name="value" />
    </UML:Operation>
    <UML:Operation comment="load options from xml string" visibility="public" xmi.id="122" type="void" name="load" >
     <UML:Parameter visibility="public" xmi.id="124" value="" type="string" name="xml" />
    </UML:Operation>
    <UML:Operation comment="save options to xml" visibility="public" xmi.id="123" type="string" name="save" />
    <UML:Operation comment="Creates a QFrame with all fields and controls for options" visibility="public" xmi.id="131" type="QFrame" name="createFrame" />
    <UML:Operation comment="Syncronize the content from the Frame to local settings storage" visibility="public" xmi.id="132" type="void" name="update" />
   </UML:Class>
   <UML:Enumeration stereotype="126" visibility="public" xmi.id="125" name="EventType" >
    <UML:EnumerationLiteral comment="This event is fired when the new post is created. This is the time to apply changes to body/title of the post." visibility="public" xmi.id="127" name="PostCreated" />
    <UML:EnumerationLiteral comment="This event is fired when the post is about to be published. This is the time for post-spellchecking and etc." visibility="public" xmi.id="128" name="BeforePublishing" />
    <UML:EnumerationLiteral comment="This event is fired when the text inside the editor control is changed. Could be used for automatic spell checking, or alias expansions..." visibility="public" xmi.id="129" name="TextChanged" />
    <UML:EnumerationLiteral comment="This event is fired up after the blog has been published." visibility="public" xmi.id="143" name="PostPublishing" />
   </UML:Enumeration>
   <UML:DataType stereotype="3" visibility="public" xmi.id="139" name="QPixmap" />
   <UML:Association visibility="public" xmi.id="70" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="composite" type="58" />
     <UML:AssociationEndRole visibility="public" type="16" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="83" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="composite" type="16" />
     <UML:AssociationEndRole visibility="public" type="78" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="100" visibility="public" xmi.id="101" parent="99" />
   <UML:Generalization child="102" visibility="public" xmi.id="104" parent="99" />
   <UML:Generalization child="103" visibility="public" xmi.id="105" parent="99" />
   <UML:Association visibility="public" xmi.id="111" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="99" />
     <UML:AssociationEndRole visibility="public" type="109" />
    </UML:Association.connection>
   </UML:Association>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello" >
  <docsettings viewid="93" documentation="Basic class for post in a blog" uniqueid="143" />
  <diagrams>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="820" snapy="10" showatts="1" xmi.id="42" documentation="" type="402" showops="1" showpackage="0" name="Multiple Blogs" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Bitstream Vera Sans,11,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="533" >
    <widgets>
     <classwidget usesdiagramfillcolour="0" width="520" showattsigs="601" usesdiagramusefillcolour="0" x="25" linecolour="#ff0000" y="279" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="228" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="16" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Bitstream Vera Sans,11,-1,5,75,1,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="216" showattsigs="601" usesdiagramusefillcolour="0" x="111" linecolour="#ff0000" y="27" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="150" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="58" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Bitstream Vera Sans,11,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="160" showattsigs="601" usesdiagramusefillcolour="0" x="616" linecolour="#ff0000" y="341" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="114" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="78" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Bitstream Vera Sans,11,-1,5,75,0,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="16" widgetaid="58" xmi.id="70" >
      <linepath>
       <startpoint startx="219" starty="177" />
       <endpoint endx="285" endy="279" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="78" widgetaid="16" xmi.id="83" >
      <linepath>
       <startpoint startx="545" starty="393" />
       <endpoint endx="616" endy="398" />
      </linepath>
     </assocwidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="820" snapy="10" showatts="1" xmi.id="93" documentation="" type="402" showops="1" showpackage="0" name="Plugin System" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Bitstream Vera Sans,11,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="533" >
    <widgets>
     <classwidget usesdiagramfillcolour="0" width="205" showattsigs="601" usesdiagramusefillcolour="0" x="116" linecolour="#ff0000" y="35" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="133" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="99" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Bitstream Vera Sans,11,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="168" showattsigs="601" usesdiagramusefillcolour="0" x="199" linecolour="#ff0000" y="385" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="37" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="100" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Bitstream Vera Sans,11,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="225" showattsigs="601" usesdiagramusefillcolour="0" x="20" linecolour="#ff0000" y="296" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="47" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="102" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Bitstream Vera Sans,11,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="153" showattsigs="601" usesdiagramusefillcolour="0" x="280" linecolour="#ff0000" y="295" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="37" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="103" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Bitstream Vera Sans,11,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="325" showattsigs="601" usesdiagramusefillcolour="0" x="366" linecolour="#ff0000" y="37" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="112" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="109" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Bitstream Vera Sans,11,-1,5,75,0,0,0,0,0" />
     <enumwidget usesdiagramfillcolour="0" width="106" usesdiagramusefillcolour="0" x="581" linecolour="#ff0000" y="198" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="90" usefillcolor="1" isinstance="0" xmi.id="125" showpackage="0" font="Bitstream Vera Sans,11,-1,5,75,1,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" totalcountb="4" indexb="2" widgetbid="99" widgetaid="100" xmi.id="101" >
      <linepath>
       <startpoint startx="283" starty="385" />
       <endpoint endx="218" endy="168" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="4" indexb="1" widgetbid="99" widgetaid="102" xmi.id="104" >
      <linepath>
       <startpoint startx="132" starty="296" />
       <endpoint endx="167" endy="168" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="4" indexb="3" widgetbid="99" widgetaid="103" xmi.id="105" >
      <linepath>
       <startpoint startx="331" starty="295" />
       <endpoint endx="269" endy="168" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="109" widgetaid="99" xmi.id="111" >
      <linepath>
       <startpoint startx="321" starty="101" />
       <endpoint endx="366" endy="93" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" visibilityB="200" totalcountb="2" indexb="1" widgetbid="125" widgetaid="103" roleBdoc="" documentation="" roleAdoc="" type="502" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="382" starty="295" />
       <endpoint endx="581" endy="243" />
      </linepath>
     </assocwidget>
    </associations>
   </diagram>
  </diagrams>
  <listview>
   <listitem open="1" type="800" id="-1" label="Views" >
    <listitem open="1" type="801" id="-1" label="Logical View" >
     <listitem open="0" type="807" id="42" label="Multiple Blogs" />
     <listitem open="0" type="807" id="93" label="Plugin System" />
     <listitem open="0" type="813" id="58" >
      <listitem open="0" type="814" id="65" />
      <listitem open="0" type="814" id="61" />
      <listitem open="0" type="814" id="64" />
      <listitem open="0" type="814" id="116" />
      <listitem open="0" type="814" id="63" />
      <listitem open="0" type="815" id="89" />
      <listitem open="0" type="815" id="85" />
      <listitem open="0" type="815" id="68" />
      <listitem open="0" type="815" id="66" />
     </listitem>
     <listitem open="0" type="813" id="16" >
      <listitem open="0" type="814" id="21" />
      <listitem open="0" type="814" id="20" />
      <listitem open="0" type="814" id="19" />
      <listitem open="0" type="815" id="87" />
      <listitem open="0" type="815" id="86" />
      <listitem open="0" type="815" id="32" />
      <listitem open="0" type="815" id="26" />
      <listitem open="0" type="815" id="24" />
      <listitem open="0" type="815" id="22" />
      <listitem open="0" type="815" id="35" />
      <listitem open="0" type="815" id="28" />
     </listitem>
     <listitem open="1" type="813" id="103" >
      <listitem open="0" type="815" id="137" />
     </listitem>
     <listitem open="1" type="813" id="102" >
      <listitem open="0" type="815" id="136" />
     </listitem>
     <listitem open="1" type="813" id="109" >
      <listitem open="0" type="815" id="112" />
      <listitem open="0" type="815" id="117" />
      <listitem open="0" type="815" id="131" />
      <listitem open="0" type="815" id="122" />
      <listitem open="0" type="815" id="123" />
      <listitem open="0" type="815" id="132" />
     </listitem>
     <listitem open="1" type="813" id="99" >
      <listitem open="0" type="814" id="107" />
      <listitem open="0" type="814" id="138" />
      <listitem open="0" type="814" id="106" />
      <listitem open="0" type="814" id="110" />
      <listitem open="0" type="815" id="134" />
      <listitem open="0" type="815" id="141" />
     </listitem>
     <listitem open="0" type="813" id="78" >
      <listitem open="0" type="814" id="81" />
      <listitem open="0" type="814" id="82" />
      <listitem open="0" type="814" id="79" />
      <listitem open="0" type="814" id="80" />
      <listitem open="0" type="815" id="84" />
     </listitem>
     <listitem open="1" type="813" id="100" >
      <listitem open="0" type="815" id="135" />
     </listitem>
     <listitem open="0" type="830" id="-1" label="Datatypes" >
      <listitem open="1" type="829" id="139" />
      <listitem open="1" type="829" id="5" />
      <listitem open="1" type="829" id="4" />
      <listitem open="1" type="829" id="7" />
      <listitem open="1" type="829" id="6" />
      <listitem open="1" type="829" id="2" />
      <listitem open="1" type="829" id="8" />
      <listitem open="1" type="829" id="9" />
      <listitem open="1" type="829" id="10" />
     </listitem>
     <listitem open="1" type="831" id="125" />
    </listitem>
    <listitem open="1" type="802" id="-1" label="Use Case View" />
    <listitem open="1" type="821" id="-1" label="Component View" />
    <listitem open="1" type="827" id="-1" label="Deployment View" />
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="Python" />
   <codegenerator language="Cpp" >
    <classifiercodedocument writeOutCode="true" package="" id="16" parent_class="16" fileExt=".cpp" fileName="blog" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include &quot;string.h&quot;&amp;#010;#include &quot;int.h&quot;&amp;#010;#include &quot;post.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="19" tag="hblock_tag_2" canDelete="false" classfield_id="19" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of Url&amp;#010;Url used for preview&amp;#010;@return the value of Url" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="19" tag="hblock_tag_3" canDelete="false" classfield_id="19" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of Url&amp;#010;Url used for preview&amp;#010;@param value the value of Url" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="20" tag="hblock_tag_4" canDelete="false" classfield_id="20" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of Name&amp;#010;Visible blog's name&amp;#010;@return the value of Name" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="20" tag="hblock_tag_5" canDelete="false" classfield_id="20" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of Name&amp;#010;Visible blog's name&amp;#010;@param value the value of Name" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="21" tag="hblock_tag_6" canDelete="false" classfield_id="21" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of ID&amp;#010;Internal blog id&amp;#010;@return the value of ID" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="21" tag="hblock_tag_7" canDelete="false" classfield_id="21" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of ID&amp;#010;Internal blog id&amp;#010;@param value the value of ID" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="22" tag="operation_22" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="return post's title" />
         </header>
        </codeoperation>
        <codeoperation parent_id="24" tag="operation_24" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="return post's content" />
         </header>
        </codeoperation>
        <codeoperation parent_id="26" tag="operation_26" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="remove post" />
         </header>
        </codeoperation>
        <codeoperation parent_id="28" tag="operation_28" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="change post's content" />
         </header>
        </codeoperation>
        <codeoperation parent_id="32" tag="operation_32" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="create new post" />
         </header>
        </codeoperation>
        <codeoperation parent_id="35" tag="operation_35" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="fetch the list of posts in a blog" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="70" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="70" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="70" tag="hblock_tag_18" canDelete="false" writeOutText="false" classfield_id="70" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="70" tag="hblock_tag_19" canDelete="false" writeOutText="false" classfield_id="70" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="70" tag="hblock_tag_20" canDelete="false" writeOutText="false" classfield_id="70" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="70" tag="hblock_tag_21" canDelete="false" writeOutText="false" classfield_id="70" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="83" tag="hblock_tag_22" canDelete="false" writeOutText="false" classfield_id="83" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="83" tag="hblock_tag_23" canDelete="false" writeOutText="false" classfield_id="83" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="83" tag="hblock_tag_24" canDelete="false" writeOutText="false" classfield_id="83" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="83" tag="hblock_tag_25" canDelete="false" writeOutText="false" classfield_id="83" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="83" tag="hblock_tag_26" canDelete="false" writeOutText="false" classfield_id="83" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="86" tag="operation_86" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="return the amount of posts in a blog" />
         </header>
        </codeoperation>
        <codeoperation parent_id="87" tag="operation_87" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="return a post by it's id" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			blog.cpp - Copyright reflog&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Dec 27 2004 at 14:17:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="19" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Url used for preview" />
       </header>
       <ccfdeclarationcodeblock parent_id="19" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="19" tag="hblock_tag_2" canDelete="false" classfield_id="19" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of Url&amp;#010;Url used for preview&amp;#010;@return the value of Url" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="19" tag="hblock_tag_3" canDelete="false" classfield_id="19" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of Url&amp;#010;Url used for preview&amp;#010;@param value the value of Url" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="20" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Visible blog's name" />
       </header>
       <ccfdeclarationcodeblock parent_id="20" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="20" tag="hblock_tag_4" canDelete="false" classfield_id="20" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of Name&amp;#010;Visible blog's name&amp;#010;@return the value of Name" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="20" tag="hblock_tag_5" canDelete="false" classfield_id="20" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of Name&amp;#010;Visible blog's name&amp;#010;@param value the value of Name" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="21" field_type="0" initialValue="0" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Internal blog id" />
       </header>
       <ccfdeclarationcodeblock parent_id="21" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="21" tag="hblock_tag_6" canDelete="false" classfield_id="21" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of ID&amp;#010;Internal blog id&amp;#010;@return the value of ID" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="21" tag="hblock_tag_7" canDelete="false" classfield_id="21" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of ID&amp;#010;Internal blog id&amp;#010;@param value the value of ID" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="70" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="70" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="70" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="70" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="70" tag="hblock_tag_18" canDelete="false" writeOutText="false" classfield_id="70" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="70" tag="hblock_tag_19" canDelete="false" writeOutText="false" classfield_id="70" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="70" tag="hblock_tag_20" canDelete="false" writeOutText="false" classfield_id="70" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="70" tag="hblock_tag_21" canDelete="false" writeOutText="false" classfield_id="70" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="83" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="83" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="83" tag="hblock_tag_22" canDelete="false" writeOutText="false" classfield_id="83" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="83" tag="hblock_tag_23" canDelete="false" writeOutText="false" classfield_id="83" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="83" tag="hblock_tag_24" canDelete="false" writeOutText="false" classfield_id="83" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="83" tag="hblock_tag_25" canDelete="false" writeOutText="false" classfield_id="83" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="83" tag="hblock_tag_26" canDelete="false" writeOutText="false" classfield_id="83" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="58" parent_class="58" fileExt=".cpp" fileName="account" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include &quot;int.h&quot;&amp;#010;#include &quot;blog.h&quot;&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="61" tag="hblock_tag_0" canDelete="false" classfield_id="61" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of Name&amp;#010;Display name&amp;#010;@return the value of Name" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="61" tag="hblock_tag_1" canDelete="false" classfield_id="61" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of Name&amp;#010;Display name&amp;#010;@param value the value of Name" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="63" tag="hblock_tag_2" canDelete="false" classfield_id="63" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of Username&amp;#010;Login name&amp;#010;@return the value of Username" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="63" tag="hblock_tag_3" canDelete="false" classfield_id="63" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of Username&amp;#010;Login name&amp;#010;@param value the value of Username" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="64" tag="hblock_tag_4" canDelete="false" classfield_id="64" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of Password&amp;#010;Top Secret!&amp;#010;@return the value of Password" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="64" tag="hblock_tag_5" canDelete="false" classfield_id="64" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of Password&amp;#010;Top Secret!&amp;#010;@param value the value of Password" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="65" tag="hblock_tag_6" canDelete="false" classfield_id="65" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of Host&amp;#010;Account's host&amp;#010;@return the value of Host" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="65" tag="hblock_tag_7" canDelete="false" classfield_id="65" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of Host&amp;#010;Account's host&amp;#010;@param value the value of Host" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="66" tag="operation_66" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Perform login to server (if needed)" />
         </header>
        </codeoperation>
        <codeoperation parent_id="68" tag="operation_68" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="get the list of blogs for this account" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="70" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="70" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="70" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="70" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="70" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="70" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="70" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="70" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="70" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="70" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="85" tag="operation_85" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Return number of blogs in account" />
         </header>
        </codeoperation>
        <codeoperation parent_id="89" tag="operation_89" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Get a blog in account by it's id" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="116" tag="hblock_tag_13" canDelete="false" classfield_id="116" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of SelectedBlog&amp;#010;id of currently selected blog&amp;#010;@return the value of SelectedBlog" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="116" tag="hblock_tag_14" canDelete="false" classfield_id="116" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of SelectedBlog&amp;#010;id of currently selected blog&amp;#010;@param value the value of SelectedBlog" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			account.cpp - Copyright xander&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Dec 28 2004 at 21:17:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="61" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Display name" />
       </header>
       <ccfdeclarationcodeblock parent_id="61" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="61" tag="hblock_tag_0" canDelete="false" classfield_id="61" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of Name&amp;#010;Display name&amp;#010;@return the value of Name" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="61" tag="hblock_tag_1" canDelete="false" classfield_id="61" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of Name&amp;#010;Display name&amp;#010;@param value the value of Name" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="63" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Login name" />
       </header>
       <ccfdeclarationcodeblock parent_id="63" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="63" tag="hblock_tag_2" canDelete="false" classfield_id="63" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of Username&amp;#010;Login name&amp;#010;@return the value of Username" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="63" tag="hblock_tag_3" canDelete="false" classfield_id="63" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of Username&amp;#010;Login name&amp;#010;@param value the value of Username" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="64" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Top Secret!" />
       </header>
       <ccfdeclarationcodeblock parent_id="64" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="64" tag="hblock_tag_4" canDelete="false" classfield_id="64" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of Password&amp;#010;Top Secret!&amp;#010;@return the value of Password" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="64" tag="hblock_tag_5" canDelete="false" classfield_id="64" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of Password&amp;#010;Top Secret!&amp;#010;@param value the value of Password" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="65" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Account's host" />
       </header>
       <ccfdeclarationcodeblock parent_id="65" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="65" tag="hblock_tag_6" canDelete="false" classfield_id="65" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of Host&amp;#010;Account's host&amp;#010;@return the value of Host" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="65" tag="hblock_tag_7" canDelete="false" classfield_id="65" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of Host&amp;#010;Account's host&amp;#010;@param value the value of Host" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="116" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="id of currently selected blog" />
       </header>
       <ccfdeclarationcodeblock parent_id="116" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="116" tag="hblock_tag_13" canDelete="false" classfield_id="116" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of SelectedBlog&amp;#010;id of currently selected blog&amp;#010;@return the value of SelectedBlog" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="116" tag="hblock_tag_14" canDelete="false" classfield_id="116" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of SelectedBlog&amp;#010;id of currently selected blog&amp;#010;@param value the value of SelectedBlog" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="70" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="70" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="70" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="70" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="70" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="70" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="70" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="70" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="70" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="70" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="70" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="70" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="78" parent_class="78" fileExt=".cpp" fileName="post" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="79" tag="hblock_tag_0" canDelete="false" classfield_id="79" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of ID&amp;#010;post's id&amp;#010;@return the value of ID" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="79" tag="hblock_tag_1" canDelete="false" classfield_id="79" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of ID&amp;#010;post's id&amp;#010;@param value the value of ID" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="80" tag="hblock_tag_2" canDelete="false" classfield_id="80" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of Title&amp;#010;post's title&amp;#010;@return the value of Title" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="80" tag="hblock_tag_3" canDelete="false" classfield_id="80" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of Title&amp;#010;post's title&amp;#010;@param value the value of Title" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="81" tag="hblock_tag_4" canDelete="false" classfield_id="81" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of Content&amp;#010;body of the post&amp;#010;@return the value of Content" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="81" tag="hblock_tag_5" canDelete="false" classfield_id="81" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of Content&amp;#010;body of the post&amp;#010;@param value the value of Content" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="82" tag="hblock_tag_6" canDelete="false" classfield_id="82" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of Created&amp;#010;date of post's publication (or last update)&amp;#010;@return the value of Created" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="82" tag="hblock_tag_7" canDelete="false" classfield_id="82" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of Created&amp;#010;date of post's publication (or last update)&amp;#010;@param value the value of Created" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="83" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="83" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="83" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="83" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="83" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="83" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="83" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="83" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="83" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="83" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="84" tag="operation_84" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="return string representation of the post" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			post.cpp - Copyright reflog&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Dec 27 2004 at 12:51:57&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="79" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="post's id" />
       </header>
       <ccfdeclarationcodeblock parent_id="79" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="79" tag="hblock_tag_0" canDelete="false" classfield_id="79" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of ID&amp;#010;post's id&amp;#010;@return the value of ID" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="79" tag="hblock_tag_1" canDelete="false" classfield_id="79" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of ID&amp;#010;post's id&amp;#010;@param value the value of ID" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="80" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="post's title" />
       </header>
       <ccfdeclarationcodeblock parent_id="80" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="80" tag="hblock_tag_2" canDelete="false" classfield_id="80" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of Title&amp;#010;post's title&amp;#010;@return the value of Title" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="80" tag="hblock_tag_3" canDelete="false" classfield_id="80" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of Title&amp;#010;post's title&amp;#010;@param value the value of Title" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="81" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="body of the post" />
       </header>
       <ccfdeclarationcodeblock parent_id="81" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="81" tag="hblock_tag_4" canDelete="false" classfield_id="81" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of Content&amp;#010;body of the post&amp;#010;@return the value of Content" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="81" tag="hblock_tag_5" canDelete="false" classfield_id="81" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of Content&amp;#010;body of the post&amp;#010;@param value the value of Content" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="82" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="date of post's publication (or last update)" />
       </header>
       <ccfdeclarationcodeblock parent_id="82" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="82" tag="hblock_tag_6" canDelete="false" classfield_id="82" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of Created&amp;#010;date of post's publication (or last update)&amp;#010;@return the value of Created" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="82" tag="hblock_tag_7" canDelete="false" classfield_id="82" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of Created&amp;#010;date of post's publication (or last update)&amp;#010;@param value the value of Created" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="83" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="83" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="83" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="83" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="83" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="83" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="83" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="83" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="83" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="83" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="83" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="83" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="99" parent_class="99" fileExt=".cpp" fileName="plugin" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include &quot;string.h&quot;&amp;#010;#include &quot;optionstorage.h&quot;&amp;#010;#include &quot;qpixmap.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="106" tag="hblock_tag_0" canDelete="false" classfield_id="106" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of Name&amp;#010;Visible name. Will be used as tooltip, as menu caption or as item in config dialog.&amp;#010;@return the value of Name" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="106" tag="hblock_tag_1" canDelete="false" classfield_id="106" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of Name&amp;#010;Visible name. Will be used as tooltip, as menu caption or as item in config dialog.&amp;#010;@param value the value of Name" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="107" tag="hblock_tag_2" canDelete="false" classfield_id="107" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of Author&amp;#010;Who's responsible for this???&amp;#010;@return the value of Author" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="107" tag="hblock_tag_3" canDelete="false" classfield_id="107" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of Author&amp;#010;Who's responsible for this???&amp;#010;@param value the value of Author" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="110" tag="hblock_tag_4" canDelete="false" classfield_id="110" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of Options&amp;#010;Option storage class instance&amp;#010;@return the value of Options" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="110" tag="hblock_tag_5" canDelete="false" classfield_id="110" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of Options&amp;#010;Option storage class instance&amp;#010;@param value the value of Options" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="111" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="111" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="111" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="111" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="111" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="111" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="111" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="111" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="111" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="111" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="134" tag="operation_134" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Performs loading of the plugin" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="138" tag="hblock_tag_11" canDelete="false" classfield_id="138" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of Icon&amp;#010;Byte array of the icon. (used in menu and toolbar)&amp;#010;@return the value of Icon" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="138" tag="hblock_tag_12" canDelete="false" classfield_id="138" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of Icon&amp;#010;Byte array of the icon. (used in menu and toolbar)&amp;#010;@param value the value of Icon" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="141" tag="operation_141" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Performs unloading of the plugin" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			plugin.cpp - Copyright reflog&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Dec 28 2004 at 15:28:08&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="106" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Visible name. Will be used as tooltip, as menu caption or as item in config dialog." />
       </header>
       <ccfdeclarationcodeblock parent_id="106" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="106" tag="hblock_tag_0" canDelete="false" classfield_id="106" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of Name&amp;#010;Visible name. Will be used as tooltip, as menu caption or as item in config dialog.&amp;#010;@return the value of Name" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="106" tag="hblock_tag_1" canDelete="false" classfield_id="106" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of Name&amp;#010;Visible name. Will be used as tooltip, as menu caption or as item in config dialog.&amp;#010;@param value the value of Name" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="107" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Who's responsible for this???" />
       </header>
       <ccfdeclarationcodeblock parent_id="107" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="107" tag="hblock_tag_2" canDelete="false" classfield_id="107" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of Author&amp;#010;Who's responsible for this???&amp;#010;@return the value of Author" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="107" tag="hblock_tag_3" canDelete="false" classfield_id="107" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of Author&amp;#010;Who's responsible for this???&amp;#010;@param value the value of Author" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="110" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Option storage class instance" />
       </header>
       <ccfdeclarationcodeblock parent_id="110" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="110" tag="hblock_tag_4" canDelete="false" classfield_id="110" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of Options&amp;#010;Option storage class instance&amp;#010;@return the value of Options" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="110" tag="hblock_tag_5" canDelete="false" classfield_id="110" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of Options&amp;#010;Option storage class instance&amp;#010;@param value the value of Options" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="138" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Byte array of the icon. (used in menu and toolbar)" />
       </header>
       <ccfdeclarationcodeblock parent_id="138" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="138" tag="hblock_tag_11" canDelete="false" classfield_id="138" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of Icon&amp;#010;Byte array of the icon. (used in menu and toolbar)&amp;#010;@return the value of Icon" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="138" tag="hblock_tag_12" canDelete="false" classfield_id="138" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of Icon&amp;#010;Byte array of the icon. (used in menu and toolbar)&amp;#010;@param value the value of Icon" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="111" field_type="3" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="111" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="111" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="111" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="111" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="111" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="111" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="111" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="111" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="111" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="111" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="111" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="100" parent_class="100" fileExt=".cpp" fileName="toolbarplugin" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include &quot;plugin.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="135" tag="operation_135" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Should return the widget(control) that will be added to the toolbar" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			toolbarplugin.cpp - Copyright xander&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Dec 28 2004 at 21:18:20&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="102" parent_class="102" fileExt=".cpp" fileName="menuplugin" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include &quot;plugin.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="136" tag="operation_136" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Should return item that will be added to the popup menu" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			menuplugin.cpp - Copyright reflog&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Dec 28 2004 at 15:25:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="103" parent_class="103" fileExt=".cpp" fileName="eventplugin" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include &quot;plugin.h&quot;&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="137" tag="operation_137" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Should return a function that would handle this specific event" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			eventplugin.cpp - Copyright xander&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Dec 28 2004 at 21:20:43&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="109" parent_class="109" fileExt=".cpp" fileName="optionstorage" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="111" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="111" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="111" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="111" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="111" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="111" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="111" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="111" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="111" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="111" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="112" tag="operation_112" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="return specific item" />
         </header>
        </codeoperation>
        <codeoperation parent_id="117" tag="operation_117" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="set specific item" />
         </header>
        </codeoperation>
        <codeoperation parent_id="122" tag="operation_122" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="load options from xml string" />
         </header>
        </codeoperation>
        <codeoperation parent_id="123" tag="operation_123" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="save options to xml" />
         </header>
        </codeoperation>
        <codeoperation parent_id="131" tag="operation_131" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Creates a QFrame with all fields and controls for options" />
         </header>
        </codeoperation>
        <codeoperation parent_id="132" tag="operation_132" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Syncronize the content from the Frame to local settings storage" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			optionstorage.cpp - Copyright xander&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Dec 28 2004 at 21:54:32&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="111" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="111" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="111" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="111" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="111" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="111" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="111" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="111" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="111" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="111" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="111" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="111" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="125" parent_class="125" fileExt=".cpp" fileName="eventtype" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			eventtype.cpp - Copyright xander&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Dec 28 2004 at 21:17:10&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <codedocument writeOutCode="false" package="" id="Makefile_DOC" fileExt="" fileName="Makefile" >
     <textblocks/>
     <header>
      <codecomment tag="" />
     </header>
    </codedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader16" parent_class="16" fileExt=".h" fileName="blog" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef BLOG_H&amp;#010;#define BLOG_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;#include &quot;int.h&quot;&amp;#010;#include &quot;post.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //BLOG_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			blog.h - Copyright reflog&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Dec 27 2004 at 14:17:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="19" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Url used for preview" />
       </header>
       <ccfdeclarationcodeblock parent_id="19" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text=" string Url;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Url used for preview" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="19" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="19" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of Url&amp;#010;Url used for preview&amp;#010;@return the value of Url" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="19" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="19" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of Url&amp;#010;Url used for preview&amp;#010;@param value the value of Url" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="20" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Visible blog's name" />
       </header>
       <ccfdeclarationcodeblock parent_id="20" tag="tblock_1" canDelete="false" indentLevel="1" role_id="-1" text=" string Name;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Visible blog's name" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="20" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="20" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of Name&amp;#010;Visible blog's name&amp;#010;@return the value of Name" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="20" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="20" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of Name&amp;#010;Visible blog's name&amp;#010;@param value the value of Name" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="21" field_type="0" initialValue="0" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Internal blog id" />
       </header>
       <ccfdeclarationcodeblock parent_id="21" tag="tblock_2" canDelete="false" indentLevel="1" role_id="-1" text=" string ID;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Internal blog id" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="21" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="21" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of ID&amp;#010;Internal blog id&amp;#010;@return the value of ID" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="21" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="21" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of ID&amp;#010;Internal blog id&amp;#010;@param value the value of ID" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="70" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="70" tag="tblock_20" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Account ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="70" tag="hblock_tag_23" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="70" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="70" tag="hblock_tag_24" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="70" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="70" tag="hblock_tag_25" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="70" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="70" tag="hblock_tag_26" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="70" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="70" tag="hblock_tag_27" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="70" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="83" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="83" tag="tblock_28" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Post ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="83" tag="hblock_tag_29" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="83" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="83" tag="hblock_tag_30" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="83" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="83" tag="hblock_tag_31" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="83" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="83" tag="hblock_tag_32" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="83" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="83" tag="hblock_tag_33" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="83" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader58" parent_class="58" fileExt=".h" fileName="account" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef ACCOUNT_H&amp;#010;#define ACCOUNT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;int.h&quot;&amp;#010;#include &quot;blog.h&quot;&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="58" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Class Account&amp;#010;Base class for blog account providers" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="61" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text=" string Name;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Display name" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="63" tag="tblock_2" canDelete="false" indentLevel="1" role_id="-1" text=" string Username;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Login name" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="64" tag="tblock_5" canDelete="false" indentLevel="1" role_id="-1" text=" string Password;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Top Secret!" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="65" tag="tblock_8" canDelete="false" indentLevel="1" role_id="-1" text=" string Host;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Account's host" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="116" tag="tblock_17" canDelete="false" indentLevel="1" role_id="-1" text=" string SelectedBlog;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="id of currently selected blog" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="70" tag="tblock_11" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Blog ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Account ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="61" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="61" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of Name&amp;#010;Display name&amp;#010;@return the value of Name" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="61" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="61" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of Name&amp;#010;Display name&amp;#010;@param value the value of Name" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="63" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="63" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of Username&amp;#010;Login name&amp;#010;@return the value of Username" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="63" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="63" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of Username&amp;#010;Login name&amp;#010;@param value the value of Username" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="64" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="64" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of Password&amp;#010;Top Secret!&amp;#010;@return the value of Password" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="64" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="64" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of Password&amp;#010;Top Secret!&amp;#010;@param value the value of Password" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="65" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="65" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of Host&amp;#010;Account's host&amp;#010;@return the value of Host" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="65" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="65" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of Host&amp;#010;Account's host&amp;#010;@param value the value of Host" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="116" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="116" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of SelectedBlog&amp;#010;id of currently selected blog&amp;#010;@return the value of SelectedBlog" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="116" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="116" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of SelectedBlog&amp;#010;id of currently selected blog&amp;#010;@param value the value of SelectedBlog" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="70" tag="hblock_tag_12" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="70" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="70" tag="hblock_tag_13" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="70" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="70" tag="hblock_tag_14" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="70" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="70" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="70" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="70" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="70" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="66" tag="operation_66" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Perform login to server (if needed)" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="68" tag="operation_68" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="get the list of blogs for this account" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="85" tag="operation_85" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Return number of blogs in account" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="89" tag="operation_89" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Get a blog in account by it's id" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //ACCOUNT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			account.h - Copyright xander&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Dec 28 2004 at 21:17:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="61" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Display name" />
       </header>
       <ccfdeclarationcodeblock parent_id="61" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text=" string Name;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Display name" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="61" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="61" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of Name&amp;#010;Display name&amp;#010;@return the value of Name" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="61" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="61" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of Name&amp;#010;Display name&amp;#010;@param value the value of Name" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="63" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Login name" />
       </header>
       <ccfdeclarationcodeblock parent_id="63" tag="tblock_2" canDelete="false" indentLevel="1" role_id="-1" text=" string Username;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Login name" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="63" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="63" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of Username&amp;#010;Login name&amp;#010;@return the value of Username" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="63" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="63" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of Username&amp;#010;Login name&amp;#010;@param value the value of Username" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="64" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Top Secret!" />
       </header>
       <ccfdeclarationcodeblock parent_id="64" tag="tblock_5" canDelete="false" indentLevel="1" role_id="-1" text=" string Password;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Top Secret!" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="64" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="64" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of Password&amp;#010;Top Secret!&amp;#010;@return the value of Password" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="64" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="64" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of Password&amp;#010;Top Secret!&amp;#010;@param value the value of Password" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="65" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Account's host" />
       </header>
       <ccfdeclarationcodeblock parent_id="65" tag="tblock_8" canDelete="false" indentLevel="1" role_id="-1" text=" string Host;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Account's host" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="65" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="65" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of Host&amp;#010;Account's host&amp;#010;@return the value of Host" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="65" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="65" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of Host&amp;#010;Account's host&amp;#010;@param value the value of Host" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="116" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="id of currently selected blog" />
       </header>
       <ccfdeclarationcodeblock parent_id="116" tag="tblock_17" canDelete="false" indentLevel="1" role_id="-1" text=" string SelectedBlog;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="id of currently selected blog" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="116" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="116" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of SelectedBlog&amp;#010;id of currently selected blog&amp;#010;@return the value of SelectedBlog" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="116" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="116" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of SelectedBlog&amp;#010;id of currently selected blog&amp;#010;@param value the value of SelectedBlog" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="70" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="70" tag="tblock_11" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Blog ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="70" tag="hblock_tag_12" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="70" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="70" tag="hblock_tag_13" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="70" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="70" tag="hblock_tag_14" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="70" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="70" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="70" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="70" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="70" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader78" parent_class="78" fileExt=".h" fileName="post" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef POST_H&amp;#010;#define POST_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //POST_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			post.h - Copyright reflog&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Dec 27 2004 at 12:51:57&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="79" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="post's id" />
       </header>
       <ccfdeclarationcodeblock parent_id="79" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text=" string ID;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="post's id" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="79" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="79" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of ID&amp;#010;post's id&amp;#010;@return the value of ID" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="79" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="79" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of ID&amp;#010;post's id&amp;#010;@param value the value of ID" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="80" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="post's title" />
       </header>
       <ccfdeclarationcodeblock parent_id="80" tag="tblock_2" canDelete="false" indentLevel="1" role_id="-1" text=" string Title;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="post's title" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="80" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="80" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of Title&amp;#010;post's title&amp;#010;@return the value of Title" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="80" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="80" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of Title&amp;#010;post's title&amp;#010;@param value the value of Title" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="81" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="body of the post" />
       </header>
       <ccfdeclarationcodeblock parent_id="81" tag="tblock_5" canDelete="false" indentLevel="1" role_id="-1" text=" string Content;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="body of the post" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="81" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="81" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of Content&amp;#010;body of the post&amp;#010;@return the value of Content" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="81" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="81" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of Content&amp;#010;body of the post&amp;#010;@param value the value of Content" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="82" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="date of post's publication (or last update)" />
       </header>
       <ccfdeclarationcodeblock parent_id="82" tag="tblock_8" canDelete="false" indentLevel="1" role_id="-1" text=" string Created;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="date of post's publication (or last update)" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="82" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="82" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of Created&amp;#010;date of post's publication (or last update)&amp;#010;@return the value of Created" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="82" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="82" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of Created&amp;#010;date of post's publication (or last update)&amp;#010;@param value the value of Created" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="83" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="83" tag="tblock_11" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Blog ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="83" tag="hblock_tag_12" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="83" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="83" tag="hblock_tag_13" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="83" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="83" tag="hblock_tag_14" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="83" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="83" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="83" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="83" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="83" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader99" parent_class="99" fileExt=".h" fileName="plugin" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef PLUGIN_H&amp;#010;#define PLUGIN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;#include &quot;optionstorage.h&quot;&amp;#010;#include &quot;qpixmap.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //PLUGIN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			plugin.h - Copyright reflog&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Dec 28 2004 at 15:28:08&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="106" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Visible name. Will be used as tooltip, as menu caption or as item in config dialog." />
       </header>
       <ccfdeclarationcodeblock parent_id="106" tag="tblock_5" canDelete="false" indentLevel="1" role_id="-1" text=" string Name;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Visible name. Will be used as tooltip, as menu caption or as item in config dialog." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="106" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="106" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of Name&amp;#010;Visible name. Will be used as tooltip, as menu caption or as item in config dialog.&amp;#010;@return the value of Name" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="106" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="106" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of Name&amp;#010;Visible name. Will be used as tooltip, as menu caption or as item in config dialog.&amp;#010;@param value the value of Name" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="107" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Who's responsible for this???" />
       </header>
       <ccfdeclarationcodeblock parent_id="107" tag="tblock_8" canDelete="false" indentLevel="1" role_id="-1" text=" string Author;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Who's responsible for this???" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="107" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="107" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of Author&amp;#010;Who's responsible for this???&amp;#010;@return the value of Author" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="107" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="107" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of Author&amp;#010;Who's responsible for this???&amp;#010;@param value the value of Author" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="110" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Option storage class instance" />
       </header>
       <ccfdeclarationcodeblock parent_id="110" tag="tblock_11" canDelete="false" indentLevel="1" role_id="-1" text=" OptionStorage Options;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Option storage class instance" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="110" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="110" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of Options&amp;#010;Option storage class instance&amp;#010;@return the value of Options" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="110" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="110" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of Options&amp;#010;Option storage class instance&amp;#010;@param value the value of Options" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="138" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Byte array of the icon. (used in menu and toolbar)" />
       </header>
       <ccfdeclarationcodeblock parent_id="138" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text=" QPixmap Icon;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Byte array of the icon. (used in menu and toolbar)" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="138" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="138" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of Icon&amp;#010;Byte array of the icon. (used in menu and toolbar)&amp;#010;@return the value of Icon" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="138" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="138" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of Icon&amp;#010;Byte array of the icon. (used in menu and toolbar)&amp;#010;@param value the value of Icon" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="111" field_type="3" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="111" tag="tblock_14" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" OptionStorage ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="111" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="111" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="111" tag="hblock_tag_17" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="111" tag="hblock_tag_18" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="111" tag="hblock_tag_19" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader100" parent_class="100" fileExt=".h" fileName="toolbarplugin" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef TOOLBARPLUGIN_H&amp;#010;#define TOOLBARPLUGIN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;plugin.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="100" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Class ToolbarPlugin&amp;#010;Base class for plugins that provide a control on the toolbar" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="ToolbarPlugin ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="135" tag="operation_135" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Should return the widget(control) that will be added to the toolbar" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //TOOLBARPLUGIN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			toolbarplugin.h - Copyright xander&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Dec 28 2004 at 21:18:20&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader102" parent_class="102" fileExt=".h" fileName="menuplugin" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MENUPLUGIN_H&amp;#010;#define MENUPLUGIN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;plugin.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MENUPLUGIN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			menuplugin.h - Copyright reflog&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Dec 28 2004 at 15:25:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader103" parent_class="103" fileExt=".h" fileName="eventplugin" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef EVENTPLUGIN_H&amp;#010;#define EVENTPLUGIN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;plugin.h&quot;&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="103" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Class EventPlugin&amp;#010;Base class for plugins that are activated upon some specific event." />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="EventPlugin ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="137" tag="operation_137" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Should return a function that would handle this specific event" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //EVENTPLUGIN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			eventplugin.h - Copyright xander&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Dec 28 2004 at 21:20:43&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader109" parent_class="109" fileExt=".h" fileName="optionstorage" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OPTIONSTORAGE_H&amp;#010;#define OPTIONSTORAGE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="109" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Class OptionStorage&amp;#010;Class for getting/setting/loading/saving and displaying plugin's settings" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="111" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Plugin ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="OptionStorage ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="111" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="111" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="111" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="111" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="111" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="112" tag="operation_112" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="return specific item" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="117" tag="operation_117" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="set specific item" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="122" tag="operation_122" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="load options from xml string" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="123" tag="operation_123" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="save options to xml" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="131" tag="operation_131" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Creates a QFrame with all fields and controls for options" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="132" tag="operation_132" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Syncronize the content from the Frame to local settings storage" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OPTIONSTORAGE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			optionstorage.h - Copyright xander&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Dec 28 2004 at 21:54:32&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="111" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="111" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Plugin ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="111" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="111" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="111" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="111" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="111" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="111" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader125" parent_class="125" fileExt=".h" fileName="eventtype" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef EVENTTYPE_H&amp;#010;#define EVENTTYPE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="125" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Class EventType&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="EventType ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //EVENTTYPE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			eventtype.h - Copyright xander&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Dec 28 2004 at 21:17:10&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
   </codegenerator>
  </codegeneration>
 </XMI.extensions>
</XMI>
