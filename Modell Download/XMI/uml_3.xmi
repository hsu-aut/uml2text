<?xml version="1.0" encoding="UTF-8"?>
<XMI xmlns:UML="http://schema.omg.org/spec/UML/1.3" verified="false" timestamp="2006-07-04T15:00:49" xmi.version="1.2" >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>1.5.3</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.metamodel xmi.name="UML" href="UML.xml" xmi.version="1.3" />
 </XMI.header>
 <XMI.content>
  <UML:Model isSpecification="false" isLeaf="false" isRoot="false" xmi.id="m1" isAbstract="false" name="UML Model" >
   <UML:Namespace.ownedElement>
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="3" isRoot="false" isAbstract="false" name="datatype" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="11" isRoot="false" isAbstract="false" name="constructor" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="12" isRoot="false" isAbstract="false" name="friend" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="13" isRoot="false" isAbstract="false" name="virtual" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="89" isRoot="false" isAbstract="false" name="const" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="2" isRoot="false" isAbstract="false" name="int" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="4" isRoot="false" isAbstract="false" name="char" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="5" isRoot="false" isAbstract="false" name="bool" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="6" isRoot="false" isAbstract="false" name="float" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="7" isRoot="false" isAbstract="false" name="double" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="8" isRoot="false" isAbstract="false" name="long" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="9" isRoot="false" isAbstract="false" name="short" />
    <UML:DataType stereotype="3" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="10" isRoot="false" isAbstract="false" name="string" />
    <UML:Class comment="derived from: wxApp

main class controlling and creating (the) frontend(s)" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="18" isRoot="false" isAbstract="false" name="bijutsukan" >
     <UML:Classifier.feature>
      <UML:Operation stereotype="13" isSpecification="false" isLeaf="false" visibility="public" xmi.id="20" isRoot="false" isAbstract="false" isQuery="false" name="OnInit" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="17523" type="5" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class comment="derived from: wxFrame

this is the main frame in which almost everything is done. it creates and destroys its panels and has the menu." isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="43" isRoot="false" isAbstract="false" name="mainFrame" >
     <UML:Classifier.feature>
      <UML:Attribute comment="containing the ID of the current active event. this is used for more complex &quot;destructor&quot; code for instances issued by events" isSpecification="false" visibility="private" xmi.id="45" type="2" name="currentEvent" />
      <UML:Attribute comment="this will be used when we want to support multiple database files." isSpecification="false" visibility="private" xmi.id="47" type="5" name="dbIsOpen" />
      <UML:Attribute comment="this string contains the path (dependent on the plattform) of the database file" isSpecification="false" visibility="private" xmi.id="49" type="50" name="dbFileString" />
      <UML:Attribute comment="this is the wxFileName containing the path to the database file" isSpecification="false" visibility="private" xmi.id="54" type="55" name="dbFileName" />
      <UML:Attribute comment="one of the various panels" isSpecification="false" visibility="private" xmi.id="59" type="60" name="myAboutPanel" />
      <UML:Attribute comment="the (one and only) menubar." isSpecification="false" visibility="private" xmi.id="63" type="64" name="menuBar" />
      <UML:Attribute comment="one of the various menus" isSpecification="false" visibility="private" xmi.id="67" type="68" name="fileMenu" />
      <UML:Attribute comment="one of the various menus" isSpecification="false" visibility="private" xmi.id="71" type="68" name="findMenu" />
      <UML:Attribute comment="one of the various menus" isSpecification="false" visibility="private" xmi.id="73" type="68" name="findBySubMenu" />
      <UML:Attribute comment="one of the various menus" isSpecification="false" visibility="private" xmi.id="76" type="68" name="inputMenu" />
      <UML:Attribute comment="one of the various menus" isSpecification="false" visibility="private" xmi.id="78" type="68" name="categoryMenu" />
      <UML:Attribute comment="one of the various menus" isSpecification="false" visibility="private" xmi.id="80" type="68" name="optionsMenu" />
      <UML:Operation comment="the constructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="82" isRoot="false" isAbstract="false" isQuery="false" name="mainFrame" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="83" value="" type="50" name="title" />
        <UML:Parameter stereotype="89" isSpecification="false" visibility="private" xmi.id="87" value="" type="90" name="pos" />
        <UML:Parameter stereotype="89" isSpecification="false" visibility="private" xmi.id="95" value="" type="93" name="size" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="what happens when we quit?" isSpecification="false" isLeaf="false" visibility="public" xmi.id="98" isRoot="false" isAbstract="false" isQuery="false" name="onQuit" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter comment="a pointer" isSpecification="false" visibility="private" xmi.id="101" value="" type="99" name="event" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="this handels every (non quit) event. all events which dont happen in the frame (e.g. events of the elements in the panels) are handeled there" isSpecification="false" isLeaf="false" visibility="public" xmi.id="104" isRoot="false" isAbstract="false" isQuery="false" name="eventHandler" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter comment="its a pointer" isSpecification="false" visibility="private" xmi.id="105" value="" type="99" name="event" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="creates the menu" isSpecification="false" isLeaf="false" visibility="private" xmi.id="108" isRoot="false" isAbstract="false" isQuery="false" name="makeMenu" />
      <UML:Operation comment="deletes a panel. this is called by makeMenu before a new event is processed. the method uses currentEvent to determine whether objects are to delete" isSpecification="false" isLeaf="false" visibility="private" xmi.id="110" isRoot="false" isAbstract="false" isQuery="false" name="deletePanel" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class comment="not described yet - its so ... dumb -.-" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="60" isRoot="false" isAbstract="false" name="aboutPanel" />
    <UML:Class comment="class type: singleton. for saving ressources and avoiding locking problems on the index file we have fileIndex as a singleton object" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="134" isRoot="false" isAbstract="false" name="fileIndex" >
     <UML:Classifier.feature>
      <UML:Attribute comment="this is the main path index containing all files we know of" isSpecification="false" visibility="private" xmi.id="136" type="137" name="pathIndex" />
      <UML:Attribute comment="the image object array collects all create imageObjects. since fileIndex is the only class creating imageObjects this is a virtual instance singleton for each possible imageObject and thus saving ressources (or wasting them ... dunno)" isSpecification="false" visibility="private" xmi.id="5731" type="4386" name="imageObjectArray" />
      <UML:Operation comment="the constructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="141" isRoot="false" isAbstract="false" isQuery="false" name="fileIndex" />
      <UML:Operation comment="Returns a wxArrayString pointee to pathIndex of our fileIndex class." isSpecification="false" isLeaf="false" visibility="public" xmi.id="143" isRoot="false" isAbstract="false" isQuery="false" name="getPathIndex" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="17524" type="137" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="144" value="" type="50" name="value" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="146" value="" type="5" name="caseSensitive" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Adds filename specified by &lt;wxString filepath> to pathIndex." isSpecification="false" isLeaf="false" visibility="public" xmi.id="150" isRoot="false" isAbstract="false" isQuery="false" name="addFile" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="151" value="" type="50" name="filePath" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Deletes filename specified by &lt;wxString filepath> from pathIndex." isSpecification="false" isLeaf="false" visibility="public" xmi.id="156" isRoot="false" isAbstract="false" isQuery="false" name="delFile" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="157" value="" type="50" name="filePath" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="creates a imageObject (see imageObject.*) for the requested filePath" isSpecification="false" isLeaf="false" visibility="public" xmi.id="164" isRoot="false" isAbstract="false" isQuery="false" name="makeImageObject" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="165" value="" type="50" name="filePath" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Looks for &lt;wxString value> inside pathIndex.
&lt;bool caseSensitive> enables/disables case sensitive search.

this function returns the index of the element in a wxArrayString where the found element is." isSpecification="false" isLeaf="false" visibility="public" xmi.id="1177" isRoot="false" isAbstract="false" isQuery="false" name="findValue" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="17525" type="2" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="1178" value="" type="50" name="value" />
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="1190" value="" type="5" name="caseSensitive" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="6697" isRoot="false" isAbstract="false" isQuery="false" name="getImageObjects" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="17526" type="4386" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="213" isRoot="false" isAbstract="false" name="imageObject" >
     <UML:Classifier.feature>
      <UML:Attribute comment="this is the path of the image. a .bdf is appended to this path, and the state is serialized into this bdf file" isSpecification="false" visibility="private" xmi.id="221" type="50" name="filePath" />
      <UML:Attribute comment="this is the name of the image the user can set" isSpecification="false" visibility="private" xmi.id="224" type="50" name="fileTitle" />
      <UML:Attribute comment="the description the user can set" isSpecification="false" visibility="private" xmi.id="227" type="50" name="fileDescription" />
      <UML:Attribute comment="the category the user can set" isSpecification="false" visibility="private" xmi.id="230" type="50" name="fileCategory" />
      <UML:Attribute comment="the various labels the user can set" isSpecification="false" visibility="private" xmi.id="233" type="137" name="fileLabels" />
      <UML:Attribute comment="the various persons the user can set" isSpecification="false" visibility="private" xmi.id="236" type="137" name="filePersons" />
      <UML:Attribute comment="the various objects the user can set" isSpecification="false" visibility="private" xmi.id="239" type="137" name="fileObjects" />
      <UML:Attribute comment="the various locations the user can set" isSpecification="false" visibility="private" xmi.id="242" type="137" name="fileLocations" />
      <UML:Attribute comment="the various positions (from where the image is taken) the user can set" isSpecification="false" visibility="private" xmi.id="245" type="137" name="filePositions" />
      <UML:Operation comment="constructor.

the constructor can either take no argument or the specified argument. if the argument is specified the constructor will load its stated from the serialized data. if no path is specified you need to save the objects state" isSpecification="false" isLeaf="false" visibility="public" xmi.id="248" isRoot="false" isAbstract="false" isQuery="false" name="imageObject" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter comment="optional parameter - 2 constructors" isSpecification="false" visibility="private" xmi.id="252" value="" type="50" name="path" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Initializes and returns new &lt;wxString> object with value of class member &lt;wxString filePath>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="255" isRoot="false" isAbstract="false" isQuery="false" name="getFilePath" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="17527" type="50" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Initializes and returns new &lt;wxString> object with value of class member &lt;wxString fileName>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="261" isRoot="false" isAbstract="false" isQuery="false" name="getFileTitle" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="17528" type="50" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Initializes and returns new &lt;wxString> object with value of class member&lt;wxString fileDescription>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="266" isRoot="false" isAbstract="false" isQuery="false" name="getFileDescription" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="17529" type="50" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Initializes and returns new &lt;wxString> object with value of class member &lt;wxString fileCategory>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="272" isRoot="false" isAbstract="false" isQuery="false" name="getCategory" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="17530" type="50" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Sets value of class member &lt;wxString filePath> to &lt;wxString nfilePath>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="279" isRoot="false" isAbstract="false" isQuery="false" name="setFilePath" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="280" value="" type="50" name="nfilePath" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Sets value of class member &lt;wxString fileName> to &lt;wxString nfileName>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="293" isRoot="false" isAbstract="false" isQuery="false" name="setFileTitle" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="294" value="" type="50" name="nfileTitle" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Sets value of class member &lt;wxString fileDescription> to &lt;wxString nfileDescription>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="307" isRoot="false" isAbstract="false" isQuery="false" name="setFileDescription" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="308" value="" type="50" name="nfileDescription" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Sets value of class member &lt;wxString fileCategory> to &lt;wxString nfileCategory>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="321" isRoot="false" isAbstract="false" isQuery="false" name="setFileCategory" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="322" value="" type="50" name="nfileCategory" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Initializes and returns new &lt;wxArrayString> Object  with values of class member &lt;wxArrayString fileLabels>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="353" isRoot="false" isAbstract="false" isQuery="false" name="getFileLabels" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="17531" type="137" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Initializes and returns new &lt;wxArrayString> Object  with values of class member &lt;wxArrayString filePersons>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="361" isRoot="false" isAbstract="false" isQuery="false" name="getFilePersons" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="17532" type="137" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Initializes and returns new &lt;wxArrayString> Object  with values of class member &lt;wxArrayString fileObjects>
" isSpecification="false" isLeaf="false" visibility="public" xmi.id="370" isRoot="false" isAbstract="false" isQuery="false" name="getFileObjects" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="17533" type="137" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Initializes and returns new &lt;wxArrayString> Object  with values of class member &lt;wxArrayString fileLocations>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="380" isRoot="false" isAbstract="false" isQuery="false" name="getFileLocations" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="17534" type="137" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Initializes and returns new &lt;wxArrayString> Object  with values of class member &lt;wxArrayString filePositions>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="392" isRoot="false" isAbstract="false" isQuery="false" name="getFilePositions" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="17535" type="137" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Adds &lt;wxString nfileLabel> to class member &lt;wxArrayString fileLabels>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="426" isRoot="false" isAbstract="false" isQuery="false" name="addFileLables" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="427" value="" type="50" name="nfileLabel" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Adds &lt;wxString nfilePerson> to class member &lt;wxArrayString filePersons>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="461" isRoot="false" isAbstract="false" isQuery="false" name="addFilePersons" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="473" value="" type="50" name="nfilePerson" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Adds &lt;wxString nfileObject> to class member &lt;wxArrayString fileObjects>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="496" isRoot="false" isAbstract="false" isQuery="false" name="addFileObjects" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="497" value="" type="50" name="nfileObject" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Adds &lt;wxString nfileLocation> to class member&lt;wxArrayString fileLocations>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="520" isRoot="false" isAbstract="false" isQuery="false" name="addFileLocations" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="521" value="" type="50" name="nfileLocation" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Adds &lt;wxString nFilePosition> to class member &lt;wxArrayString filePositions>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="544" isRoot="false" isAbstract="false" isQuery="false" name="addFilePositions" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="545" value="" type="50" name="nfilePosition" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Removes &lt;wxString nfileLabel> from class member &lt;wxArrayString fileLabels>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="568" isRoot="false" isAbstract="false" isQuery="false" name="delFileLabels" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="569" value="" type="50" name="nfileLabel" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Removes &lt;wxString nfilePerson> from class member &lt;wxArrayString filePersons>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="605" isRoot="false" isAbstract="false" isQuery="false" name="delFilePersons" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="606" value="" type="50" name="nfilePerson" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Removes &lt;wxString nfileObject> from class member &lt;wxArrayString fileObjects>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="629" isRoot="false" isAbstract="false" isQuery="false" name="delFileObjects" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="630" value="" type="50" name="nfileObject" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Removes &lt;wxString nfileLocation> from class member &lt;wxArrayString fileLocations>
" isSpecification="false" isLeaf="false" visibility="public" xmi.id="697" isRoot="false" isAbstract="false" isQuery="false" name="delFileLocations" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="698" value="" type="50" name="nfileLocation" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="Removes &lt;wxString nfilePosition> from class member &lt;wxArrayString filePositions>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="721" isRoot="false" isAbstract="false" isQuery="false" name="delFilePositions" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="722" value="" type="50" name="nfilePosition" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class comment="derived from: wxPanel

the main panel provides a overview of bijutsukans functionality. it may lead to the mainfeatures. " isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="2113" isRoot="false" isAbstract="false" name="mainPanel" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="6299" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="2127" type="2140" name="mainCaption" />
      <UML:Attribute comment="describes the find functionality" isSpecification="false" visibility="private" xmi.id="2213" type="2140" name="findDescription" />
      <UML:Attribute comment="describes the list functionality" isSpecification="false" visibility="private" xmi.id="2227" type="2140" name="listDescription" />
      <UML:Attribute comment="describes the input functionality" isSpecification="false" visibility="private" xmi.id="2240" type="2140" name="inputDescription" />
      <UML:Attribute comment="starts the input wizard (as from the menu)" isSpecification="false" visibility="private" xmi.id="2253" type="2254" name="inputWizard" />
      <UML:Attribute comment="starts the 'input a file' dialog (as from the menu)" isSpecification="false" visibility="private" xmi.id="2279" type="2254" name="inputPath" />
      <UML:Attribute comment="starts the input a dir functionality (as from the menu)" isSpecification="false" visibility="private" xmi.id="2293" type="2254" name="inputDir" />
      <UML:Attribute comment="opens the file list panel" isSpecification="false" visibility="private" xmi.id="2330" type="2254" name="fileList" />
      <UML:Attribute comment="opens the label list panel" isSpecification="false" visibility="private" xmi.id="2343" type="2254" name="labelList" />
      <UML:Attribute comment="opens the person list panel" isSpecification="false" visibility="private" xmi.id="2356" type="2254" name="personList" />
      <UML:Attribute comment="opens the position list panel" isSpecification="false" visibility="private" xmi.id="2369" type="2254" name="positionList" />
      <UML:Attribute comment="opens a panel for the menu find by functionality (list of what to find)" isSpecification="false" visibility="private" xmi.id="2541" type="2254" name="findBy" />
      <UML:Operation comment="constructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="2555" isRoot="false" isAbstract="false" isQuery="false" name="mainPanel" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="2569" value="" type="2556" name="parent" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="handels the events (mainly button presses in this panel)" isSpecification="false" isLeaf="false" visibility="public" xmi.id="2594" isRoot="false" isAbstract="false" isQuery="false" name="eventHandler" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="2595" value="" type="99" name="event" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="137" isRoot="false" isAbstract="false" name="wxArrayString" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="2254" isRoot="false" isAbstract="false" name="wxButton" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="99" isRoot="false" isAbstract="false" name="wxCommandEvent" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="55" isRoot="false" isAbstract="false" name="wxFileName" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="68" isRoot="false" isAbstract="false" name="wxMenu" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="64" isRoot="false" isAbstract="false" name="wxMenuBar" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="90" isRoot="false" isAbstract="false" name="wxPoint" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="93" isRoot="false" isAbstract="false" name="wxSize" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="2140" isRoot="false" isAbstract="false" name="wxStaticText" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="50" isRoot="false" isAbstract="false" name="wxString" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="2556" isRoot="false" isAbstract="false" name="wxWindow" />
    <UML:Class comment="the fileListPanel shows a list of all files in the index." isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="4243" isRoot="false" isAbstract="false" name="fileListPanel" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="6338" />
      <UML:Generalization xmi.idref="7218" />
      <UML:Generalization xmi.idref="7888" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute comment="for reading the pathindex and " isSpecification="false" visibility="private" xmi.id="4372" type="134" name="myFileList" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="10010" type="9180" name="fileSelector" />
      <UML:Operation comment="constructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="6886" isRoot="false" isAbstract="false" isQuery="false" name="fileListPanel" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="4386" isRoot="false" isAbstract="false" name="wxArray" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="4334" isRoot="false" isAbstract="false" name="wxGrid" />
    <UML:Class comment="drawingPanel is a parent class for every class which needs to draw  (especially for thumbnail previews) on the screen. since this is a rather complex task we have to source it out." isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="6249" isRoot="false" isAbstract="false" name="drawingPanel" >
     <UML:Classifier.feature>
      <UML:Attribute comment="instance of the " isSpecification="false" visibility="private" xmi.id="12205" type="11517" name="drawingClass" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class comment="this panel allows the user to see all images in one or more labels selected by a wxListCtrl(?). see gridPanel and drawingPanel for more details" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="6548" isRoot="false" isAbstract="false" name="labeListPanel" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="6763" />
      <UML:Generalization xmi.idref="7247" />
      <UML:Generalization xmi.idref="7917" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute comment="all labels we know of" isSpecification="false" visibility="private" xmi.id="7385" type="137" name="myLabelList" />
      <UML:Attribute comment="for selecting the labels to show" isSpecification="false" visibility="private" xmi.id="7399" type="7453" name="labelSelector" />
      <UML:Operation comment="the constructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="7561" isRoot="false" isAbstract="false" isQuery="false" name="labeListPanel" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="6942" isRoot="false" isAbstract="false" name="wxGridEvent" />
    <UML:Class comment="existent since the whole grid handling is getting more complex.

this is the panel parent for panels which do their listings in grids with specific field information (such as persons, labels, objects). so mainly for use in *ListPanels" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="7191" isRoot="false" isAbstract="false" name="specificGridPanel" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="7413" isRoot="false" isAbstract="false" name="wxComboBox" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="7453" isRoot="false" isAbstract="false" name="wxListCtrl" />
    <UML:Class comment="the genericListPanel implements all similarities between fileListPanel, labeListPanel, personListPanel, objectListPanel and positionListPanel" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="7777" isRoot="false" isAbstract="false" name="genericListPanel" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="7830" />
      <UML:Generalization xmi.idref="7859" />
      <UML:Generalization xmi.idref="13138" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute comment="edit the current image" isSpecification="false" visibility="private" xmi.id="8247" type="2254" name="editButton" />
      <UML:Attribute comment="delete the current image" isSpecification="false" visibility="private" xmi.id="8261" type="2254" name="deleteButton" />
      <UML:Attribute comment="view the current image" isSpecification="false" visibility="private" xmi.id="8275" type="2254" name="viewButton" />
      <UML:Attribute comment="button to open a dialog which allows to set a attribute on a number of images. for example if you made some night shots you don't want to set the label 'nightshot' for all those image - with this you can set them all with one click" isSpecification="false" visibility="private" xmi.id="8289" type="2254" name="setMultipleAttributeButton" />
      <UML:Operation comment="handels all events coming from the grid. this calls undefind (or only as empty &quot;templates&quot;) defined functions which are defined (or overridden) by the &quot;real&quot; panels" isSpecification="false" isLeaf="false" visibility="public" xmi.id="8701" isRoot="false" isAbstract="false" isQuery="false" name="gridEventHandler" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="8702" value="" type="6942" name="event" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="handels all events which are not coming from the grid. this calls undefind (or only as empty &quot;templates&quot;) defined functions which are defined (or overridden) by the &quot;real&quot; panels" isSpecification="false" isLeaf="false" visibility="public" xmi.id="8742" isRoot="false" isAbstract="false" isQuery="false" name="genericEventHandler" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="8743" value="" type="99" name="event" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class comment="the personListPanel allows to select one person using a wxTextCtrl. in the grid all matching images are shown. see gridPanel and darwingPanel for more details :P" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="8407" isRoot="false" isAbstract="false" name="personListPanel" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="8500" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute comment="list of all persons we know of" isSpecification="false" visibility="private" xmi.id="8447" type="137" name="myPersonList" />
      <UML:Attribute comment="the listctrl for selecting which persons should be shown" isSpecification="false" visibility="private" xmi.id="8568" type="9180" name="personSelector" />
      <UML:Operation comment="constrcutor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="8582" isRoot="false" isAbstract="false" isQuery="false" name="personListPanel" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class comment="the objectListPanel allows the user to get a list of his saved objects using fulltext search in a wxTextCtrl" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="9085" isRoot="false" isAbstract="false" name="objectListPanel" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="9112" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute comment="list of all objects we know of" isSpecification="false" visibility="private" xmi.id="9246" type="137" name="myObjectList" />
      <UML:Attribute comment="the textfile to search for objects with" isSpecification="false" visibility="private" xmi.id="9325" type="9180" name="objectSelector" />
      <UML:Operation comment="ctor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="9352" isRoot="false" isAbstract="false" isQuery="false" name="objectListPanel" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="9180" isRoot="false" isAbstract="false" name="wxTextCtrl" />
    <UML:Class comment="this panel allows the user to search for the positions via a wxTextCtrl field" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="9418" isRoot="false" isAbstract="false" name="positionListPanel" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="9499" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute comment="all positions we know of" isSpecification="false" visibility="private" xmi.id="9445" type="137" name="myPositionList" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="9472" type="9180" name="positionSelector" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class comment="this is the parent for panels which display information about the results of specific fields in a grid. so mainly *ListPanels" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="10725" isRoot="false" isAbstract="false" name="imageGridPanel" />
    <UML:Class comment="the generic result panel allows all those tiny find dialogs to display their search results together with a small preview of the image and the description (thumbnail/descr only when clicked)" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="10981" isRoot="false" isAbstract="false" name="genericResultPanel" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="11091" />
      <UML:Generalization xmi.idref="11120" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute comment="the full description of the currently selected image" isSpecification="false" visibility="private" xmi.id="11228" type="2140" name="description" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="11255" type="2254" name="editButton" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="11269" type="2254" name="viewButton" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="11283" type="2254" name="deleteButton" />
      <UML:Operation comment="ctor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="11201" isRoot="false" isAbstract="false" isQuery="false" name="genericResultPanel" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="11312" isRoot="false" isAbstract="false" isQuery="false" name="gridEventHandler" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="11313" value="" type="6942" name="event" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="11340" isRoot="false" isAbstract="false" isQuery="false" name="genericEventHandler" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="11341" value="" type="99" name="event" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class comment="derived from: wxWindow

provides a wxWindow able to pain a wxImage myImage" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="11517" isRoot="false" isAbstract="true" name="imageDrawingClass" >
     <UML:Classifier.feature>
      <UML:Attribute comment="the (temporarily existing?) dc to draw the image" isSpecification="false" visibility="private" xmi.id="11562" type="11563" name="myDC" />
      <UML:Attribute comment="the bitmap we have converted" isSpecification="false" visibility="private" xmi.id="11590" type="11604" name="myBitMap" />
      <UML:Attribute comment="the raw image our constructor gets" isSpecification="false" visibility="private" xmi.id="11631" type="11632" name="myImage" />
      <UML:Operation comment="constructor calling
- the original wxWindow ctor with the arguments we've got
- convertImage" isSpecification="false" isLeaf="false" visibility="public" xmi.id="11699" isRoot="false" isAbstract="false" isQuery="false" name="imageDrawingClass" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter comment="type: pointer (wxWindow* parent)

passed to the original wxWindow ctor" isSpecification="false" visibility="private" xmi.id="11713" value="" type="2556" name="parent" />
        <UML:Parameter comment="passed to the original wxWindow ctor" isSpecification="false" visibility="private" xmi.id="11754" value="" type="11740" name="id" />
        <UML:Parameter comment="the image to be converted and displayed" isSpecification="false" visibility="private" xmi.id="11794" value="" type="11632" name="myImage" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation comment="converts a wxImage to the wxBitmap we need" isSpecification="false" isLeaf="false" visibility="public" xmi.id="11685" isRoot="false" isAbstract="false" isQuery="false" name="convertImage" />
      <UML:Operation comment="this happens so we  can draw our image

in OnPaint we draw our bitmap via our paintDC" isSpecification="false" isLeaf="false" visibility="public" xmi.id="11977" isRoot="false" isAbstract="false" isQuery="false" name="onPaint" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter comment="type: to dereference pointer (wxPaintEvent&amp; ev)

" isSpecification="false" visibility="private" xmi.id="12005" value="" type="11991" name="ev" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="11563" isRoot="false" isAbstract="false" name="wxPaintDC" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="11604" isRoot="false" isAbstract="false" name="wxBitmap" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="11632" isRoot="false" isAbstract="false" name="wxImage" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="11740" isRoot="false" isAbstract="false" name="wxWindowID" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="11991" isRoot="false" isAbstract="false" name="wxPaintEvent" />
    <UML:Class comment="parent for multiFilePanel and singleFilePanel. inputmask for the various attributes of a image." isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="13210" isRoot="false" isAbstract="false" name="genericFilePanel" >
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13519" type="2140" name="pathText" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13546" type="2140" name="titleText" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13574" type="13575" name="descriptionBox" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13629" type="13575" name="categoryBox" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13643" type="13575" name="labelBox" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13657" type="13575" name="personBox" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13684" type="13575" name="objectBox" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13698" type="13575" name="locationBox" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13712" type="13575" name="positionBox" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13752" type="9180" name="descriptionInput" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13766" type="9180" name="categoryInput" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13793" type="9180" name="labelInput" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13833" type="9180" name="personInput" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13847" type="9180" name="objectInput" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13861" type="9180" name="locationIInput" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13875" type="9180" name="positionInput" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13928" type="7453" name="categoryOldList" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13942" type="7453" name="labelOldList" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13956" type="7453" name="personOldList" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13970" type="7453" name="objectOldList" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="13984" type="7453" name="locationOldList" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="14025" type="7453" name="positionOldList" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="14039" type="2140" name="catgorySelected" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="14054" type="7453" name="labelSelected" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="14068" type="7453" name="personSelected" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="14082" type="7453" name="objectSelected" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="14109" type="7453" name="locationSelected" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="14123" type="7453" name="positionSelected" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="14176" type="2254" name="categoryAdd" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="14190" type="2254" name="labelAdd" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="14217" type="2254" name="personAdd" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="14231" type="2254" name="objectAdd" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="14245" type="2254" name="locationAdd" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="14259" type="2254" name="positionAdd" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="14299" type="2254" name="labelSelect" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="14313" type="2254" name="personSelect" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="14327" type="2254" name="objectSelect" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="14341" type="2254" name="locationSelect" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="14355" type="2254" name="positionSelect" />
      <UML:Operation comment="ctor - creates this totally fucked up object -.-" isSpecification="false" isLeaf="false" visibility="public" xmi.id="14434" isRoot="false" isAbstract="false" isQuery="false" name="genericFilePanel" />
      <UML:Operation comment="handling the various evens happening in this frame ..." isSpecification="false" isLeaf="false" visibility="public" xmi.id="14488" isRoot="false" isAbstract="false" isQuery="false" name="eventHandler" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" visibility="private" xmi.id="14515" value="" type="99" name="event" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="13378" isRoot="false" isAbstract="false" name="multiAttributeInput" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="13575" isRoot="false" isAbstract="false" name="wxStaticBox" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="13985" isRoot="false" isAbstract="false" name="wxListCtrl\" />
    <UML:Class comment="allowing to input a single selected file" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="14648" isRoot="false" isAbstract="false" name="singleFilePanel" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="14763" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="14998" type="213" name="myImageObject" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="15053" type="134" name="myFileIndex" />
      <UML:Operation comment="ctor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15814" isRoot="false" isAbstract="false" isQuery="false" name="singleFilePanel" />
      <UML:Operation comment="saves the inputted data in the imageObject and indexes it via the fileIndex" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15936" isRoot="false" isAbstract="false" isQuery="false" name="saveData" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Association comment="the mainapp (wxApp) creates its only frame" isSpecification="false" visibility="public" namespace="m1" xmi.id="2007" name="creates" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="2008" aggregation="none" type="18" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="2009" aggregation="none" type="43" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association comment="the fileIndex creates (and returns to the requester(?)) the imageObject" isSpecification="false" visibility="public" namespace="m1" xmi.id="2046" name="creates" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="2047" aggregation="none" type="134" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="2048" aggregation="none" type="213" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association comment="the mainframe creates the mainpanel at startup or as requested" isSpecification="false" visibility="public" namespace="m1" xmi.id="2692" name="creates" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="2693" aggregation="none" type="43" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="2694" aggregation="none" type="2113" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association comment="creates the panel as requested from the menu" isSpecification="false" visibility="public" namespace="m1" xmi.id="3022" name="creates" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="3023" aggregation="none" type="43" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="3024" aggregation="none" type="60" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association comment="the mainFrame creates a mainPanel at startup or when requested." isSpecification="false" visibility="public" namespace="m1" xmi.id="4113" name="Creates" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="4114" aggregation="none" type="43" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="4115" aggregation="none" type="2113" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="4268" name="Creates" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="4269" aggregation="none" type="43" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="4270" aggregation="none" type="4243" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="4435" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="4436" aggregation="none" type="4243" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="4437" aggregation="none" type="134" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="4462" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="4463" aggregation="none" type="4243" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="4464" aggregation="none" type="213" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="5368" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="5369" aggregation="aggregate" type="43" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="5370" aggregation="none" type="2113" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="5395" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="5396" aggregation="aggregate" type="43" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="5397" aggregation="none" type="4243" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="5572" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="5573" aggregation="composite" type="18" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="5574" aggregation="none" type="43" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association comment="see fileIndex::imageObjectArray for more information" isSpecification="false" visibility="public" namespace="m1" xmi.id="5780" name="Collecting imageObjects" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="5781" aggregation="composite" type="134" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="5782" aggregation="none" type="213" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association comment="the fileListPanel contains one of the singleton fileIndex instances for reading imageObjects and listing them" isSpecification="false" visibility="public" namespace="m1" xmi.id="5991" name="Contains" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="5992" aggregation="aggregate" type="4243" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="5993" aggregation="none" type="134" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Generalization isSpecification="false" child="2113" visibility="public" namespace="m1" xmi.id="6299" parent="6249" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="4243" visibility="public" namespace="m1" xmi.id="6338" parent="6249" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="6548" visibility="public" namespace="m1" xmi.id="6763" parent="6249" discriminator="" name="" />
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="6792" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="6793" aggregation="composite" type="6548" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="6794" aggregation="none" type="134" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Generalization isSpecification="false" child="4243" visibility="public" namespace="m1" xmi.id="7218" parent="7191" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="6548" visibility="public" namespace="m1" xmi.id="7247" parent="7191" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="7777" visibility="public" namespace="m1" xmi.id="7830" parent="6249" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="7777" visibility="public" namespace="m1" xmi.id="7859" parent="7191" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="4243" visibility="public" namespace="m1" xmi.id="7888" parent="7777" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="6548" visibility="public" namespace="m1" xmi.id="7917" parent="7777" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="8407" visibility="public" namespace="m1" xmi.id="8500" parent="7777" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="9085" visibility="public" namespace="m1" xmi.id="9112" parent="7777" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="9418" visibility="public" namespace="m1" xmi.id="9499" parent="7777" discriminator="" name="" />
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="9541" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="9542" aggregation="composite" type="134" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="9543" aggregation="none" type="8407" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="9573" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="9574" aggregation="composite" type="8407" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="9575" aggregation="none" type="134" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="9602" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="9603" aggregation="composite" type="9085" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="9604" aggregation="none" type="134" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="9644" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="9645" aggregation="composite" type="9418" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="9646" aggregation="none" type="134" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="10796" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="10797" aggregation="none" type="7777" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="10798" aggregation="none" type="10725" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Generalization isSpecification="false" child="10981" visibility="public" namespace="m1" xmi.id="11091" parent="10725" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="10981" visibility="public" namespace="m1" xmi.id="11120" parent="6249" discriminator="" name="" />
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="12071" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="12072" aggregation="composite" type="6249" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="12073" aggregation="none" type="11517" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="12637" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="12638" aggregation="composite" type="6548" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="12639" aggregation="none" type="43" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="12666" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="12667" aggregation="composite" type="8407" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="12668" aggregation="none" type="43" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="12695" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="12696" aggregation="composite" type="9085" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="12697" aggregation="none" type="43" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="12724" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="12725" aggregation="composite" type="9418" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="12726" aggregation="none" type="43" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Generalization isSpecification="false" child="7777" visibility="public" namespace="m1" xmi.id="13138" parent="10725" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="14648" visibility="public" namespace="m1" xmi.id="14763" parent="13210" discriminator="" name="" />
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="14871" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="14872" aggregation="composite" type="213" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="14873" aggregation="none" type="14648" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="14900" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="14901" aggregation="composite" type="14648" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="14902" aggregation="none" type="134" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="14942" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="14943" aggregation="composite" type="134" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="14944" aggregation="none" type="14648" name="" />
     </UML:Association.connection>
    </UML:Association>
   </UML:Namespace.ownedElement>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello" >
  <docsettings viewid="1" documentation="" uniqueid="17535" />
  <diagrams>
   <diagram snapgrid="1" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="48" showgrid="1" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1818" snapy="10" showatts="1" xmi.id="1" documentation="" type="402" showops="1" showpackage="0" name="class diagram" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans Serif,10,-1,0,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="1814" >
    <widgets>
     <classwidget usesdiagramfillcolour="0" width="148" showattsigs="601" usesdiagramusefillcolour="0" x="570" y="100" showopsigs="601" linewidth="none" fillcolour="#ffffc0" height="58" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="18" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="338" showattsigs="601" usesdiagramusefillcolour="0" x="480" y="210" showopsigs="601" linewidth="none" fillcolour="#ffffc0" height="270" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="43" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="403" showattsigs="601" usesdiagramusefillcolour="0" x="1320" y="200" showopsigs="601" linewidth="none" fillcolour="#ffffc0" height="150" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="134" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="280" showattsigs="601" usesdiagramusefillcolour="0" x="1510" y="430" showopsigs="601" linewidth="none" fillcolour="#ffffc0" height="510" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="213" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="252" showattsigs="601" usesdiagramusefillcolour="0" x="890" y="80" showopsigs="601" linewidth="none" fillcolour="#ffffc0" height="225" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="2113" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="152" showattsigs="601" usesdiagramusefillcolour="0" x="1020" y="540" showopsigs="601" linewidth="none" fillcolour="#ffffc0" height="60" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="4243" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="219" showattsigs="601" usesdiagramusefillcolour="0" x="340" y="950" showopsigs="601" linewidth="none" fillcolour="#ffffc0" height="37" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="6249" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="175" showattsigs="601" usesdiagramusefillcolour="0" x="1010" y="620" showopsigs="601" linewidth="none" fillcolour="#ffffc0" height="60" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="6548" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="122" showattsigs="601" usesdiagramusefillcolour="0" x="570" y="950" showopsigs="601" linewidth="none" fillcolour="#ffffc0" height="29" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="7191" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="294" showattsigs="601" usesdiagramusefillcolour="0" x="540" y="740" showopsigs="601" linewidth="none" fillcolour="#ffffc0" height="105" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="7777" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="185" showattsigs="601" usesdiagramusefillcolour="0" x="1010" y="700" showopsigs="601" linewidth="none" fillcolour="#ffffc0" height="60" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="8407" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="181" showattsigs="601" usesdiagramusefillcolour="0" x="1010" y="770" showopsigs="601" linewidth="none" fillcolour="#ffffc0" height="60" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="9085" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="190" showattsigs="601" usesdiagramusefillcolour="0" x="1010" y="850" showopsigs="601" linewidth="none" fillcolour="#ffffc0" height="52" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="9418" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="111" showattsigs="601" usesdiagramusefillcolour="0" x="700" y="950" showopsigs="601" linewidth="none" fillcolour="#ffffc0" height="29" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="10725" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="294" showattsigs="601" usesdiagramusefillcolour="0" x="460" y="1050" showopsigs="601" linewidth="none" fillcolour="#ffffc0" height="120" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="10981" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="463" showattsigs="601" usesdiagramusefillcolour="0" x="20" y="750" drawascircle="0" showopsigs="601" linewidth="none" fillcolour="#ffffc0" height="105" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="11517" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,5,75,1,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="252" showattsigs="601" usesdiagramusefillcolour="0" x="500" y="1180" showopsigs="601" linewidth="none" fillcolour="#ffffc0" height="630" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="13210" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="0" width="188" showattsigs="601" usesdiagramusefillcolour="0" x="910" y="1200" showopsigs="601" linewidth="none" fillcolour="#ffffc0" height="75" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="14648" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="4" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="2113" widgetaid="43" xmi.id="5368" linecolor="none" >
      <linepath>
       <startpoint startx="818" starty="280" />
       <endpoint endx="890" endy="190" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="4" indexa="2" totalcountb="3" indexb="1" linewidth="none" widgetbid="4243" widgetaid="43" xmi.id="5395" linecolor="none" >
      <linepath>
       <startpoint startx="818" starty="350" />
       <endpoint endx="1070" endy="540" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="43" widgetaid="18" xmi.id="5572" linecolor="none" >
      <linepath>
       <startpoint startx="640" starty="158" />
       <endpoint endx="650" endy="210" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="8" indexa="7" totalcountb="2" indexb="1" linewidth="none" widgetbid="213" widgetaid="134" xmi.id="5780" linecolor="none" >
      <linepath>
       <startpoint startx="1670" starty="350" />
       <endpoint endx="1650" endy="430" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="144" usesdiagramusefillcolour="1" x="1670" y="380" linewidth="none" posttext="" role="703" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="17434" text="Collecting imageObjects" font="Sans Serif,10,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="8" indexb="2" linewidth="none" widgetbid="134" widgetaid="6548" xmi.id="6792" linecolor="none" >
      <linepath>
       <startpoint startx="1130" starty="620" />
       <endpoint endx="1420" endy="350" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="4" indexa="1" totalcountb="4" indexb="3" linewidth="none" widgetbid="6249" widgetaid="7777" xmi.id="7830" linecolor="none" >
      <linepath>
       <startpoint startx="610" starty="845" />
       <endpoint endx="500" endy="950" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="4" indexa="2" totalcountb="2" indexb="1" linewidth="none" widgetbid="7191" widgetaid="7777" xmi.id="7859" linecolor="none" >
      <linepath>
       <startpoint startx="690" starty="845" />
       <endpoint endx="630" endy="950" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="7777" widgetaid="4243" xmi.id="7888" linecolor="none" >
      <linepath>
       <startpoint startx="1100" starty="600" />
       <endpoint endx="690" endy="740" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="5" indexb="1" linewidth="none" widgetbid="7777" widgetaid="6548" xmi.id="7917" linecolor="none" >
      <linepath>
       <startpoint startx="1100" starty="680" />
       <endpoint endx="834" endy="760" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" visibilityB="200" totalcountb="8" indexb="1" linewidth="none" widgetbid="134" widgetaid="4243" xmi.id="4372" type="510" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="1120" starty="540" />
       <endpoint endx="1370" endy="350" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="76" usesdiagramusefillcolour="1" x="1300" y="340" linewidth="none" posttext="" role="710" fillcolour="none" height="19" usefillcolor="1" pretext="+" isinstance="0" xmi.id="17435" showstereotype="1" text="myFileIdex" font="Sans Serif,10,-1,0,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="5" indexb="2" linewidth="none" widgetbid="7777" widgetaid="8407" xmi.id="8500" linecolor="none" >
      <linepath>
       <startpoint startx="1010" starty="730" />
       <endpoint endx="834" endy="780" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="5" indexb="3" linewidth="none" widgetbid="7777" widgetaid="9085" xmi.id="9112" linecolor="none" >
      <linepath>
       <startpoint startx="1010" starty="800" />
       <endpoint endx="834" endy="800" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="5" indexb="4" linewidth="none" widgetbid="7777" widgetaid="9418" xmi.id="9499" linecolor="none" >
      <linepath>
       <startpoint startx="1010" starty="880" />
       <endpoint endx="834" endy="820" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="8" indexb="3" linewidth="none" widgetbid="134" widgetaid="8407" xmi.id="9573" linecolor="none" >
      <linepath>
       <startpoint startx="1130" starty="700" />
       <endpoint endx="1470" endy="350" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="8" indexb="4" linewidth="none" widgetbid="134" widgetaid="9085" xmi.id="9602" linecolor="none" >
      <linepath>
       <startpoint startx="1130" starty="770" />
       <endpoint endx="1520" endy="350" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="8" indexb="5" linewidth="none" widgetbid="134" widgetaid="9418" xmi.id="9644" linecolor="none" >
      <linepath>
       <startpoint startx="1140" starty="850" />
       <endpoint endx="1570" endy="350" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" linewidth="none" widgetbid="10725" widgetaid="10981" xmi.id="11091" linecolor="none" >
      <linepath>
       <startpoint startx="660" starty="1050" />
       <endpoint endx="760" endy="979" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="6249" widgetaid="10981" xmi.id="11120" linecolor="none" >
      <linepath>
       <startpoint startx="560" starty="1050" />
       <endpoint endx="450" endy="987" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="4" indexa="1" totalcountb="3" indexb="1" linewidth="none" widgetbid="11517" widgetaid="6249" xmi.id="12071" linecolor="none" >
      <linepath>
       <startpoint startx="390" starty="950" />
       <endpoint endx="170" endy="855" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="4" indexa="2" visibilityB="200" totalcountb="3" indexb="2" linewidth="none" widgetbid="11517" widgetaid="6249" xmi.id="12205" type="510" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="450" starty="950" />
       <endpoint endx="330" endy="855" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="94" usesdiagramusefillcolour="1" x="360" y="880" linewidth="none" posttext="" role="710" fillcolour="none" height="19" usefillcolor="1" pretext="+" isinstance="0" xmi.id="17436" showstereotype="1" text="drawingClass" font="Sans Serif,10,-1,0,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="4" indexb="3" linewidth="none" widgetbid="43" widgetaid="6548" xmi.id="12637" linecolor="none" >
      <linepath>
       <startpoint startx="1070" starty="620" />
       <endpoint endx="818" endy="410" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="4" indexb="3" linewidth="none" widgetbid="43" widgetaid="8407" xmi.id="12666" linecolor="none" >
      <linepath>
       <startpoint startx="1070" starty="700" />
       <endpoint endx="730" endy="480" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="4" indexb="2" linewidth="none" widgetbid="43" widgetaid="9085" xmi.id="12695" linecolor="none" >
      <linepath>
       <startpoint startx="1070" starty="770" />
       <endpoint endx="650" endy="480" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="4" indexb="1" linewidth="none" widgetbid="43" widgetaid="9418" xmi.id="12724" linecolor="none" >
      <linepath>
       <startpoint startx="1070" starty="850" />
       <endpoint endx="560" endy="480" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="4" indexa="3" totalcountb="2" indexb="1" linewidth="none" widgetbid="10725" widgetaid="7777" xmi.id="13138" linecolor="none" >
      <linepath>
       <startpoint startx="760" starty="845" />
       <endpoint endx="760" endy="950" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="13210" widgetaid="14648" xmi.id="14763" linecolor="none" >
      <linepath>
       <startpoint startx="1000" starty="1275" />
       <endpoint endx="752" endy="1500" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" visibilityB="200" totalcountb="2" indexb="1" linewidth="none" widgetbid="213" widgetaid="14648" xmi.id="14998" type="510" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="1040" starty="1200" />
       <endpoint endx="1510" endy="690" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="105" usesdiagramusefillcolour="1" x="1410" y="750" linewidth="none" posttext="" role="710" fillcolour="none" height="19" usefillcolor="1" pretext="+" isinstance="0" xmi.id="17437" text="myImageObject" font="Sans Serif,10,-1,0,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" visibilityB="200" totalcountb="8" indexb="6" linewidth="none" widgetbid="134" widgetaid="14648" xmi.id="15053" type="510" changeabilityA="900" changeabilityB="900" linecolor="none" visibilityA="200" >
      <linepath>
       <startpoint startx="970" starty="1200" />
       <endpoint endx="1620" endy="350" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="83" usesdiagramusefillcolour="1" x="1560" y="340" linewidth="none" posttext="" role="710" fillcolour="none" height="19" usefillcolor="1" pretext="+" isinstance="0" xmi.id="17438" showstereotype="1" text="myFileIndex" font="Sans Serif,10,-1,0,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
    </associations>
   </diagram>
  </diagrams>
  <listview>
   <listitem open="1" type="800" label="Views" >
    <listitem open="1" type="801" label="Logical View" >
     <listitem open="1" type="813" id="60" />
     <listitem open="0" type="813" id="18" >
      <listitem open="0" type="815" id="20" />
     </listitem>
     <listitem open="0" type="813" id="6249" >
      <listitem open="0" type="814" id="12205" />
     </listitem>
     <listitem open="0" type="813" id="134" >
      <listitem open="0" type="814" id="136" />
      <listitem open="0" type="814" id="5731" />
      <listitem open="0" type="815" id="141" />
      <listitem open="0" type="815" id="143" />
      <listitem open="0" type="815" id="150" />
      <listitem open="0" type="815" id="156" />
      <listitem open="0" type="815" id="164" />
      <listitem open="0" type="815" id="1177" />
      <listitem open="0" type="815" id="6697" />
     </listitem>
     <listitem open="0" type="813" id="4243" >
      <listitem open="0" type="814" id="4372" />
      <listitem open="0" type="814" id="10010" />
      <listitem open="0" type="815" id="6886" />
     </listitem>
     <listitem open="0" type="813" id="13210" >
      <listitem open="0" type="814" id="13519" />
      <listitem open="0" type="814" id="13546" />
      <listitem open="0" type="814" id="13574" />
      <listitem open="0" type="814" id="13629" />
      <listitem open="0" type="814" id="13643" />
      <listitem open="0" type="814" id="13657" />
      <listitem open="0" type="814" id="13684" />
      <listitem open="0" type="814" id="13698" />
      <listitem open="0" type="814" id="13712" />
      <listitem open="0" type="814" id="13752" />
      <listitem open="0" type="814" id="13766" />
      <listitem open="0" type="814" id="13793" />
      <listitem open="0" type="814" id="13833" />
      <listitem open="0" type="814" id="13847" />
      <listitem open="0" type="814" id="13861" />
      <listitem open="0" type="814" id="13875" />
      <listitem open="0" type="814" id="13928" />
      <listitem open="0" type="814" id="13942" />
      <listitem open="0" type="814" id="13956" />
      <listitem open="0" type="814" id="13970" />
      <listitem open="0" type="814" id="13984" />
      <listitem open="0" type="814" id="14025" />
      <listitem open="0" type="814" id="14039" />
      <listitem open="0" type="814" id="14054" />
      <listitem open="0" type="814" id="14068" />
      <listitem open="0" type="814" id="14082" />
      <listitem open="0" type="814" id="14109" />
      <listitem open="0" type="814" id="14123" />
      <listitem open="0" type="814" id="14176" />
      <listitem open="0" type="814" id="14190" />
      <listitem open="0" type="814" id="14217" />
      <listitem open="0" type="814" id="14231" />
      <listitem open="0" type="814" id="14245" />
      <listitem open="0" type="814" id="14259" />
      <listitem open="0" type="814" id="14299" />
      <listitem open="0" type="814" id="14313" />
      <listitem open="0" type="814" id="14327" />
      <listitem open="0" type="814" id="14341" />
      <listitem open="0" type="814" id="14355" />
      <listitem open="0" type="815" id="14434" />
      <listitem open="0" type="815" id="14488" />
     </listitem>
     <listitem open="0" type="813" id="7777" >
      <listitem open="0" type="814" id="8247" />
      <listitem open="0" type="814" id="8261" />
      <listitem open="0" type="814" id="8275" />
      <listitem open="0" type="814" id="8289" />
      <listitem open="0" type="815" id="8701" />
      <listitem open="0" type="815" id="8742" />
     </listitem>
     <listitem open="0" type="813" id="10981" >
      <listitem open="0" type="814" id="11228" />
      <listitem open="0" type="814" id="11255" />
      <listitem open="0" type="814" id="11269" />
      <listitem open="0" type="814" id="11283" />
      <listitem open="0" type="815" id="11201" />
      <listitem open="0" type="815" id="11312" />
      <listitem open="0" type="815" id="11340" />
     </listitem>
     <listitem open="0" type="813" id="11517" >
      <listitem open="0" type="814" id="11562" />
      <listitem open="0" type="814" id="11590" />
      <listitem open="0" type="814" id="11631" />
      <listitem open="0" type="815" id="11699" />
      <listitem open="0" type="815" id="11685" />
      <listitem open="0" type="815" id="11977" />
     </listitem>
     <listitem open="1" type="813" id="10725" />
     <listitem open="0" type="813" id="213" >
      <listitem open="0" type="814" id="221" />
      <listitem open="0" type="814" id="224" />
      <listitem open="0" type="814" id="227" />
      <listitem open="0" type="814" id="230" />
      <listitem open="0" type="814" id="233" />
      <listitem open="0" type="814" id="236" />
      <listitem open="0" type="814" id="239" />
      <listitem open="0" type="814" id="242" />
      <listitem open="0" type="814" id="245" />
      <listitem open="0" type="815" id="248" />
      <listitem open="0" type="815" id="255" />
      <listitem open="0" type="815" id="261" />
      <listitem open="0" type="815" id="266" />
      <listitem open="0" type="815" id="272" />
      <listitem open="0" type="815" id="279" />
      <listitem open="0" type="815" id="293" />
      <listitem open="0" type="815" id="307" />
      <listitem open="0" type="815" id="321" />
      <listitem open="0" type="815" id="353" />
      <listitem open="0" type="815" id="361" />
      <listitem open="0" type="815" id="370" />
      <listitem open="0" type="815" id="380" />
      <listitem open="0" type="815" id="392" />
      <listitem open="0" type="815" id="426" />
      <listitem open="0" type="815" id="461" />
      <listitem open="0" type="815" id="496" />
      <listitem open="0" type="815" id="520" />
      <listitem open="0" type="815" id="544" />
      <listitem open="0" type="815" id="568" />
      <listitem open="0" type="815" id="605" />
      <listitem open="0" type="815" id="629" />
      <listitem open="0" type="815" id="697" />
      <listitem open="0" type="815" id="721" />
     </listitem>
     <listitem open="0" type="813" id="6548" >
      <listitem open="0" type="814" id="7385" />
      <listitem open="0" type="814" id="7399" />
      <listitem open="0" type="815" id="7561" />
     </listitem>
     <listitem open="0" type="813" id="43" >
      <listitem open="0" type="814" id="45" />
      <listitem open="0" type="814" id="47" />
      <listitem open="0" type="814" id="49" />
      <listitem open="0" type="814" id="54" />
      <listitem open="0" type="814" id="59" />
      <listitem open="0" type="814" id="63" />
      <listitem open="0" type="814" id="67" />
      <listitem open="0" type="814" id="71" />
      <listitem open="0" type="814" id="73" />
      <listitem open="0" type="814" id="76" />
      <listitem open="0" type="814" id="78" />
      <listitem open="0" type="814" id="80" />
      <listitem open="0" type="815" id="82" />
      <listitem open="0" type="815" id="98" />
      <listitem open="0" type="815" id="104" />
      <listitem open="0" type="815" id="108" />
      <listitem open="0" type="815" id="110" />
     </listitem>
     <listitem open="0" type="813" id="2113" >
      <listitem open="0" type="814" id="2127" />
      <listitem open="0" type="814" id="2213" />
      <listitem open="0" type="814" id="2227" />
      <listitem open="0" type="814" id="2240" />
      <listitem open="0" type="814" id="2253" />
      <listitem open="0" type="814" id="2279" />
      <listitem open="0" type="814" id="2293" />
      <listitem open="0" type="814" id="2330" />
      <listitem open="0" type="814" id="2343" />
      <listitem open="0" type="814" id="2356" />
      <listitem open="0" type="814" id="2369" />
      <listitem open="0" type="814" id="2541" />
      <listitem open="0" type="815" id="2555" />
      <listitem open="0" type="815" id="2594" />
     </listitem>
     <listitem open="1" type="813" id="13378" />
     <listitem open="0" type="813" id="9085" >
      <listitem open="0" type="814" id="9246" />
      <listitem open="0" type="814" id="9325" />
      <listitem open="0" type="815" id="9352" />
     </listitem>
     <listitem open="0" type="813" id="8407" >
      <listitem open="0" type="814" id="8447" />
      <listitem open="0" type="814" id="8568" />
      <listitem open="0" type="815" id="8582" />
     </listitem>
     <listitem open="0" type="813" id="9418" >
      <listitem open="0" type="814" id="9445" />
      <listitem open="0" type="814" id="9472" />
     </listitem>
     <listitem open="1" type="813" id="14648" >
      <listitem open="0" type="814" id="14998" />
      <listitem open="0" type="814" id="15053" />
      <listitem open="0" type="815" id="15814" />
      <listitem open="0" type="815" id="15936" />
     </listitem>
     <listitem open="1" type="813" id="7191" />
     <listitem open="1" type="813" id="11604" />
     <listitem open="1" type="813" id="7413" />
     <listitem open="1" type="813" id="6942" />
     <listitem open="1" type="813" id="11632" />
     <listitem open="1" type="813" id="7453" />
     <listitem open="1" type="813" id="13985" />
     <listitem open="1" type="813" id="11563" />
     <listitem open="1" type="813" id="11991" />
     <listitem open="1" type="813" id="13575" />
     <listitem open="1" type="813" id="9180" />
     <listitem open="1" type="813" id="11740" />
     <listitem open="0" type="830" label="Datatypes" >
      <listitem open="1" type="813" id="4386" />
      <listitem open="1" type="813" id="137" />
      <listitem open="1" type="813" id="2254" />
      <listitem open="1" type="813" id="99" />
      <listitem open="1" type="813" id="55" />
      <listitem open="1" type="813" id="4334" />
      <listitem open="1" type="813" id="68" />
      <listitem open="1" type="813" id="64" />
      <listitem open="1" type="813" id="90" />
      <listitem open="1" type="813" id="93" />
      <listitem open="1" type="813" id="2140" />
      <listitem open="1" type="813" id="50" />
      <listitem open="1" type="813" id="2556" />
      <listitem open="1" type="829" id="5" />
      <listitem open="1" type="829" id="4" />
      <listitem open="1" type="829" id="7" />
      <listitem open="1" type="829" id="6" />
      <listitem open="1" type="829" id="2" />
      <listitem open="1" type="829" id="8" />
      <listitem open="1" type="829" id="9" />
      <listitem open="1" type="829" id="10" />
     </listitem>
    </listitem>
    <listitem open="1" type="802" label="Use Case View" />
    <listitem open="1" type="821" label="Component View" />
    <listitem open="1" type="827" label="Deployment View" />
    <listitem open="1" type="836" label="Entity Relationship Model" />
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="C++" >
    <classifiercodedocument writeOutCode="true" package="-1" id="18" parent_class="18" fileExt=".cpp" fileName="bijutsukan" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;bijutsukan.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="20" tag="operation_20" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        bijutsukan.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="43" parent_class="43" fileExt=".cpp" fileName="mainframe" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;mainframe.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="82" tag="operation_82" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="the constructor" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="98" tag="operation_98" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="what happens when we quit?" />
         </header>
        </codeoperation>
        <codeoperation parent_id="104" tag="operation_104" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="this handels every (non quit) event. all events which dont happen in the frame (e.g. events of the elements in the panels) are handeled there" />
         </header>
        </codeoperation>
        <codeoperation parent_id="108" tag="operation_108" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="creates the menu" />
         </header>
        </codeoperation>
        <codeoperation parent_id="110" tag="operation_110" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="deletes a panel. this is called by makeMenu before a new event is processed. the method uses currentEvent to determine whether objects are to delete" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        mainframe.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="60" parent_class="60" fileExt=".cpp" fileName="aboutpanel" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;aboutpanel.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        aboutpanel.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="134" parent_class="134" fileExt=".cpp" fileName="fileindex" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;fileindex.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="141" tag="operation_141" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="the constructor" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="143" tag="operation_143" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns a wxArrayString pointee to pathIndex of our fileIndex class." />
         </header>
        </codeoperation>
        <codeoperation parent_id="150" tag="operation_150" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Adds filename specified by &lt;wxString filepath> to pathIndex." />
         </header>
        </codeoperation>
        <codeoperation parent_id="156" tag="operation_156" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Deletes filename specified by &lt;wxString filepath> from pathIndex." />
         </header>
        </codeoperation>
        <codeoperation parent_id="164" tag="operation_164" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="creates a imageObject (see imageObject.*) for the requested filePath" />
         </header>
        </codeoperation>
        <codeoperation parent_id="1177" tag="operation_1177" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Looks for &lt;wxString value> inside pathIndex.&amp;#010;&lt;bool caseSensitive> enables/disables case sensitive search.&amp;#010;&amp;#010;this function returns the index of the element in a wxArrayString where the found element is." />
         </header>
        </codeoperation>
        <codeoperation parent_id="6697" tag="operation_6697" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        fileindex.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="213" parent_class="213" fileExt=".cpp" fileName="imageobject" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;imageobject.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="248" tag="operation_248" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="constructor.&amp;#010;&amp;#010;the constructor can either take no argument or the specified argument. if the argument is specified the constructor will load its stated from the serialized data. if no path is specified you need to save the objects state" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="255" tag="operation_255" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Initializes and returns new &lt;wxString> object with value of class member &lt;wxString filePath>" />
         </header>
        </codeoperation>
        <codeoperation parent_id="261" tag="operation_261" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Initializes and returns new &lt;wxString> object with value of class member &lt;wxString fileName>" />
         </header>
        </codeoperation>
        <codeoperation parent_id="266" tag="operation_266" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Initializes and returns new &lt;wxString> object with value of class member&lt;wxString fileDescription>" />
         </header>
        </codeoperation>
        <codeoperation parent_id="272" tag="operation_272" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Initializes and returns new &lt;wxString> object with value of class member &lt;wxString fileCategory>" />
         </header>
        </codeoperation>
        <codeoperation parent_id="279" tag="operation_279" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets value of class member &lt;wxString filePath> to &lt;wxString nfilePath>" />
         </header>
        </codeoperation>
        <codeoperation parent_id="293" tag="operation_293" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets value of class member &lt;wxString fileName> to &lt;wxString nfileName>" />
         </header>
        </codeoperation>
        <codeoperation parent_id="307" tag="operation_307" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets value of class member &lt;wxString fileDescription> to &lt;wxString nfileDescription>" />
         </header>
        </codeoperation>
        <codeoperation parent_id="321" tag="operation_321" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets value of class member &lt;wxString fileCategory> to &lt;wxString nfileCategory>" />
         </header>
        </codeoperation>
        <codeoperation parent_id="353" tag="operation_353" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Initializes and returns new &lt;wxArrayString> Object  with values of class member &lt;wxArrayString fileLabels>" />
         </header>
        </codeoperation>
        <codeoperation parent_id="361" tag="operation_361" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Initializes and returns new &lt;wxArrayString> Object  with values of class member &lt;wxArrayString filePersons>" />
         </header>
        </codeoperation>
        <codeoperation parent_id="370" tag="operation_370" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Initializes and returns new &lt;wxArrayString> Object  with values of class member &lt;wxArrayString fileObjects>&amp;#010;" />
         </header>
        </codeoperation>
        <codeoperation parent_id="380" tag="operation_380" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Initializes and returns new &lt;wxArrayString> Object  with values of class member &lt;wxArrayString fileLocations>" />
         </header>
        </codeoperation>
        <codeoperation parent_id="392" tag="operation_392" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Initializes and returns new &lt;wxArrayString> Object  with values of class member &lt;wxArrayString filePositions>" />
         </header>
        </codeoperation>
        <codeoperation parent_id="426" tag="operation_426" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Adds &lt;wxString nfileLabel> to class member &lt;wxArrayString fileLabels>" />
         </header>
        </codeoperation>
        <codeoperation parent_id="461" tag="operation_461" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Adds &lt;wxString nfilePerson> to class member &lt;wxArrayString filePersons>" />
         </header>
        </codeoperation>
        <codeoperation parent_id="496" tag="operation_496" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Adds &lt;wxString nfileObject> to class member &lt;wxArrayString fileObjects>" />
         </header>
        </codeoperation>
        <codeoperation parent_id="520" tag="operation_520" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Adds &lt;wxString nfileLocation> to class member&lt;wxArrayString fileLocations>" />
         </header>
        </codeoperation>
        <codeoperation parent_id="544" tag="operation_544" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Adds &lt;wxString nFilePosition> to class member &lt;wxArrayString filePositions>" />
         </header>
        </codeoperation>
        <codeoperation parent_id="568" tag="operation_568" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Removes &lt;wxString nfileLabel> from class member &lt;wxArrayString fileLabels>" />
         </header>
        </codeoperation>
        <codeoperation parent_id="605" tag="operation_605" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Removes &lt;wxString nfilePerson> from class member &lt;wxArrayString filePersons>" />
         </header>
        </codeoperation>
        <codeoperation parent_id="629" tag="operation_629" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Removes &lt;wxString nfileObject> from class member &lt;wxArrayString fileObjects>" />
         </header>
        </codeoperation>
        <codeoperation parent_id="697" tag="operation_697" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Removes &lt;wxString nfileLocation> from class member &lt;wxArrayString fileLocations>&amp;#010;" />
         </header>
        </codeoperation>
        <codeoperation parent_id="721" tag="operation_721" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Removes &lt;wxString nfilePosition> from class member &lt;wxArrayString filePositions>" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        imageobject.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="2113" parent_class="2113" fileExt=".cpp" fileName="mainpanel" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;mainpanel.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="2555" tag="operation_2555" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="constructor" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="2594" tag="operation_2594" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="handels the events (mainly button presses in this panel)" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        mainpanel.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="137" parent_class="137" fileExt=".cpp" fileName="wxarraystring" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wxarraystring.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxarraystring.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="2254" parent_class="2254" fileExt=".cpp" fileName="wxbutton" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wxbutton.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxbutton.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="99" parent_class="99" fileExt=".cpp" fileName="wxcommandevent" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wxcommandevent.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxcommandevent.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="55" parent_class="55" fileExt=".cpp" fileName="wxfilename" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wxfilename.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxfilename.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="68" parent_class="68" fileExt=".cpp" fileName="wxmenu" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wxmenu.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxmenu.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="64" parent_class="64" fileExt=".cpp" fileName="wxmenubar" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wxmenubar.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxmenubar.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="90" parent_class="90" fileExt=".cpp" fileName="wxpoint" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wxpoint.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxpoint.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="93" parent_class="93" fileExt=".cpp" fileName="wxsize" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wxsize.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxsize.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="2140" parent_class="2140" fileExt=".cpp" fileName="wxstatictext" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wxstatictext.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxstatictext.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="50" parent_class="50" fileExt=".cpp" fileName="wxstring" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wxstring.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxstring.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="2556" parent_class="2556" fileExt=".cpp" fileName="wxwindow" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wxwindow.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxwindow.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="4243" parent_class="4243" fileExt=".cpp" fileName="filelistpanel" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;filelistpanel.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="6886" tag="operation_6886" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="constructor" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        filelistpanel.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="4386" parent_class="4386" fileExt=".cpp" fileName="wxarray" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wxarray.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxarray.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="4334" parent_class="4334" fileExt=".cpp" fileName="wxgrid" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wxgrid.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxgrid.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="6249" parent_class="6249" fileExt=".cpp" fileName="drawingPanel" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;drawingpanel.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        drawingpanel.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Jul 4 2006 at 15:00:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="6548" parent_class="6548" fileExt=".cpp" fileName="labelistpanel" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;labelistpanel.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="7561" tag="operation_7561" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="the constructor" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        labelistpanel.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="6942" parent_class="6942" fileExt=".cpp" fileName="wxgridevent" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wxgridevent.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxgridevent.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="7191" parent_class="7191" fileExt=".cpp" fileName="specificGridPanel" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;specificgridpanel.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        specificgridpanel.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Jul 4 2006 at 15:00:10&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="7413" parent_class="7413" fileExt=".cpp" fileName="wxcombobox" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wxcombobox.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxcombobox.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="7453" parent_class="7453" fileExt=".cpp" fileName="wxlistctrl" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wxlistctrl.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxlistctrl.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="7777" parent_class="7777" fileExt=".cpp" fileName="genericListPanel" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;genericlistpanel.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="8701" tag="operation_8701" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="handels all events coming from the grid. this calls undefind (or only as empty &quot;templates&quot;) defined functions which are defined (or overridden) by the &quot;real&quot; panels" />
         </header>
        </codeoperation>
        <codeoperation parent_id="8742" tag="operation_8742" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="handels all events which are not coming from the grid. this calls undefind (or only as empty &quot;templates&quot;) defined functions which are defined (or overridden) by the &quot;real&quot; panels" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        genericListPanel.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Jul 4 2006 at 15:00:05&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="8407" parent_class="8407" fileExt=".cpp" fileName="personlistpanel" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;personlistpanel.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="8582" tag="operation_8582" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="constrcutor" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        personlistpanel.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="9085" parent_class="9085" fileExt=".cpp" fileName="objectlistpanel" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;objectlistpanel.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="9352" tag="operation_9352" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="ctor" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        objectlistpanel.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="9180" parent_class="9180" fileExt=".cpp" fileName="wxtextctrl" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wxtextctrl.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxtextctrl.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="9418" parent_class="9418" fileExt=".cpp" fileName="positionlistpanel" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;positionlistpanel.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        positionlistpanel.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="10725" parent_class="10725" fileExt=".cpp" fileName="imageGridPanel" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;imagegridpanel.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        imagegridpanel.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Jul 4 2006 at 15:00:06&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="10981" parent_class="10981" fileExt=".cpp" fileName="genericresultpanel" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;genericresultpanel.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="11201" tag="operation_11201" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="ctor" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="11312" tag="operation_11312" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="11340" tag="operation_11340" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        genericresultpanel.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="11517" parent_class="11517" fileExt=".cpp" fileName="imagedrawingclass" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;imagedrawingclass.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="11699" tag="operation_11699" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="constructor calling&amp;#010;- the original wxWindow ctor with the arguments we've got&amp;#010;- convertImage" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="11685" tag="operation_11685" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="converts a wxImage to the wxBitmap we need" />
         </header>
        </codeoperation>
        <codeoperation parent_id="11977" tag="operation_11977" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="this happens so we  can draw our image&amp;#010;&amp;#010;in OnPaint we draw our bitmap via our paintDC" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        imagedrawingclass.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="11563" parent_class="11563" fileExt=".cpp" fileName="wxpaintdc" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wxpaintdc.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxpaintdc.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="11604" parent_class="11604" fileExt=".cpp" fileName="wxbitmap" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wxbitmap.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxbitmap.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="11632" parent_class="11632" fileExt=".cpp" fileName="wximage" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wximage.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wximage.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="11740" parent_class="11740" fileExt=".cpp" fileName="wxwindowid" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wxwindowid.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxwindowid.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="11991" parent_class="11991" fileExt=".cpp" fileName="wxpaintevent" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wxpaintevent.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxpaintevent.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="13210" parent_class="13210" fileExt=".cpp" fileName="genericfilepanel" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;genericfilepanel.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="14434" tag="operation_14434" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="ctor - creates this totally fucked up object -.-" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="14488" tag="operation_14488" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="handling the various evens happening in this frame ..." />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        genericfilepanel.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:19&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="13378" parent_class="13378" fileExt=".cpp" fileName="multiattributeinput" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;multiattributeinput.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        multiattributeinput.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="13575" parent_class="13575" fileExt=".cpp" fileName="wxstaticbox" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wxstaticbox.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxstaticbox.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="13985" parent_class="13985" fileExt=".cpp" fileName="wxlistctrl\" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;wxlistctrl\.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxlistctrl\.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="14648" parent_class="14648" fileExt=".cpp" fileName="singlefilepanel" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;singlefilepanel.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks>
        <codeoperation parent_id="15814" tag="operation_15814" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="ctor" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="15936" tag="operation_15936" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="saves the inputted data in the imageObject and indexes it via the fileIndex" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        singlefilepanel.cpp - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:46&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader18" parent_class="18" fileExt=".h" fileName="bijutsukan" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef BIJUTSUKAN_H&amp;#010;#define BIJUTSUKAN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //BIJUTSUKAN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        bijutsukan.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5572" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5572" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" bijutsukan ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5572" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5572" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5572" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5572" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5572" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5572" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5572" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5572" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5572" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5572" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader43" parent_class="43" fileExt=".h" fileName="mainframe" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MAINFRAME_H&amp;#010;#define MAINFRAME_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;wxstring.h&quot;&amp;#010;#include &quot;wxpoint.h&quot;&amp;#010;#include &quot;wxsize.h&quot;&amp;#010;#include &quot;wxcommandevent.h&quot;&amp;#010;#include &quot;wxfilename.h&quot;&amp;#010;#include &quot;aboutpanel.h&quot;&amp;#010;#include &quot;wxmenubar.h&quot;&amp;#010;#include &quot;wxmenu.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MAINFRAME_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        mainframe.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="45" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="containing the ID of the current active event. this is used for more complex &quot;destructor&quot; code for instances issued by events" />
       </header>
       <ccfdeclarationcodeblock parent_id="45" tag="tblock_0" canDelete="false" indentLevel="1" text=" int currentEvent;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="containing the ID of the current active event. this is used for more complex &quot;destructor&quot; code for instances issued by events" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="45" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="45" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of currentEvent&amp;#010;containing the ID of the current active event. this is used for more complex &quot;destructor&quot; code for instances issued by events&amp;#010;@return the value of currentEvent" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="45" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="45" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of currentEvent&amp;#010;containing the ID of the current active event. this is used for more complex &quot;destructor&quot; code for instances issued by events&amp;#010;@param value the value of currentEvent" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="47" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="this will be used when we want to support multiple database files." />
       </header>
       <ccfdeclarationcodeblock parent_id="47" tag="tblock_1" canDelete="false" indentLevel="1" text=" bool dbIsOpen;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="this will be used when we want to support multiple database files." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="47" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="47" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of dbIsOpen&amp;#010;this will be used when we want to support multiple database files.&amp;#010;@return the value of dbIsOpen" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="47" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="47" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of dbIsOpen&amp;#010;this will be used when we want to support multiple database files.&amp;#010;@param value the value of dbIsOpen" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="49" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="this string contains the path (dependent on the plattform) of the database file" />
       </header>
       <ccfdeclarationcodeblock parent_id="49" tag="tblock_2" canDelete="false" indentLevel="1" text=" wxString dbFileString;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="this string contains the path (dependent on the plattform) of the database file" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="49" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="49" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of dbFileString&amp;#010;this string contains the path (dependent on the plattform) of the database file&amp;#010;@return the value of dbFileString" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="49" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="49" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of dbFileString&amp;#010;this string contains the path (dependent on the plattform) of the database file&amp;#010;@param value the value of dbFileString" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="54" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="this is the wxFileName containing the path to the database file" />
       </header>
       <ccfdeclarationcodeblock parent_id="54" tag="tblock_3" canDelete="false" indentLevel="1" text=" wxFileName dbFileName;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="this is the wxFileName containing the path to the database file" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="54" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="54" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of dbFileName&amp;#010;this is the wxFileName containing the path to the database file&amp;#010;@return the value of dbFileName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="54" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="54" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of dbFileName&amp;#010;this is the wxFileName containing the path to the database file&amp;#010;@param value the value of dbFileName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="59" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="one of the various panels" />
       </header>
       <ccfdeclarationcodeblock parent_id="59" tag="tblock_4" canDelete="false" indentLevel="1" text=" aboutPanel myAboutPanel;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="one of the various panels" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="59" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="59" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of myAboutPanel&amp;#010;one of the various panels&amp;#010;@return the value of myAboutPanel" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="59" tag="hblock_tag_20" canDelete="false" indentLevel="1" classfield_id="59" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of myAboutPanel&amp;#010;one of the various panels&amp;#010;@param value the value of myAboutPanel" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="63" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="the (one and only) menubar." />
       </header>
       <ccfdeclarationcodeblock parent_id="63" tag="tblock_5" canDelete="false" indentLevel="1" text=" wxMenuBar menuBar;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="the (one and only) menubar." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="63" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="63" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of menuBar&amp;#010;the (one and only) menubar.&amp;#010;@return the value of menuBar" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="63" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="63" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of menuBar&amp;#010;the (one and only) menubar.&amp;#010;@param value the value of menuBar" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="67" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="one of the various menus" />
       </header>
       <ccfdeclarationcodeblock parent_id="67" tag="tblock_6" canDelete="false" indentLevel="1" text=" wxMenu fileMenu;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="one of the various menus" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="67" tag="hblock_tag_23" canDelete="false" indentLevel="1" classfield_id="67" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of fileMenu&amp;#010;one of the various menus&amp;#010;@return the value of fileMenu" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="67" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="67" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of fileMenu&amp;#010;one of the various menus&amp;#010;@param value the value of fileMenu" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="71" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="one of the various menus" />
       </header>
       <ccfdeclarationcodeblock parent_id="71" tag="tblock_7" canDelete="false" indentLevel="1" text=" wxMenu findMenu;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="one of the various menus" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="71" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="71" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of findMenu&amp;#010;one of the various menus&amp;#010;@return the value of findMenu" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="71" tag="hblock_tag_26" canDelete="false" indentLevel="1" classfield_id="71" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of findMenu&amp;#010;one of the various menus&amp;#010;@param value the value of findMenu" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="73" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="one of the various menus" />
       </header>
       <ccfdeclarationcodeblock parent_id="73" tag="tblock_8" canDelete="false" indentLevel="1" text=" wxMenu findBySubMenu;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="one of the various menus" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="73" tag="hblock_tag_27" canDelete="false" indentLevel="1" classfield_id="73" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of findBySubMenu&amp;#010;one of the various menus&amp;#010;@return the value of findBySubMenu" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="73" tag="hblock_tag_28" canDelete="false" indentLevel="1" classfield_id="73" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of findBySubMenu&amp;#010;one of the various menus&amp;#010;@param value the value of findBySubMenu" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="76" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="one of the various menus" />
       </header>
       <ccfdeclarationcodeblock parent_id="76" tag="tblock_9" canDelete="false" indentLevel="1" text=" wxMenu inputMenu;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="one of the various menus" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="76" tag="hblock_tag_29" canDelete="false" indentLevel="1" classfield_id="76" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of inputMenu&amp;#010;one of the various menus&amp;#010;@return the value of inputMenu" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="76" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="76" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of inputMenu&amp;#010;one of the various menus&amp;#010;@param value the value of inputMenu" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="78" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="one of the various menus" />
       </header>
       <ccfdeclarationcodeblock parent_id="78" tag="tblock_10" canDelete="false" indentLevel="1" text=" wxMenu categoryMenu;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="one of the various menus" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="78" tag="hblock_tag_31" canDelete="false" indentLevel="1" classfield_id="78" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of categoryMenu&amp;#010;one of the various menus&amp;#010;@return the value of categoryMenu" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="78" tag="hblock_tag_32" canDelete="false" indentLevel="1" classfield_id="78" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of categoryMenu&amp;#010;one of the various menus&amp;#010;@param value the value of categoryMenu" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="80" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="one of the various menus" />
       </header>
       <ccfdeclarationcodeblock parent_id="80" tag="tblock_11" canDelete="false" indentLevel="1" text=" wxMenu optionsMenu;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="one of the various menus" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="80" tag="hblock_tag_33" canDelete="false" indentLevel="1" classfield_id="80" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of optionsMenu&amp;#010;one of the various menus&amp;#010;@return the value of optionsMenu" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="80" tag="hblock_tag_34" canDelete="false" indentLevel="1" classfield_id="80" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of optionsMenu&amp;#010;one of the various menus&amp;#010;@param value the value of optionsMenu" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5368" field_type="3" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5368" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" mainFrame ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5368" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5368" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5368" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5368" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5368" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5368" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5368" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5368" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5368" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5368" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5395" field_type="3" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5395" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" mainFrame ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5395" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5395" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5395" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5395" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5395" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5572" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5572" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" mainFrame ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5572" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5572" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5572" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5572" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5572" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5572" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5572" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5572" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5572" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5572" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="12637" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="12637" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" mainFrame ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="12637" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12637" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="12637" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12637" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="12637" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12637" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="12637" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12637" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="12637" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12637" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="12666" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="12666" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" mainFrame ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="12666" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12666" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="12666" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12666" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="12666" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12666" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="12666" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12666" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="12666" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12666" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="12695" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="12695" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" mainFrame ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="12695" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12695" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="12695" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12695" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="12695" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12695" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="12695" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12695" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="12695" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12695" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="12724" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="12724" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" mainFrame ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="12724" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12724" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="12724" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12724" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="12724" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12724" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="12724" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12724" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="12724" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12724" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader60" parent_class="60" fileExt=".h" fileName="aboutpanel" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef ABOUTPANEL_H&amp;#010;#define ABOUTPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //ABOUTPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        aboutpanel.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader134" parent_class="134" fileExt=".h" fileName="fileindex" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef FILEINDEX_H&amp;#010;#define FILEINDEX_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;wxarraystring.h&quot;&amp;#010;#include &quot;wxstring.h&quot;&amp;#010;#include &quot;wxarray.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //FILEINDEX_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        fileindex.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="136" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="this is the main path index containing all files we know of" />
       </header>
       <ccfdeclarationcodeblock parent_id="136" tag="tblock_0" canDelete="false" indentLevel="1" text=" wxArrayString pathIndex;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="this is the main path index containing all files we know of" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="136" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="136" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of pathIndex&amp;#010;this is the main path index containing all files we know of&amp;#010;@return the value of pathIndex" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="136" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="136" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of pathIndex&amp;#010;this is the main path index containing all files we know of&amp;#010;@param value the value of pathIndex" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5731" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="the image object array collects all create imageObjects. since fileIndex is the only class creating imageObjects this is a virtual instance singleton for each possible imageObject and thus saving ressources (or wasting them ... dunno)" />
       </header>
       <ccfdeclarationcodeblock parent_id="5731" tag="tblock_1" canDelete="false" indentLevel="1" text=" wxArray imageObjectArray;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="the image object array collects all create imageObjects. since fileIndex is the only class creating imageObjects this is a virtual instance singleton for each possible imageObject and thus saving ressources (or wasting them ... dunno)" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5731" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="5731" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of imageObjectArray&amp;#010;the image object array collects all create imageObjects. since fileIndex is the only class creating imageObjects this is a virtual instance singleton for each possible imageObject and thus saving ressources (or wasting them ... dunno)&amp;#010;@return the value of imageObjectArray" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5731" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="5731" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of imageObjectArray&amp;#010;the image object array collects all create imageObjects. since fileIndex is the only class creating imageObjects this is a virtual instance singleton for each possible imageObject and thus saving ressources (or wasting them ... dunno)&amp;#010;@param value the value of imageObjectArray" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5991" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5991" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" fileIndex ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5991" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5991" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5991" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5991" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5991" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5991" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5991" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5991" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5991" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5991" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5780" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5780" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" fileIndex ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5780" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5780" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5780" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5780" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5780" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5780" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5780" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5780" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5780" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5780" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="6792" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="6792" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" fileIndex ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="6792" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="6792" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="6792" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="6792" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="6792" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="6792" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="6792" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="6792" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="6792" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="6792" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="9541" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="9541" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" fileIndex ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="9541" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9541" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="9541" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9541" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="9541" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9541" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="9541" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9541" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="9541" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9541" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="9573" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="9573" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" fileIndex ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="9573" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9573" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="9573" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9573" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="9573" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9573" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="9573" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9573" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="9573" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9573" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="9602" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="9602" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" fileIndex ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="9602" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9602" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="9602" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9602" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="9602" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9602" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="9602" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9602" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="9602" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9602" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="9644" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="9644" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" fileIndex ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="9644" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9644" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="9644" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9644" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="9644" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9644" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="9644" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9644" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="9644" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9644" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14900" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14900" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" fileIndex ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14900" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14900" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14900" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14900" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="14900" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14900" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="14900" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14900" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="14900" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14900" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14942" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14942" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" fileIndex ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14942" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14942" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14942" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14942" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="14942" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14942" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="14942" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14942" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="14942" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14942" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader213" parent_class="213" fileExt=".h" fileName="imageobject" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef IMAGEOBJECT_H&amp;#010;#define IMAGEOBJECT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;wxstring.h&quot;&amp;#010;#include &quot;wxarraystring.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //IMAGEOBJECT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        imageobject.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="221" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="this is the path of the image. a .bdf is appended to this path, and the state is serialized into this bdf file" />
       </header>
       <ccfdeclarationcodeblock parent_id="221" tag="tblock_0" canDelete="false" indentLevel="1" text=" wxString filePath;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="this is the path of the image. a .bdf is appended to this path, and the state is serialized into this bdf file" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="221" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="221" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of filePath&amp;#010;this is the path of the image. a .bdf is appended to this path, and the state is serialized into this bdf file&amp;#010;@return the value of filePath" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="221" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="221" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of filePath&amp;#010;this is the path of the image. a .bdf is appended to this path, and the state is serialized into this bdf file&amp;#010;@param value the value of filePath" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="224" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="this is the name of the image the user can set" />
       </header>
       <ccfdeclarationcodeblock parent_id="224" tag="tblock_1" canDelete="false" indentLevel="1" text=" wxString fileTitle;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="this is the name of the image the user can set" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="224" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="224" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of fileTitle&amp;#010;this is the name of the image the user can set&amp;#010;@return the value of fileTitle" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="224" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="224" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of fileTitle&amp;#010;this is the name of the image the user can set&amp;#010;@param value the value of fileTitle" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="227" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="the description the user can set" />
       </header>
       <ccfdeclarationcodeblock parent_id="227" tag="tblock_2" canDelete="false" indentLevel="1" text=" wxString fileDescription;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="the description the user can set" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="227" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="227" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of fileDescription&amp;#010;the description the user can set&amp;#010;@return the value of fileDescription" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="227" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="227" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of fileDescription&amp;#010;the description the user can set&amp;#010;@param value the value of fileDescription" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="230" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="the category the user can set" />
       </header>
       <ccfdeclarationcodeblock parent_id="230" tag="tblock_3" canDelete="false" indentLevel="1" text=" wxString fileCategory;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="the category the user can set" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="230" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="230" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of fileCategory&amp;#010;the category the user can set&amp;#010;@return the value of fileCategory" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="230" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="230" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of fileCategory&amp;#010;the category the user can set&amp;#010;@param value the value of fileCategory" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="233" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="the various labels the user can set" />
       </header>
       <ccfdeclarationcodeblock parent_id="233" tag="tblock_4" canDelete="false" indentLevel="1" text=" wxArrayString fileLabels;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="the various labels the user can set" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="233" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="233" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of fileLabels&amp;#010;the various labels the user can set&amp;#010;@return the value of fileLabels" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="233" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="233" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of fileLabels&amp;#010;the various labels the user can set&amp;#010;@param value the value of fileLabels" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="236" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="the various persons the user can set" />
       </header>
       <ccfdeclarationcodeblock parent_id="236" tag="tblock_5" canDelete="false" indentLevel="1" text=" wxArrayString filePersons;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="the various persons the user can set" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="236" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="236" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of filePersons&amp;#010;the various persons the user can set&amp;#010;@return the value of filePersons" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="236" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="236" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of filePersons&amp;#010;the various persons the user can set&amp;#010;@param value the value of filePersons" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="239" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="the various objects the user can set" />
       </header>
       <ccfdeclarationcodeblock parent_id="239" tag="tblock_6" canDelete="false" indentLevel="1" text=" wxArrayString fileObjects;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="the various objects the user can set" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="239" tag="hblock_tag_20" canDelete="false" indentLevel="1" classfield_id="239" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of fileObjects&amp;#010;the various objects the user can set&amp;#010;@return the value of fileObjects" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="239" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="239" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of fileObjects&amp;#010;the various objects the user can set&amp;#010;@param value the value of fileObjects" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="242" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="the various locations the user can set" />
       </header>
       <ccfdeclarationcodeblock parent_id="242" tag="tblock_7" canDelete="false" indentLevel="1" text=" wxArrayString fileLocations;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="the various locations the user can set" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="242" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="242" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of fileLocations&amp;#010;the various locations the user can set&amp;#010;@return the value of fileLocations" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="242" tag="hblock_tag_23" canDelete="false" indentLevel="1" classfield_id="242" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of fileLocations&amp;#010;the various locations the user can set&amp;#010;@param value the value of fileLocations" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="245" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="the various positions (from where the image is taken) the user can set" />
       </header>
       <ccfdeclarationcodeblock parent_id="245" tag="tblock_8" canDelete="false" indentLevel="1" text=" wxArrayString filePositions;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="the various positions (from where the image is taken) the user can set" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="245" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="245" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of filePositions&amp;#010;the various positions (from where the image is taken) the user can set&amp;#010;@return the value of filePositions" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="245" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="245" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of filePositions&amp;#010;the various positions (from where the image is taken) the user can set&amp;#010;@param value the value of filePositions" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5780" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5780" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" imageObject ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5780" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5780" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5780" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5780" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5780" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5780" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5780" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5780" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5780" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5780" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14871" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14871" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" imageObject ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14871" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14871" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14871" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14871" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="14871" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14871" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="14871" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14871" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="14871" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14871" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader2113" parent_class="2113" fileExt=".h" fileName="mainpanel" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MAINPANEL_H&amp;#010;#define MAINPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;wxwindow.h&quot;&amp;#010;#include &quot;wxcommandevent.h&quot;&amp;#010;#include &quot;wxstatictext.h&quot;&amp;#010;#include &quot;wxbutton.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MAINPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        mainpanel.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="2127" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2127" tag="tblock_0" canDelete="false" indentLevel="1" text=" wxStaticText mainCaption;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2127" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="2127" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2127" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="2127" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2213" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="describes the find functionality" />
       </header>
       <ccfdeclarationcodeblock parent_id="2213" tag="tblock_1" canDelete="false" indentLevel="1" text=" wxStaticText findDescription;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="describes the find functionality" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2213" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="2213" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of findDescription&amp;#010;describes the find functionality&amp;#010;@return the value of findDescription" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2213" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="2213" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of findDescription&amp;#010;describes the find functionality&amp;#010;@param value the value of findDescription" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2227" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="describes the list functionality" />
       </header>
       <ccfdeclarationcodeblock parent_id="2227" tag="tblock_2" canDelete="false" indentLevel="1" text=" wxStaticText listDescription;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="describes the list functionality" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2227" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="2227" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of listDescription&amp;#010;describes the list functionality&amp;#010;@return the value of listDescription" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2227" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="2227" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of listDescription&amp;#010;describes the list functionality&amp;#010;@param value the value of listDescription" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2240" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="describes the input functionality" />
       </header>
       <ccfdeclarationcodeblock parent_id="2240" tag="tblock_3" canDelete="false" indentLevel="1" text=" wxStaticText inputDescription;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="describes the input functionality" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2240" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="2240" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of inputDescription&amp;#010;describes the input functionality&amp;#010;@return the value of inputDescription" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2240" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="2240" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of inputDescription&amp;#010;describes the input functionality&amp;#010;@param value the value of inputDescription" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2253" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="starts the input wizard (as from the menu)" />
       </header>
       <ccfdeclarationcodeblock parent_id="2253" tag="tblock_4" canDelete="false" indentLevel="1" text=" wxButton inputWizard;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="starts the input wizard (as from the menu)" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2253" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="2253" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of inputWizard&amp;#010;starts the input wizard (as from the menu)&amp;#010;@return the value of inputWizard" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2253" tag="hblock_tag_20" canDelete="false" indentLevel="1" classfield_id="2253" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of inputWizard&amp;#010;starts the input wizard (as from the menu)&amp;#010;@param value the value of inputWizard" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2279" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="starts the 'input a file' dialog (as from the menu)" />
       </header>
       <ccfdeclarationcodeblock parent_id="2279" tag="tblock_5" canDelete="false" indentLevel="1" text=" wxButton inputPath;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="starts the 'input a file' dialog (as from the menu)" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2279" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="2279" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of inputPath&amp;#010;starts the 'input a file' dialog (as from the menu)&amp;#010;@return the value of inputPath" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2279" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="2279" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of inputPath&amp;#010;starts the 'input a file' dialog (as from the menu)&amp;#010;@param value the value of inputPath" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2293" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="starts the input a dir functionality (as from the menu)" />
       </header>
       <ccfdeclarationcodeblock parent_id="2293" tag="tblock_6" canDelete="false" indentLevel="1" text=" wxButton inputDir;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="starts the input a dir functionality (as from the menu)" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2293" tag="hblock_tag_23" canDelete="false" indentLevel="1" classfield_id="2293" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of inputDir&amp;#010;starts the input a dir functionality (as from the menu)&amp;#010;@return the value of inputDir" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2293" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="2293" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of inputDir&amp;#010;starts the input a dir functionality (as from the menu)&amp;#010;@param value the value of inputDir" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2330" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="opens the file list panel" />
       </header>
       <ccfdeclarationcodeblock parent_id="2330" tag="tblock_7" canDelete="false" indentLevel="1" text=" wxButton fileList;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="opens the file list panel" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2330" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="2330" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of fileList&amp;#010;opens the file list panel&amp;#010;@return the value of fileList" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2330" tag="hblock_tag_26" canDelete="false" indentLevel="1" classfield_id="2330" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of fileList&amp;#010;opens the file list panel&amp;#010;@param value the value of fileList" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2343" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="opens the label list panel" />
       </header>
       <ccfdeclarationcodeblock parent_id="2343" tag="tblock_8" canDelete="false" indentLevel="1" text=" wxButton labelList;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="opens the label list panel" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2343" tag="hblock_tag_27" canDelete="false" indentLevel="1" classfield_id="2343" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of labelList&amp;#010;opens the label list panel&amp;#010;@return the value of labelList" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2343" tag="hblock_tag_28" canDelete="false" indentLevel="1" classfield_id="2343" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of labelList&amp;#010;opens the label list panel&amp;#010;@param value the value of labelList" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2356" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="opens the person list panel" />
       </header>
       <ccfdeclarationcodeblock parent_id="2356" tag="tblock_9" canDelete="false" indentLevel="1" text=" wxButton personList;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="opens the person list panel" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2356" tag="hblock_tag_29" canDelete="false" indentLevel="1" classfield_id="2356" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of personList&amp;#010;opens the person list panel&amp;#010;@return the value of personList" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2356" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="2356" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of personList&amp;#010;opens the person list panel&amp;#010;@param value the value of personList" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2369" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="opens the position list panel" />
       </header>
       <ccfdeclarationcodeblock parent_id="2369" tag="tblock_10" canDelete="false" indentLevel="1" text=" wxButton positionList;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="opens the position list panel" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2369" tag="hblock_tag_31" canDelete="false" indentLevel="1" classfield_id="2369" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of positionList&amp;#010;opens the position list panel&amp;#010;@return the value of positionList" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2369" tag="hblock_tag_32" canDelete="false" indentLevel="1" classfield_id="2369" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of positionList&amp;#010;opens the position list panel&amp;#010;@param value the value of positionList" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2541" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="opens a panel for the menu find by functionality (list of what to find)" />
       </header>
       <ccfdeclarationcodeblock parent_id="2541" tag="tblock_11" canDelete="false" indentLevel="1" text=" wxButton findBy;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="opens a panel for the menu find by functionality (list of what to find)" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2541" tag="hblock_tag_33" canDelete="false" indentLevel="1" classfield_id="2541" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of findBy&amp;#010;opens a panel for the menu find by functionality (list of what to find)&amp;#010;@return the value of findBy" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2541" tag="hblock_tag_34" canDelete="false" indentLevel="1" classfield_id="2541" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of findBy&amp;#010;opens a panel for the menu find by functionality (list of what to find)&amp;#010;@param value the value of findBy" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5368" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5368" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" mainPanel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5368" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5368" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5368" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5368" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5368" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5368" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5368" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5368" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5368" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5368" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader137" parent_class="137" fileExt=".h" fileName="wxarraystring" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WXARRAYSTRING_H&amp;#010;#define WXARRAYSTRING_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WXARRAYSTRING_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxarraystring.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader2254" parent_class="2254" fileExt=".h" fileName="wxbutton" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WXBUTTON_H&amp;#010;#define WXBUTTON_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WXBUTTON_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxbutton.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader99" parent_class="99" fileExt=".h" fileName="wxcommandevent" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WXCOMMANDEVENT_H&amp;#010;#define WXCOMMANDEVENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WXCOMMANDEVENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxcommandevent.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader55" parent_class="55" fileExt=".h" fileName="wxfilename" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WXFILENAME_H&amp;#010;#define WXFILENAME_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WXFILENAME_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxfilename.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader68" parent_class="68" fileExt=".h" fileName="wxmenu" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WXMENU_H&amp;#010;#define WXMENU_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WXMENU_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxmenu.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader64" parent_class="64" fileExt=".h" fileName="wxmenubar" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WXMENUBAR_H&amp;#010;#define WXMENUBAR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WXMENUBAR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxmenubar.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader90" parent_class="90" fileExt=".h" fileName="wxpoint" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WXPOINT_H&amp;#010;#define WXPOINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WXPOINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxpoint.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader93" parent_class="93" fileExt=".h" fileName="wxsize" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WXSIZE_H&amp;#010;#define WXSIZE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WXSIZE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxsize.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader2140" parent_class="2140" fileExt=".h" fileName="wxstatictext" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WXSTATICTEXT_H&amp;#010;#define WXSTATICTEXT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WXSTATICTEXT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxstatictext.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader50" parent_class="50" fileExt=".h" fileName="wxstring" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WXSTRING_H&amp;#010;#define WXSTRING_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WXSTRING_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxstring.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader2556" parent_class="2556" fileExt=".h" fileName="wxwindow" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WXWINDOW_H&amp;#010;#define WXWINDOW_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WXWINDOW_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxwindow.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader4243" parent_class="4243" fileExt=".h" fileName="filelistpanel" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef FILELISTPANEL_H&amp;#010;#define FILELISTPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;genericlistpanel.h&quot;&amp;#010;#include &quot;fileindex.h&quot;&amp;#010;#include &quot;wxtextctrl.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //FILELISTPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        filelistpanel.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="4372" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="for reading the pathindex and " />
       </header>
       <ccfdeclarationcodeblock parent_id="4372" tag="tblock_0" canDelete="false" indentLevel="1" text=" fileIndex myFileList;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="for reading the pathindex and " />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4372" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="4372" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of myFileList&amp;#010;for reading the pathindex and &amp;#010;@return the value of myFileList" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4372" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="4372" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of myFileList&amp;#010;for reading the pathindex and &amp;#010;@param value the value of myFileList" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="10010" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="10010" tag="tblock_1" canDelete="false" indentLevel="1" text=" wxTextCtrl fileSelector;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="10010" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="10010" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="10010" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="10010" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5395" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5395" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" fileListPanel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5395" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5395" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5395" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5395" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5395" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5991" field_type="3" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5991" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" fileListPanel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5991" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5991" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5991" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5991" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5991" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5991" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5991" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5991" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5991" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5991" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader4386" parent_class="4386" fileExt=".h" fileName="wxarray" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WXARRAY_H&amp;#010;#define WXARRAY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WXARRAY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxarray.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader4334" parent_class="4334" fileExt=".h" fileName="wxgrid" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WXGRID_H&amp;#010;#define WXGRID_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WXGRID_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxgrid.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader6249" parent_class="6249" fileExt=".h" fileName="drawingPanel" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef DRAWINGPANEL_H&amp;#010;#define DRAWINGPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;imagedrawingclass.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="6249" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class drawingPanel&amp;#010;drawingPanel is a parent class for every class which needs to draw  (especially for thumbnail previews) on the screen. since this is a rather complex task we have to source it out." />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="drawingPanel ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="12205" tag="tblock_0" canDelete="false" indentLevel="1" text=" imageDrawingClass drawingClass;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="instance of the " />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="12205" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="12205" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of drawingClass&amp;#010;instance of the &amp;#010;@return the value of drawingClass" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="12205" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="12205" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of drawingClass&amp;#010;instance of the &amp;#010;@param value the value of drawingClass" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //DRAWINGPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        drawingpanel.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Jul 4 2006 at 15:00:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="12205" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="instance of the " />
       </header>
       <ccfdeclarationcodeblock parent_id="12205" tag="tblock_0" canDelete="false" indentLevel="1" text=" imageDrawingClass drawingClass;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="instance of the " />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="12205" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="12205" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of drawingClass&amp;#010;instance of the &amp;#010;@return the value of drawingClass" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="12205" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="12205" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of drawingClass&amp;#010;instance of the &amp;#010;@param value the value of drawingClass" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="12071" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="12071" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" drawingPanel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="12071" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12071" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="12071" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12071" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="12071" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12071" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="12071" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12071" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="12071" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12071" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader6548" parent_class="6548" fileExt=".h" fileName="labelistpanel" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef LABELISTPANEL_H&amp;#010;#define LABELISTPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;genericlistpanel.h&quot;&amp;#010;#include &quot;wxarraystring.h&quot;&amp;#010;#include &quot;wxlistctrl.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //LABELISTPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        labelistpanel.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="7385" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="all labels we know of" />
       </header>
       <ccfdeclarationcodeblock parent_id="7385" tag="tblock_0" canDelete="false" indentLevel="1" text=" wxArrayString myLabelList;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="all labels we know of" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="7385" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="7385" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of myLabelList&amp;#010;all labels we know of&amp;#010;@return the value of myLabelList" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="7385" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="7385" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of myLabelList&amp;#010;all labels we know of&amp;#010;@param value the value of myLabelList" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="7399" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="for selecting the labels to show" />
       </header>
       <ccfdeclarationcodeblock parent_id="7399" tag="tblock_1" canDelete="false" indentLevel="1" text=" wxListCtrl labelSelector;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="for selecting the labels to show" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="7399" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="7399" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of labelSelector&amp;#010;for selecting the labels to show&amp;#010;@return the value of labelSelector" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="7399" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="7399" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of labelSelector&amp;#010;for selecting the labels to show&amp;#010;@param value the value of labelSelector" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="6792" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="6792" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" labeListPanel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="6792" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="6792" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="6792" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="6792" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="6792" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="6792" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="6792" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="6792" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="6792" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="6792" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="12637" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="12637" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" labeListPanel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="12637" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12637" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="12637" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12637" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="12637" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12637" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="12637" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12637" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="12637" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12637" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader6942" parent_class="6942" fileExt=".h" fileName="wxgridevent" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WXGRIDEVENT_H&amp;#010;#define WXGRIDEVENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WXGRIDEVENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxgridevent.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader7191" parent_class="7191" fileExt=".h" fileName="specificGridPanel" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef SPECIFICGRIDPANEL_H&amp;#010;#define SPECIFICGRIDPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="7191" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class specificGridPanel&amp;#010;existent since the whole grid handling is getting more complex.&amp;#010;&amp;#010;this is the panel parent for panels which do their listings in grids with specific field information (such as persons, labels, objects). so mainly for use in *ListPanels" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="specificGridPanel ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //SPECIFICGRIDPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        specificgridpanel.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Jul 4 2006 at 15:00:10&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader7413" parent_class="7413" fileExt=".h" fileName="wxcombobox" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WXCOMBOBOX_H&amp;#010;#define WXCOMBOBOX_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WXCOMBOBOX_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxcombobox.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader7453" parent_class="7453" fileExt=".h" fileName="wxlistctrl" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WXLISTCTRL_H&amp;#010;#define WXLISTCTRL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WXLISTCTRL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxlistctrl.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader7777" parent_class="7777" fileExt=".h" fileName="genericListPanel" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef GENERICLISTPANEL_H&amp;#010;#define GENERICLISTPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;drawingpanel.h&quot;&amp;#010;#include &quot;specificgridpanel.h&quot;&amp;#010;#include &quot;imagegridpanel.h&quot;&amp;#010;#include &quot;wxgridevent.h&quot;&amp;#010;#include &quot;wxcommandevent.h&quot;&amp;#010;#include &quot;wxbutton.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="7777" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class genericListPanel&amp;#010;the genericListPanel implements all similarities between fileListPanel, labeListPanel, personListPanel, objectListPanel and positionListPanel" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="genericListPanel ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="8701" tag="operation_8701" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="handels all events coming from the grid. this calls undefind (or only as empty &quot;templates&quot;) defined functions which are defined (or overridden) by the &quot;real&quot; panels" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="8742" tag="operation_8742" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="handels all events which are not coming from the grid. this calls undefind (or only as empty &quot;templates&quot;) defined functions which are defined (or overridden) by the &quot;real&quot; panels" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="8247" tag="tblock_0" canDelete="false" indentLevel="1" text=" wxButton editButton;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="edit the current image" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="8261" tag="tblock_1" canDelete="false" indentLevel="1" text=" wxButton deleteButton;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="delete the current image" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="8275" tag="tblock_2" canDelete="false" indentLevel="1" text=" wxButton viewButton;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="view the current image" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="8289" tag="tblock_3" canDelete="false" indentLevel="1" text=" wxButton setMultipleAttributeButton;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="button to open a dialog which allows to set a attribute on a number of images. for example if you made some night shots you don't want to set the label 'nightshot' for all those image - with this you can set them all with one click" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="8247" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="8247" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of editButton&amp;#010;edit the current image&amp;#010;@return the value of editButton" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="8247" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="8247" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of editButton&amp;#010;edit the current image&amp;#010;@param value the value of editButton" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="8261" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="8261" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of deleteButton&amp;#010;delete the current image&amp;#010;@return the value of deleteButton" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="8261" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="8261" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of deleteButton&amp;#010;delete the current image&amp;#010;@param value the value of deleteButton" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="8275" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="8275" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of viewButton&amp;#010;view the current image&amp;#010;@return the value of viewButton" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="8275" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="8275" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of viewButton&amp;#010;view the current image&amp;#010;@param value the value of viewButton" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="8289" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="8289" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of setMultipleAttributeButton&amp;#010;button to open a dialog which allows to set a attribute on a number of images. for example if you made some night shots you don't want to set the label 'nightshot' for all those image - with this you can set them all with one click&amp;#010;@return the value of setMultipleAttributeButton" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="8289" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="8289" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of setMultipleAttributeButton&amp;#010;button to open a dialog which allows to set a attribute on a number of images. for example if you made some night shots you don't want to set the label 'nightshot' for all those image - with this you can set them all with one click&amp;#010;@param value the value of setMultipleAttributeButton" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //GENERICLISTPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        genericListPanel.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Jul 4 2006 at 15:00:05&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="8247" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="edit the current image" />
       </header>
       <ccfdeclarationcodeblock parent_id="8247" tag="tblock_0" canDelete="false" indentLevel="1" text=" wxButton editButton;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="edit the current image" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="8247" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="8247" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of editButton&amp;#010;edit the current image&amp;#010;@return the value of editButton" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="8247" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="8247" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of editButton&amp;#010;edit the current image&amp;#010;@param value the value of editButton" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="8261" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="delete the current image" />
       </header>
       <ccfdeclarationcodeblock parent_id="8261" tag="tblock_1" canDelete="false" indentLevel="1" text=" wxButton deleteButton;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="delete the current image" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="8261" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="8261" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of deleteButton&amp;#010;delete the current image&amp;#010;@return the value of deleteButton" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="8261" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="8261" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of deleteButton&amp;#010;delete the current image&amp;#010;@param value the value of deleteButton" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="8275" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="view the current image" />
       </header>
       <ccfdeclarationcodeblock parent_id="8275" tag="tblock_2" canDelete="false" indentLevel="1" text=" wxButton viewButton;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="view the current image" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="8275" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="8275" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of viewButton&amp;#010;view the current image&amp;#010;@return the value of viewButton" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="8275" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="8275" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of viewButton&amp;#010;view the current image&amp;#010;@param value the value of viewButton" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="8289" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="button to open a dialog which allows to set a attribute on a number of images. for example if you made some night shots you don't want to set the label 'nightshot' for all those image - with this you can set them all with one click" />
       </header>
       <ccfdeclarationcodeblock parent_id="8289" tag="tblock_3" canDelete="false" indentLevel="1" text=" wxButton setMultipleAttributeButton;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="button to open a dialog which allows to set a attribute on a number of images. for example if you made some night shots you don't want to set the label 'nightshot' for all those image - with this you can set them all with one click" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="8289" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="8289" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of setMultipleAttributeButton&amp;#010;button to open a dialog which allows to set a attribute on a number of images. for example if you made some night shots you don't want to set the label 'nightshot' for all those image - with this you can set them all with one click&amp;#010;@return the value of setMultipleAttributeButton" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="8289" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="8289" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of setMultipleAttributeButton&amp;#010;button to open a dialog which allows to set a attribute on a number of images. for example if you made some night shots you don't want to set the label 'nightshot' for all those image - with this you can set them all with one click&amp;#010;@param value the value of setMultipleAttributeButton" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader8407" parent_class="8407" fileExt=".h" fileName="personlistpanel" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef PERSONLISTPANEL_H&amp;#010;#define PERSONLISTPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;genericlistpanel.h&quot;&amp;#010;#include &quot;wxarraystring.h&quot;&amp;#010;#include &quot;wxtextctrl.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //PERSONLISTPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        personlistpanel.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="8447" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="list of all persons we know of" />
       </header>
       <ccfdeclarationcodeblock parent_id="8447" tag="tblock_0" canDelete="false" indentLevel="1" text=" wxArrayString myPersonList;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="list of all persons we know of" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="8447" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="8447" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of myPersonList&amp;#010;list of all persons we know of&amp;#010;@return the value of myPersonList" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="8447" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="8447" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of myPersonList&amp;#010;list of all persons we know of&amp;#010;@param value the value of myPersonList" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="8568" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="the listctrl for selecting which persons should be shown" />
       </header>
       <ccfdeclarationcodeblock parent_id="8568" tag="tblock_1" canDelete="false" indentLevel="1" text=" wxTextCtrl personSelector;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="the listctrl for selecting which persons should be shown" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="8568" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="8568" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of personSelector&amp;#010;the listctrl for selecting which persons should be shown&amp;#010;@return the value of personSelector" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="8568" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="8568" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of personSelector&amp;#010;the listctrl for selecting which persons should be shown&amp;#010;@param value the value of personSelector" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="9541" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="9541" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" personListPanel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="9541" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9541" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="9541" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9541" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="9541" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9541" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="9541" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9541" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="9541" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9541" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="9573" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="9573" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" personListPanel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="9573" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9573" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="9573" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9573" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="9573" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9573" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="9573" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9573" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="9573" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9573" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="12666" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="12666" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" personListPanel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="12666" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12666" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="12666" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12666" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="12666" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12666" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="12666" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12666" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="12666" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12666" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader9085" parent_class="9085" fileExt=".h" fileName="objectlistpanel" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OBJECTLISTPANEL_H&amp;#010;#define OBJECTLISTPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;genericlistpanel.h&quot;&amp;#010;#include &quot;wxarraystring.h&quot;&amp;#010;#include &quot;wxtextctrl.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OBJECTLISTPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        objectlistpanel.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="9246" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="list of all objects we know of" />
       </header>
       <ccfdeclarationcodeblock parent_id="9246" tag="tblock_0" canDelete="false" indentLevel="1" text=" wxArrayString myObjectList;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="list of all objects we know of" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="9246" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="9246" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of myObjectList&amp;#010;list of all objects we know of&amp;#010;@return the value of myObjectList" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="9246" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="9246" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of myObjectList&amp;#010;list of all objects we know of&amp;#010;@param value the value of myObjectList" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="9325" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="the textfile to search for objects with" />
       </header>
       <ccfdeclarationcodeblock parent_id="9325" tag="tblock_1" canDelete="false" indentLevel="1" text=" wxTextCtrl objectSelector;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="the textfile to search for objects with" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="9325" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="9325" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of objectSelector&amp;#010;the textfile to search for objects with&amp;#010;@return the value of objectSelector" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="9325" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="9325" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of objectSelector&amp;#010;the textfile to search for objects with&amp;#010;@param value the value of objectSelector" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="9602" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="9602" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" objectListPanel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="9602" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9602" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="9602" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9602" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="9602" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9602" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="9602" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9602" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="9602" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9602" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="12695" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="12695" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" objectListPanel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="12695" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12695" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="12695" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12695" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="12695" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12695" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="12695" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12695" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="12695" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12695" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader9180" parent_class="9180" fileExt=".h" fileName="wxtextctrl" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WXTEXTCTRL_H&amp;#010;#define WXTEXTCTRL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WXTEXTCTRL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxtextctrl.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader9418" parent_class="9418" fileExt=".h" fileName="positionlistpanel" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef POSITIONLISTPANEL_H&amp;#010;#define POSITIONLISTPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;genericlistpanel.h&quot;&amp;#010;#include &quot;wxarraystring.h&quot;&amp;#010;#include &quot;wxtextctrl.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //POSITIONLISTPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        positionlistpanel.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="9445" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="all positions we know of" />
       </header>
       <ccfdeclarationcodeblock parent_id="9445" tag="tblock_0" canDelete="false" indentLevel="1" text=" wxArrayString myPositionList;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="all positions we know of" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="9445" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="9445" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of myPositionList&amp;#010;all positions we know of&amp;#010;@return the value of myPositionList" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="9445" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="9445" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of myPositionList&amp;#010;all positions we know of&amp;#010;@param value the value of myPositionList" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="9472" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="9472" tag="tblock_1" canDelete="false" indentLevel="1" text=" wxTextCtrl positionSelector;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="9472" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="9472" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="9472" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="9472" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="9644" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="9644" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" positionListPanel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="9644" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9644" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="9644" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9644" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="9644" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9644" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="9644" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9644" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="9644" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="9644" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="12724" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="12724" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" positionListPanel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="12724" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12724" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="12724" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12724" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="12724" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12724" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="12724" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12724" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="12724" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12724" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader10725" parent_class="10725" fileExt=".h" fileName="imageGridPanel" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef IMAGEGRIDPANEL_H&amp;#010;#define IMAGEGRIDPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="10725" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class imageGridPanel&amp;#010;this is the parent for panels which display information about the results of specific fields in a grid. so mainly *ListPanels" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="imageGridPanel ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //IMAGEGRIDPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        imagegridpanel.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Jul 4 2006 at 15:00:06&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader10981" parent_class="10981" fileExt=".h" fileName="genericresultpanel" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef GENERICRESULTPANEL_H&amp;#010;#define GENERICRESULTPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;imagegridpanel.h&quot;&amp;#010;#include &quot;drawingpanel.h&quot;&amp;#010;#include &quot;wxgridevent.h&quot;&amp;#010;#include &quot;wxcommandevent.h&quot;&amp;#010;#include &quot;wxstatictext.h&quot;&amp;#010;#include &quot;wxbutton.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //GENERICRESULTPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        genericresultpanel.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="11228" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="the full description of the currently selected image" />
       </header>
       <ccfdeclarationcodeblock parent_id="11228" tag="tblock_0" canDelete="false" indentLevel="1" text=" wxStaticText description;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="the full description of the currently selected image" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="11228" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="11228" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of description&amp;#010;the full description of the currently selected image&amp;#010;@return the value of description" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="11228" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="11228" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of description&amp;#010;the full description of the currently selected image&amp;#010;@param value the value of description" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="11255" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="11255" tag="tblock_1" canDelete="false" indentLevel="1" text=" wxButton editButton;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="11255" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="11255" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="11255" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="11255" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="11269" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="11269" tag="tblock_2" canDelete="false" indentLevel="1" text=" wxButton viewButton;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="11269" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="11269" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="11269" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="11269" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="11283" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="11283" tag="tblock_3" canDelete="false" indentLevel="1" text=" wxButton deleteButton;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="11283" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="11283" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="11283" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="11283" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader11517" parent_class="11517" fileExt=".h" fileName="imagedrawingclass" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef IMAGEDRAWINGCLASS_H&amp;#010;#define IMAGEDRAWINGCLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;wxwindow.h&quot;&amp;#010;#include &quot;wxwindowid.h&quot;&amp;#010;#include &quot;wximage.h&quot;&amp;#010;#include &quot;wxpaintevent.h&quot;&amp;#010;#include &quot;wxpaintdc.h&quot;&amp;#010;#include &quot;wxbitmap.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //IMAGEDRAWINGCLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        imagedrawingclass.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="11562" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="the (temporarily existing?) dc to draw the image" />
       </header>
       <ccfdeclarationcodeblock parent_id="11562" tag="tblock_0" canDelete="false" indentLevel="1" text=" wxPaintDC myDC;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="the (temporarily existing?) dc to draw the image" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="11562" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="11562" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of myDC&amp;#010;the (temporarily existing?) dc to draw the image&amp;#010;@return the value of myDC" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="11562" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="11562" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of myDC&amp;#010;the (temporarily existing?) dc to draw the image&amp;#010;@param value the value of myDC" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="11590" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="the bitmap we have converted" />
       </header>
       <ccfdeclarationcodeblock parent_id="11590" tag="tblock_1" canDelete="false" indentLevel="1" text=" wxBitmap myBitMap;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="the bitmap we have converted" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="11590" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="11590" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of myBitMap&amp;#010;the bitmap we have converted&amp;#010;@return the value of myBitMap" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="11590" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="11590" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of myBitMap&amp;#010;the bitmap we have converted&amp;#010;@param value the value of myBitMap" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="11631" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="the raw image our constructor gets" />
       </header>
       <ccfdeclarationcodeblock parent_id="11631" tag="tblock_2" canDelete="false" indentLevel="1" text=" wxImage myImage;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="the raw image our constructor gets" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="11631" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="11631" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of myImage&amp;#010;the raw image our constructor gets&amp;#010;@return the value of myImage" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="11631" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="11631" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of myImage&amp;#010;the raw image our constructor gets&amp;#010;@param value the value of myImage" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="12071" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="12071" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" imageDrawingClass ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="12071" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12071" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="12071" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12071" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="12071" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12071" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="12071" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12071" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="12071" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="12071" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader11563" parent_class="11563" fileExt=".h" fileName="wxpaintdc" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WXPAINTDC_H&amp;#010;#define WXPAINTDC_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WXPAINTDC_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxpaintdc.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader11604" parent_class="11604" fileExt=".h" fileName="wxbitmap" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WXBITMAP_H&amp;#010;#define WXBITMAP_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WXBITMAP_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxbitmap.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader11632" parent_class="11632" fileExt=".h" fileName="wximage" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WXIMAGE_H&amp;#010;#define WXIMAGE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WXIMAGE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wximage.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader11740" parent_class="11740" fileExt=".h" fileName="wxwindowid" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WXWINDOWID_H&amp;#010;#define WXWINDOWID_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WXWINDOWID_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxwindowid.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader11991" parent_class="11991" fileExt=".h" fileName="wxpaintevent" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WXPAINTEVENT_H&amp;#010;#define WXPAINTEVENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WXPAINTEVENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxpaintevent.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader13210" parent_class="13210" fileExt=".h" fileName="genericfilepanel" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef GENERICFILEPANEL_H&amp;#010;#define GENERICFILEPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;wxcommandevent.h&quot;&amp;#010;#include &quot;wxstatictext.h&quot;&amp;#010;#include &quot;wxstaticbox.h&quot;&amp;#010;#include &quot;wxtextctrl.h&quot;&amp;#010;#include &quot;wxlistctrl.h&quot;&amp;#010;#include &quot;wxbutton.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //GENERICFILEPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        genericfilepanel.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:19&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="13519" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13519" tag="tblock_0" canDelete="false" indentLevel="1" text=" wxStaticText pathText;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13519" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="13519" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13519" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="13519" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13546" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13546" tag="tblock_2" canDelete="false" indentLevel="1" text=" wxStaticText titleText;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13546" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="13546" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13546" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="13546" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13574" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13574" tag="tblock_5" canDelete="false" indentLevel="1" text=" wxStaticBox descriptionBox;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13574" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="13574" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13574" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="13574" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13629" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13629" tag="tblock_8" canDelete="false" indentLevel="1" text=" wxStaticBox categoryBox;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13629" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="13629" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13629" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="13629" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13643" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13643" tag="tblock_11" canDelete="false" indentLevel="1" text=" wxStaticBox labelBox;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13643" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="13643" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13643" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="13643" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13657" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13657" tag="tblock_14" canDelete="false" indentLevel="1" text=" wxStaticBox personBox;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13657" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="13657" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13657" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="13657" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13684" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13684" tag="tblock_17" canDelete="false" indentLevel="1" text=" wxStaticBox objectBox;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13684" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="13684" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13684" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="13684" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13698" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13698" tag="tblock_20" canDelete="false" indentLevel="1" text=" wxStaticBox locationBox;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13698" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="13698" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13698" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="13698" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13712" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13712" tag="tblock_23" canDelete="false" indentLevel="1" text=" wxStaticBox positionBox;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13712" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="13712" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13712" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="13712" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13752" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13752" tag="tblock_26" canDelete="false" indentLevel="1" text=" wxTextCtrl descriptionInput;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13752" tag="hblock_tag_27" canDelete="false" indentLevel="1" classfield_id="13752" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13752" tag="hblock_tag_28" canDelete="false" indentLevel="1" classfield_id="13752" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13766" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13766" tag="tblock_29" canDelete="false" indentLevel="1" text=" wxTextCtrl categoryInput;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13766" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="13766" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13766" tag="hblock_tag_31" canDelete="false" indentLevel="1" classfield_id="13766" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13793" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13793" tag="tblock_32" canDelete="false" indentLevel="1" text=" wxTextCtrl labelInput;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13793" tag="hblock_tag_33" canDelete="false" indentLevel="1" classfield_id="13793" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13793" tag="hblock_tag_34" canDelete="false" indentLevel="1" classfield_id="13793" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13833" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13833" tag="tblock_35" canDelete="false" indentLevel="1" text=" wxTextCtrl personInput;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13833" tag="hblock_tag_36" canDelete="false" indentLevel="1" classfield_id="13833" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13833" tag="hblock_tag_37" canDelete="false" indentLevel="1" classfield_id="13833" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13847" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13847" tag="tblock_38" canDelete="false" indentLevel="1" text=" wxTextCtrl objectInput;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13847" tag="hblock_tag_39" canDelete="false" indentLevel="1" classfield_id="13847" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13847" tag="hblock_tag_40" canDelete="false" indentLevel="1" classfield_id="13847" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13861" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13861" tag="tblock_41" canDelete="false" indentLevel="1" text=" wxTextCtrl locationIInput;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13861" tag="hblock_tag_42" canDelete="false" indentLevel="1" classfield_id="13861" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13861" tag="hblock_tag_43" canDelete="false" indentLevel="1" classfield_id="13861" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13875" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13875" tag="tblock_44" canDelete="false" indentLevel="1" text=" wxTextCtrl positionInput;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13875" tag="hblock_tag_45" canDelete="false" indentLevel="1" classfield_id="13875" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13875" tag="hblock_tag_46" canDelete="false" indentLevel="1" classfield_id="13875" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13928" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13928" tag="tblock_47" canDelete="false" indentLevel="1" text=" wxListCtrl categoryOldList;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13928" tag="hblock_tag_48" canDelete="false" indentLevel="1" classfield_id="13928" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13928" tag="hblock_tag_49" canDelete="false" indentLevel="1" classfield_id="13928" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13942" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13942" tag="tblock_50" canDelete="false" indentLevel="1" text=" wxListCtrl labelOldList;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13942" tag="hblock_tag_51" canDelete="false" indentLevel="1" classfield_id="13942" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13942" tag="hblock_tag_52" canDelete="false" indentLevel="1" classfield_id="13942" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13956" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13956" tag="tblock_53" canDelete="false" indentLevel="1" text=" wxListCtrl personOldList;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13956" tag="hblock_tag_54" canDelete="false" indentLevel="1" classfield_id="13956" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13956" tag="hblock_tag_55" canDelete="false" indentLevel="1" classfield_id="13956" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13970" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13970" tag="tblock_56" canDelete="false" indentLevel="1" text=" wxListCtrl objectOldList;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13970" tag="hblock_tag_57" canDelete="false" indentLevel="1" classfield_id="13970" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13970" tag="hblock_tag_58" canDelete="false" indentLevel="1" classfield_id="13970" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="13984" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="13984" tag="tblock_59" canDelete="false" indentLevel="1" text=" wxListCtrl locationOldList;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="13984" tag="hblock_tag_60" canDelete="false" indentLevel="1" classfield_id="13984" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="13984" tag="hblock_tag_61" canDelete="false" indentLevel="1" classfield_id="13984" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14025" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14025" tag="tblock_62" canDelete="false" indentLevel="1" text=" wxListCtrl positionOldList;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14025" tag="hblock_tag_63" canDelete="false" indentLevel="1" classfield_id="14025" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14025" tag="hblock_tag_64" canDelete="false" indentLevel="1" classfield_id="14025" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14039" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14039" tag="tblock_65" canDelete="false" indentLevel="1" text=" wxStaticText catgorySelected;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14039" tag="hblock_tag_66" canDelete="false" indentLevel="1" classfield_id="14039" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14039" tag="hblock_tag_67" canDelete="false" indentLevel="1" classfield_id="14039" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14054" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14054" tag="tblock_68" canDelete="false" indentLevel="1" text=" wxListCtrl labelSelected;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14054" tag="hblock_tag_69" canDelete="false" indentLevel="1" classfield_id="14054" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14054" tag="hblock_tag_70" canDelete="false" indentLevel="1" classfield_id="14054" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14068" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14068" tag="tblock_71" canDelete="false" indentLevel="1" text=" wxListCtrl personSelected;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14068" tag="hblock_tag_72" canDelete="false" indentLevel="1" classfield_id="14068" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14068" tag="hblock_tag_73" canDelete="false" indentLevel="1" classfield_id="14068" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14082" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14082" tag="tblock_74" canDelete="false" indentLevel="1" text=" wxListCtrl objectSelected;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14082" tag="hblock_tag_75" canDelete="false" indentLevel="1" classfield_id="14082" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14082" tag="hblock_tag_76" canDelete="false" indentLevel="1" classfield_id="14082" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14109" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14109" tag="tblock_77" canDelete="false" indentLevel="1" text=" wxListCtrl locationSelected;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14109" tag="hblock_tag_78" canDelete="false" indentLevel="1" classfield_id="14109" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14109" tag="hblock_tag_79" canDelete="false" indentLevel="1" classfield_id="14109" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14123" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14123" tag="tblock_80" canDelete="false" indentLevel="1" text=" wxListCtrl positionSelected;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14123" tag="hblock_tag_81" canDelete="false" indentLevel="1" classfield_id="14123" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14123" tag="hblock_tag_82" canDelete="false" indentLevel="1" classfield_id="14123" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14176" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14176" tag="tblock_83" canDelete="false" indentLevel="1" text=" wxButton categoryAdd;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14176" tag="hblock_tag_84" canDelete="false" indentLevel="1" classfield_id="14176" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14176" tag="hblock_tag_85" canDelete="false" indentLevel="1" classfield_id="14176" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14190" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14190" tag="tblock_86" canDelete="false" indentLevel="1" text=" wxButton labelAdd;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14190" tag="hblock_tag_87" canDelete="false" indentLevel="1" classfield_id="14190" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14190" tag="hblock_tag_88" canDelete="false" indentLevel="1" classfield_id="14190" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14217" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14217" tag="tblock_89" canDelete="false" indentLevel="1" text=" wxButton personAdd;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14217" tag="hblock_tag_90" canDelete="false" indentLevel="1" classfield_id="14217" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14217" tag="hblock_tag_91" canDelete="false" indentLevel="1" classfield_id="14217" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14231" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14231" tag="tblock_92" canDelete="false" indentLevel="1" text=" wxButton objectAdd;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14231" tag="hblock_tag_93" canDelete="false" indentLevel="1" classfield_id="14231" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14231" tag="hblock_tag_94" canDelete="false" indentLevel="1" classfield_id="14231" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14245" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14245" tag="tblock_95" canDelete="false" indentLevel="1" text=" wxButton locationAdd;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14245" tag="hblock_tag_96" canDelete="false" indentLevel="1" classfield_id="14245" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14245" tag="hblock_tag_97" canDelete="false" indentLevel="1" classfield_id="14245" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14259" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14259" tag="tblock_98" canDelete="false" indentLevel="1" text=" wxButton positionAdd;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14259" tag="hblock_tag_99" canDelete="false" indentLevel="1" classfield_id="14259" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14259" tag="hblock_tag_100" canDelete="false" indentLevel="1" classfield_id="14259" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14299" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14299" tag="tblock_101" canDelete="false" indentLevel="1" text=" wxButton labelSelect;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14299" tag="hblock_tag_102" canDelete="false" indentLevel="1" classfield_id="14299" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14299" tag="hblock_tag_103" canDelete="false" indentLevel="1" classfield_id="14299" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14313" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14313" tag="tblock_104" canDelete="false" indentLevel="1" text=" wxButton personSelect;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14313" tag="hblock_tag_105" canDelete="false" indentLevel="1" classfield_id="14313" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14313" tag="hblock_tag_106" canDelete="false" indentLevel="1" classfield_id="14313" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14327" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14327" tag="tblock_107" canDelete="false" indentLevel="1" text=" wxButton objectSelect;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14327" tag="hblock_tag_108" canDelete="false" indentLevel="1" classfield_id="14327" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14327" tag="hblock_tag_109" canDelete="false" indentLevel="1" classfield_id="14327" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14341" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14341" tag="tblock_110" canDelete="false" indentLevel="1" text=" wxButton locationSelect;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14341" tag="hblock_tag_111" canDelete="false" indentLevel="1" classfield_id="14341" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14341" tag="hblock_tag_112" canDelete="false" indentLevel="1" classfield_id="14341" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14355" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14355" tag="tblock_113" canDelete="false" indentLevel="1" text=" wxButton positionSelect;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14355" tag="hblock_tag_114" canDelete="false" indentLevel="1" classfield_id="14355" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14355" tag="hblock_tag_115" canDelete="false" indentLevel="1" classfield_id="14355" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader13378" parent_class="13378" fileExt=".h" fileName="multiattributeinput" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MULTIATTRIBUTEINPUT_H&amp;#010;#define MULTIATTRIBUTEINPUT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MULTIATTRIBUTEINPUT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        multiattributeinput.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader13575" parent_class="13575" fileExt=".h" fileName="wxstaticbox" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WXSTATICBOX_H&amp;#010;#define WXSTATICBOX_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WXSTATICBOX_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxstaticbox.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader13985" parent_class="13985" fileExt=".h" fileName="wxlistctrl\" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WXLISTCTRL\_H&amp;#010;#define WXLISTCTRL\_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WXLISTCTRL\_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        wxlistctrl\.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="-1" id="cppheader14648" parent_class="14648" fileExt=".h" fileName="singlefilepanel" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef SINGLEFILEPANEL_H&amp;#010;#define SINGLEFILEPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;genericfilepanel.h&quot;&amp;#010;#include &quot;imageobject.h&quot;&amp;#010;#include &quot;fileindex.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //SINGLEFILEPANEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;                        singlefilepanel.h - Copyright daddel9&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/kde/3.5/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Apr 13 2006 at 11:59:46&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="14998" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14998" tag="tblock_0" canDelete="false" indentLevel="1" text=" imageObject myImageObject;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14998" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="14998" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14998" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="14998" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15053" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15053" tag="tblock_2" canDelete="false" indentLevel="1" text=" fileIndex myFileIndex;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15053" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="15053" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15053" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="15053" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14871" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14871" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" singleFilePanel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14871" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14871" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14871" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14871" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="14871" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14871" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="14871" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14871" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="14871" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14871" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14900" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14900" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" singleFilePanel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14900" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14900" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14900" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14900" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="14900" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14900" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="14900" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14900" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="14900" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14900" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="14942" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="14942" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" singleFilePanel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="14942" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14942" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="14942" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14942" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="14942" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14942" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="14942" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14942" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="14942" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="14942" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
   </codegenerator>
  </codegeneration>
 </XMI.extensions>
</XMI>
